<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PathwaysLib</name>
    </assembly>
    <members>
        <member name="T:PathwaysLib.AQI.Path.GuiPathQueryDataOut">
            <summary>
            Data that is passed out of the GUI renderer to the rest of the interface
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:PathwaysLib.AQI.PathwaysAQIUtil" -->
        <member name="M:PathwaysLib.AQI.PathwaysAQIUtil.PreprocessSqlArgValue(System.Object)">
            <summary>
            Preprocess user input for inclusion in a generated SQL query
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.PathwaysAQIUtil.ExecuteSqlQuery(System.Data.DataTable@,System.String)">
            <summary>
            Execute a SQL query
            </summary>
            <param name="dataTable"></param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.AQI.PathwaysAQIUtil.AQIDataURL">
            <summary>
            The full URL for AQI autocomplete data service.
            </summary>
        </member>
        <member name="P:PathwaysLib.AQI.PathwaysAQIUtil.AQIForwardLink">
            <summary>
            Format string specifying an HTML link to an object using a typed object's ID
            </summary>
        </member>
        <member name="P:PathwaysLib.AQI.PathwaysAQIUtil.Instance">
            <summary>
            Gets the singleton instance of the Pathways AQI util class.
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.GuiQueryData">
            <summary>
            Stores data that is provided to the GUI
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathPWLinksQuerier">
            <summary>
            A querier for the path query on the pathway links graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerierPWLinks">
            <summary>
            A querier that wraps the functionality for the pathway links graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerier">
            <summary>
            A querier that wraps the functionality for the path-based queries
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathMetabolicNWQuerier">
            <summary>
            A querier for the path query on the metabolic network graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerierMetabolicNW">
            <summary>
            A querier that wraps the functionality for the metabolic network graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathNeighborhoodMetabolicNWQuerier">
            <summary>
            A querier for the neighborhood query on the metabolic network graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathNeighborhoodPWLinksQuerier">
            <summary>
            A querier for the neighborhood query on the pathway links graph
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerierUtilities">
            <summary>
            Utilities that are used in each path querier
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.FetchIdsFromName(System.String,PathwaysLib.AQI.Path.PathQuerierUtilities.EntityType,System.Guid,System.String)">
            <summary>
            Gets the node's ID from the database given the type and the name
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="idMissingError"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.FetchUseCommonMolecules(AQILib.QNode)">
            <summary>
            Grab the boolean flag for common molecules from the XML
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.FetchSearchDirection(AQILib.QNode)">
            <summary>
            Grab the EdgeType flag for the search direction from the XML
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.FetchLengths(AQILib.QNode,System.Int32@,System.Int32@)">
            <summary>
            Grab the min/max length from the XML
            </summary>
            <param name="node"></param>
            <param name="minLength"></param>
            <param name="maxLength"></param>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.GetIntConfigValue(System.String,System.Int32)">
            <summary>
            Grab an integer configuration value from the .config file
            </summary>
            <param name="key"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathQuerierUtilities.ConnectToGraphService(PathQueryLib.IManager@)">
            <summary>
            Start an IPC remoting channel to connect to the GraphService
            </summary>
            <param name="manager"></param>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerierUtilities.EntityType">
            <summary>
            Encapsulates the different kinds of entities
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQuerierException">
            <summary>
            An exception thrown by the path querier if an error is encountered
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathQueryResults">
            <summary>
            A container to wrap the results from a path-based query.
            Holds both the path query engine's results and an error string if an error occured.
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.Path.PathRenderer">
            <summary>
            Renderer for the path-based queries (including both path and neighborhood)
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathRenderer.RenderNeighborhood(AQILib.QNode,PathQueryLib.QueryNeighborhoodResults,AQILib.IGuiData,AQILib.IGuiData@)">
            <summary>
            Render a set of neighborhood query results
            </summary>
            <param name="rootNode"></param>
            <param name="neighborhoodResults"></param>
            <param name="data"></param>
            <param name="dataOut"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathRenderer.RenderPath(AQILib.QNode,PathQueryLib.QueryPathResults,AQILib.IGuiData,AQILib.IGuiData@)">
            <summary>
            Render a set of path query results
            </summary>
            <param name="rootNode"></param>
            <param name="pathResults"></param>
            <param name="data"></param>
            <param name="dataOut"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.AQI.Path.PathRenderer.grid_ItemDataBound(System.Object,System.Web.UI.WebControls.DataGridItemEventArgs)">
            <summary>
            A helper function that creates the effect of a single path having a single spanning row for the length, even though there are several rows for the node data
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PathwaysLib.AQI.QInputMoleculeAmount.#ctor">
            <summary>
            Default constructor: Defines a default input name and renderer
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.QInputMoleculeAmount.#ctor(PathwaysLib.AQI.QInputMoleculeAmount)">
            <summary>
            A copy constructor used for cloning
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:PathwaysLib.AQI.QNodeMolecule">
            <summary>
            A query node for molecular entities
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.QNodeMolecule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.QNodeOrganism">
            <summary>
            A query node for organisms
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.QNodeOrganism.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.QNodePathway">
            <summary>
            A query node for pathways
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.QNodePathway.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PathwaysLib.AQI.QNodeProcess">
            <summary>
            A query node for processes
            </summary>
        </member>
        <member name="M:PathwaysLib.AQI.QNodeProcess.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:PathwaysLib.Exceptions.AjaxMethodException">
            <summary>
            An exception class for exceptions thrown by AjaxMethod
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.AjaxMethodException.#ctor">
            <summary>
            An exception thrown by an AjaxMethod
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.AjaxMethodException.#ctor(System.String)">
            <summary>
            An exception thrown by an AjaxMethod method
            </summary>
            <param name="message">The message to pass</param>
        </member>
        <member name="M:PathwaysLib.Exceptions.AjaxMethodException.#ctor(System.String,System.Exception)">
            <summary>
            An exception thrown by an AjaxMethod method
            </summary>
            <param name="message">The message to pass</param>
            <param name="innerException">The calling exception</param>
        </member>
        <member name="M:PathwaysLib.Exceptions.AjaxMethodException.#ctor(System.String,System.Object[])">
            <summary>
            An exception thrown by an AjaxMethod method
            </summary>
            <param name="message">The message to pass</param>
            <param name="args">Arguments to send along with the exception</param>
        </member>
        <member name="T:PathwaysLib.Exceptions.QueryException">
            <summary>
            An exception class for exceptions thrown by built-in queries
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryException.#ctor">
            <summary>
            An exception thrown by a built-in query
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryException.#ctor(System.String)">
            <summary>
            An exception thrown by a built-in query
            </summary>
            <param name="message">The message to pass</param>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryException.#ctor(System.String,System.Exception)">
            <summary>
            An exception thrown by a built-in query
            </summary>
            <param name="message">The message to pass</param>
            <param name="innerException">The calling exception</param>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryException.#ctor(System.String,System.Object[])">
            <summary>
            An exception thrown by a built-in query
            </summary>
            <param name="message">The message to pass</param>
            <param name="args">Arguments to send along with the exception</param>
        </member>
        <member name="T:PathwaysLib.Exceptions.DataModelException">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/PathwaysLib/Exceptions/DataModelException.cs</filepath>
            		<creation>2005-06-10</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Exceptions/DataModelException.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Thrown when an exceptional condition occurs in the data model code (such as from ServerObjects).
             </summary>
        </member>
        <member name="T:PathwaysLib.Exceptions.PathwayException">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/PathwaysLib/Exceptions/PathwayException.cs</filepath>
            		<creation>2005-06-08</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Exceptions/PathwayException.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Custom exception base class.
             </summary>
             <remarks>
             Exceptions specific to the pathways system should derive from this class.
             </remarks>
        </member>
        <member name="M:PathwaysLib.Exceptions.PathwayException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.PathwayException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.PathwayException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.PathwayException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.DataModelException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.DataModelException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.DataModelException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.DataModelException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PathwaysLib.Exceptions.DBWrapperException">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/PathwaysLib/Exceptions/DBWrapperException.cs</filepath>
            		<creation>2005-06-15</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Exceptions/DBWrapperException.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Thrown by the DBWrapper class to indicate a database-related error.
             </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.DBWrapperException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.DBWrapperException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.DBWrapperException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.DBWrapperException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PathwaysLib.Exceptions.GraphException">
            <summary>
            An exception class for exceptions thrown by graph-related methods
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.GraphException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.GraphException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.GraphException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.GraphException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PathwaysLib.Exceptions.InvalidColumnException">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/PathwaysLib/Exceptions/InvalidColumnException.cs</filepath>
            		<creation>2005-06-15</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Exceptions/InvalidColumnException.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Thrown by the DBWrapper class to indicate that the user-request column in DBRow does not exist.
             </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.InvalidColumnException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.InvalidColumnException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.InvalidColumnException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.InvalidColumnException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PathwaysLib.Exceptions.LinkException">
            <summary>
            An exception class for exceptions thrown by LinkHelper methods
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.LinkException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.LinkException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.LinkException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.LinkException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PathwaysLib.Exceptions.QueryTimeoutException">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/PathwaysLib/Exceptions/QueryTimeoutException.cs</filepath>
            		<creation>2005-06-15</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Exceptions/QueryTimeoutException.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Thrown when a database query fails to execute due to a query timeout.
             </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryTimeoutException.#ctor">
            <summary>
            Default constructor with no additional description.
            </summary>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryTimeoutException.#ctor(System.String)">
            <summary>
            Create an exception with the following detailed description.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryTimeoutException.#ctor(System.String,System.Object[])">
            <summary>
            Create an exception with the following detailed description from a format string.
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:PathwaysLib.Exceptions.QueryTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception with the following detailed description that wraps another exception. 
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateSBModelXml">
            <summary>
            Generate System Biology Model xml.
            By Xinjian Qi 03/09/09
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateDataXml(System.Collections.Generic.List{System.String})">
            <summary>
            Creates a xml representation of the data in the cache for visualization purposes, but only for the selected tissues
            this method is used in the metabolomics project
            </summary>
            <param name="tissues"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateMetabolomicsMoleculeXml(System.Xml.XmlDocument,System.Guid,PathwaysLib.GraphObjects.IGraphMolecularEntity)">
            <summary>
            Generates xml representation of a molecule for the metabolomics project 
            </summary>
            <param name="doc"></param>
            <param name="graphNodeId"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateMetabolomicsMoleculeXml(System.Xml.XmlDocument,System.Guid,PathwaysLib.GraphObjects.IGraphMolecularEntity,System.Collections.Generic.List{System.String})">
            <summary>
            Generates xml representation of a molecule for the metabolomics project
            xml  represetation is generated only if the molecule belong to the selected tissues
            </summary>
            <param name="doc"></param>
            <param name="graphNodeId"></param>
            <param name="me"></param>
            <param name="tissues"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateMetabolomicsGenericProcessXml(System.Xml.XmlDocument,System.Guid,PathwaysLib.GraphObjects.IGraphGenericProcess,System.Collections.Generic.List{System.String})">
            <summary>
            Generates XML representation of a process for the metabolomics project 
            This method is to be used if tissue restrictions are necessary
            </summary>
            <param name="doc"></param>
            <param name="graphNodeId"></param>
            <param name="p"></param>
            <param name="tissues"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateMetabolomicsPathwayXml(System.Xml.XmlDocument,PathwaysLib.GraphObjects.IGraphPathway,System.Xml.XmlElement,System.Boolean,System.Boolean)">
            <summary>
            Generates XML representation of a pathway for the metabolomics project
            </summary>
            <param name="doc"></param>
            <param name="pw"></param>
            <param name="mols"></param>
            <param name="expanded"></param>
            <param name="linkingPathway"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.GenerateMetabolomicsPathwayXml(System.Xml.XmlDocument,PathwaysLib.GraphObjects.IGraphPathway,System.Xml.XmlElement,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Generates XML representation of a pathway for the metabolomics project
            This method is to be used if tissue restrictions are necessary
            </summary>
            <param name="doc"></param>
            <param name="pw"></param>
            <param name="mols"></param>
            <param name="expanded"></param>
            <param name="linkingPathway"></param>
            <param name="tissues"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.FillCacheForMolecularEntity(System.Guid)">
            <summary>
            Loads all data required to draw a molecule.  This is typically just loading the molecule object.
            </summary>
            <param name="molecularEntityId"></param>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphObjectCache.FillCacheForExpandedPathway(System.Guid)">
            <summary>
            Loads all data required to draw a pathway in as few queries as possible.
            </summary>
            <param name="pathwayId"></param>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphServerObjectCache.FillCacheForMolecularEntity(System.Guid)">
            <summary>
            Loads all data required to draw a molecule.  This is typically just loading the molecule object.
            </summary>
            <param name="molecularEntityId"></param>
        </member>
        <member name="M:PathwaysLib.GraphObjects.GraphServerObjectCache.FillCacheForExpandedPathway(System.Guid)">
            <summary>
            Loads all data required to draw a pathway in as few queries as possible.
            
            (9-15 Queries)
            </summary>
            <param name="pathwayId"></param>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphMolecularEntity.ID">
            <summary>
            Get/set the molecular entity ID.
            This is virtual so the derived class
            can override it to change the value in both rows.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphMolecularEntity.Name">
            <summary>
            Get/set the molecular entity name.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphBasicMolecule.IsCommon">
            <summary>
            Get/set whether the molecule is common or not.  This wraps the common_molecules database table.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphCompartment.Name">
            <summary>
            Get/set the compartment name.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphModel.Name">
            <summary>
            Get/set the model name.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphOrganismGroup.ID">
            <summary>
            Get/set the organism group ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphObjects.IGraphPathway.GetAllIGraphOrganismGroups">
            <summary>
            Returns all organisms and organism groups that contain this pathway (i.e. contain one of its processes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.GraphObjects.IGraphPathway.GetLinkingEntities">
            <summary>
            Returns an array of the entities that link this pathway to other pathways
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphPathway.ID">
            <summary>
            Get/set the Pathway ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphPathway.Name">
            <summary>
            Get/set the Pathway name.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcess.Name">
            <summary>
            Get the Process name.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcess.Reversible">
            <summary>
            Gets the Process reversibility.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcess.ID">
            <summary>
            Get/set the Process ID or GenericProcess ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcess.GenericProcessID">
            <summary>
            Get/set the generic process id.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcess.IsGenericProcess">
            <summary>
            Returns true if this is a generic process (i.e. a union
            of specific processes with the same GenericProcessId).
            This also implies that ID is the same as GenericProcessID if true.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcessEntity.ProcessID">
            <summary>
            ID of Process in process entities relation
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcessEntity.EntityID">
            <summary>
            ID of molecular entity in process entities relation
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphProcessEntity.Role">
            <summary>
            Entity role in a process as a string.  Wraps RoleId.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphObjects.IGraphSpecies.Name">
            <summary>
            Get/set the model name.
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourceCompartment">
            <summary>
            IGraphSource implementation for processes
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.IGraphSource">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysWeb/Utilities/IGraphSource.cs</filepath>
            		<creation>2005/11/28</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: xjqi $</cvs_author>
            			<cvs_date>$Date: 2009/12/22 19:13:31 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/GraphSources/IGraphSource.cs,v 1.6 2009/12/22 19:13:31 xjqi Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.6 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Common interface for components that generate data that can be visualized
             using the new generic graph drawing functionality.
             </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.CollapsedPathways">
            <summary>
            A list of the IDs of collapsed pathways nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.ExpandedPathways">
            <summary>
            A list of the IDs of fully expanded pathways to add to the graph (i.e. add all the processes in the pathway)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.GenericProcessGraphIDs">
            <summary>
            A list of the IDs of generic processes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.MoleculeGraphIDs">
            <summary>
            A lsit of the IDs of molecules to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.Layout">
            <summary>
            Specifies the layout algorithm to use. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.SourceNode">
            <summary>
            Specifies the source node for hierarchical layout in neighborhood queries. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.InitialOrganism">
            <summary>
            The name of the initial organism/group to display on the graph (default: "unspecified")
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.GraphType">
            <summary>
            The graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.GraphTitle">
            <summary>
            The graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.Colorings">
            <summary>
            A list of graph coloring pairs (i.e. GUID ID of the object and the color to draw it in)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.IGraphSource.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphSourceCompartment.#ctor(System.Guid,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.CollapsedPathways">
            <summary>
            Get collapsed pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.GenericProcessGraphIDs">
            <summary>
            Get generic processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.MoleculeGraphIDs">
            <summary>
            Get molecules
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.Layout">
            <summary>
            Whether this is a hierarchical layout or not
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.InitialOrganism">
            <summary>
            Get the initial organism
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.GraphTitle">
            <summary>
            Get the graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.GraphType">
            <summary>
            Get the graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.Colorings">
            <summary>
            Get coloring information
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceCompartment.SourceNode">
            <summary>
            The source node in the graph
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourceFullscreen">
            <summary>
            IGraphSource implementation for fullscreen graphs
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphSourceFullscreen.#ctor(System.Guid,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.CollapsedPathways">
            <summary>
            Get collapsed pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.ExpandedPathways">
            <summary>
            Get expanded pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.GenericProcessGraphIDs">
            <summary>
            Get generic processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.MoleculeGraphIDs">
            <summary>
            Get molecules
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.Layout">
            <summary>
            Whether this is a hierarchical layout or not
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.InitialOrganism">
            <summary>
            Get/set the initial organism
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.GraphTitle">
            <summary>
            Get/set the graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.GraphType">
            <summary>
            Get/set the graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.Colorings">
            <summary>
            Get the graph colorings
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceFullscreen.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourceModel">
            <summary>
            IGraphSource implementation for processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceModel.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceModel.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceModel.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceModel.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceModel.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourcePathway">
            <summary>
            IGraphSource implementation for pathways
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphSourcePathway.#ctor(System.Guid,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.CollapsedPathways">
            <summary>
            Get collapsed pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.ExpandedPathways">
            <summary>
            Get expanded pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.GenericProcessGraphIDs">
            <summary>
            Get generic processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.MoleculeGraphIDs">
            <summary>
            Get molecules
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.Layout">
            <summary>
            Whether this is a hierarchical layout or not
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.InitialOrganism">
            <summary>
            Get the initial organism
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.GraphTitle">
            <summary>
            Get the graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.GraphType">
            <summary>
            Get the graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.Colorings">
            <summary>
            Get coloring information
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourcePathway.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourceProcess">
            <summary>
            IGraphSource implementation for processes
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphSourceProcess.#ctor(System.Guid,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.CollapsedPathways">
            <summary>
            Get collapsed pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.ExpandedPathways">
            <summary>
            Get expanded pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.GenericProcessGraphIDs">
            <summary>
            Get generic processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.MoleculeGraphIDs">
            <summary>
            Get molecules
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.Layout">
            <summary>
            Whether this is a hierarchical layout or not
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.InitialOrganism">
            <summary>
            Get the initial organism
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.GraphTitle">
            <summary>
            Get the graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.GraphType">
            <summary>
            Get the graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.Colorings">
            <summary>
            Get coloring information
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceProcess.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphSourceRichContent">
            <summary>
            IGraphSource implementation for rich content
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphSourceRichContent.#ctor(System.Guid,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.CollapsedPathways">
            <summary>
            Gets collapsed pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.ExpandedPathways">
            <summary>
            Gets expanded pathways
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.GenericProcessGraphIDs">
            <summary>
            Gets generic processes
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.MoleculeGraphIDs">
            <summary>
            Gets molecules
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.Layout">
            <summary>
            Whether to display in a hierarchical layout
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.InitialOrganism">
            <summary>
            Gets/sets the inital organism
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.GraphTitle">
            <summary>
            Gets/sets the graph title
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.GraphType">
            <summary>
            Gets/sets the graph type
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.Colorings">
            <summary>
            Gets the graph coloring
            </summary>
        </member>
        <member name="P:PathwaysLib.GraphSources.GraphSourceRichContent.LegendVisible">
            <summary>
            Display color legend at the bottom of the graph.
            </summary>
        </member>
        <member name="T:PathwaysLib.GraphSources.GraphColoring">
            <summary>
            Information regarding how graphs should be colored.
            </summary>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphColoring.#ctor(System.Guid,System.Drawing.Color,System.String)">
            <summary>
            Constructor with explicit coloring information
            </summary>
            <param name="id"></param>
            <param name="color"></param>
            <param name="description"></param>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphColoring.#ctor(System.String)">
            <summary>
            Constructor with coloring information stored in a string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:PathwaysLib.GraphSources.GraphColoring.ToString">
            <summary>
            ToString override
            </summary>
            <returns></returns>
        </member>
        <member name="F:PathwaysLib.GraphSources.GraphColoring.ID">
            <summary>
            The item's ID
            </summary>
        </member>
        <member name="F:PathwaysLib.GraphSources.GraphColoring.Color">
            <summary>
            The item's color
            </summary>
        </member>
        <member name="F:PathwaysLib.GraphSources.GraphColoring.Description">
            <summary>
            The item's description
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.DebugLogger">
            <summary>
            Static logger useful for debugging.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.LogException">
            <summary>
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.Logger">
            <summary>
            Basic logging class, allowing for multiple log targets to write to.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.LogTarget">
            <summary>
            Interface for writing to a log of some kind.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.TextWriterLog">
            <summary>
            Logs to a TextWriter (typically a file)
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.FileLog">
            <summary>
            Logs to a file.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.ConsoleLog">
            <summary>
            Logs to the console.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.Logging.StringBuilderLog">
            <summary>
            Logs to a string, useful for output to web pages.
            
            Originally developed for logging in PicWeb by Brendan Elliott.
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourceNeighborhoodMetabolicNW">
            <summary>
            The final GraphSource class used with the neighborhood query and the metabolic network graph
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourceNeighborhood">
            <summary>
            A base class for the GraphSource implementation for all of the neighborhood based queries
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourcePathQueries">
            <summary>
            A base class for the GraphSource implementation for all of the path-based queries (both path and neighborhood)
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourcePathQueries.CollapsedModels">
            <summary>
            A list of the IDs of collapsed models nodes to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourcePathQueries.ExpandedModels">
            <summary>
            A list of the IDs of fully expanded models to add to the graph (i.e. add all the reactions in the model)
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourcePathQueries.ReactionIDs">
            <summary>
            A list of the IDs of reactions to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourcePathQueries.SpeciesIDs">
            <summary>
            A lsit of the IDs of species to add to the graph.
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourcePathQueries.ContentType">
            <summary>
            Specifies the type of the graph content. 
            </summary>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphSourceNeighborhood.Colorings">
            <summary>
            Provides colorings based on the involvement of each node in the results and the distance from the 'from node'
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourceNeighborhoodPWLinks">
            <summary>
            The final GraphSource class used with the neighborhood query and the pathway links graph
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphLoader">
            <summary>
            A helper class that loads the graphs, both Metabolic Network and Pathway Links, into memory
            </summary>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.#ctor">
            <summary>
            This constructor should only be called once, via the Instance property.
            </summary>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.LoadMetabolicNetworkGraph(PathQueryLib.IManager,System.String@)">
            <summary>
            Load the metabolic network graph. This call does not force the graph to reload and will not load the graph again if it is found in the store. Also, it will ignore common molecules and contains no pathway or organism restrictions.
            </summary>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.LoadMetabolicNetworkGraph(PathQueryLib.IManager,System.Boolean,System.Boolean,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.String@)">
            <summary>
            Load the metabolic network graph. This call has a flag which could force the graph to reload, even if it is found in the store.
            </summary>
            <param name="forceReload">If true, the graph will reload no matter what. If false, the graph will not be loaded again if it is found in the store.</param>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.MetabolicNetworkGraphName(System.Boolean,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid})">
            <summary>
            Give the name of a metabolic network graph based on its attributes.
            </summary>
            <param name="ignoreCommonMolecules"></param>
            <param name="pathwayRestrictionsIds"></param>
            <param name="pathwayRestrictionsNames"></param>
            <param name="organismRestrictionsIds"></param>
            <param name="organismRestrictionsNames"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.LoadMetabolicNetworkGraph(System.Boolean,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},PathQueryLib.IGraph@)">
            <summary>
            Load the metabolic network graph. This call has a flag which could force the graph to reload, even if it is found in the store.
            </summary>
            <param name="forceReload">If true, the graph will reload no matter what. If false, the graph will not be loaded again if it is found in the store.</param>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.LoadPathwayLinksGraph(PathQueryLib.IManager,System.Boolean,System.Boolean,System.Collections.Generic.List{System.Guid},System.String@)">
            <summary>
            Load the pathway links graph. This call has a flag which could force the graph to reload, even if it is found in the store.
            </summary>
            <param name="forceReload">If true, the graph will reload no matter what. If false, the graph will not be loaded again if it is found in the store.</param>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.PathwayLinksGraphName(System.Boolean,System.Collections.Generic.List{System.Guid})">
            <summary>
            Give the name of a pathway links graph based on its attributes.
            </summary>
            <param name="ignoreCommonMolecules"></param>
            <param name="organismRestrictionsIds"></param>
            <param name="organismRestrictionsNames"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.PathQuery.GraphLoader.LoadPathwayLinksGraph(System.Boolean,System.Collections.Generic.List{System.Guid},PathQueryLib.IGraph@)">
            <summary>
            Load the pathway links graph. This call has a flag which could force the graph to reload, even if it is found in the store.
            </summary>
            <param name="forceReload">If true, the graph will reload no matter what. If false, the graph will not be loaded again if it is found in the store.</param>
        </member>
        <member name="P:PathwaysLib.PathQuery.GraphLoader.Instance">
            <summary>
            The single instance of this loader.
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourcePath">
            <summary>
            A base class for using the GraphSource with path queries
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourcePathMetabolicNW">
            <summary>
            A final class for using the GraphSource with path queries and the metabolic network graph
            </summary>
        </member>
        <member name="T:PathwaysLib.PathQuery.GraphSourcePathPWLinks">
            <summary>
            A final class for using the GraphSource with path queries and the pathway links graph
            </summary>
        </member>
        <member name="T:PathwaysLib.Queries.ReactionQueries">
            <summary>
            Contains utility functions related to pathways used by the
            built-in queries and other services to help build up information
            for tabular queries.
            Transferred by Greg Strnad from the old pathways service.
            </summary>
        </member>
        <member name="T:PathwaysLib.Queries.ModelQueries">
            <summary>
            Contains utility functions related to pathways used by the
            built-in queries and other services to help build up information
            for tabular queries.
            Transferred by Greg Strnad from the old pathways service.
            </summary>
        </member>
        <member name="T:PathwaysLib.Queries.MolecularEntityQueries">
            <summary>
            Contains utility functions related to molecular entities used by the
            built-in queries and other services to help build up information
            for tabular queries.
            Transferred by Greg Strnad from the old pathways service.
            </summary>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.CreatePathway_ID_List(System.String)">
            <summary>
            create pathway list for the sql statement
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <returns>a pathway list for the sql statement.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.GetCommonMoleculeIDs">
            <summary>
            Get common molecule IDs of this ME
            </summary>
            <returns>A filled DataSet array</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.ExpandMolecularEntityInOrganism(System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Expand a molecular entity in a given number of steps in a given pathway of a given organism.
            </summary>
            <param name="organism">The organsim ID</param>
            <param name="pathway">The pathway ID</param>
            <param name="entity">The molecular entity ID</param>
            <param name="steps">How many steps will be expanded.</param>
            <param name="entity_list">A list of molecular entities.</param>
            <returns>An instance of DataSet including all expanded molecular entities.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.Expand_An_Entity_Number_of_Steps(System.String,System.String,System.Int32)">
            <summary>
            Expand a molecular entity for a number of steps in the whole network
            </summary>
            <param name="organism">The organism ID to use.</param>
            <param name="entity_id">The molecular entity ID to be expanded</param>
            <param name="steps">How many steps to consider.</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.Expand_An_Entity_Number_of_Steps(System.String,System.String,System.String,System.Int32)">
            <summary>
            Expand a molecular entity for a number of steps in the whole network
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism ID to use.</param>
            <param name="entity_id">The molecular entity ID to be expanded</param>
            <param name="steps">How many steps to consider.</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.Expand_An_Entity_In_Network(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the 1-neighborhood of a given molecular entity in the entire network
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organsim ID</param>
            <param name="entity">The molecular entity ID</param>
            <param name="commonMoleculeList">The list of common molecules</param>
            <returns>An array of record of 8 tuples.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.Expand_An_Entity_In_Network(System.String,System.String,System.String)">
            <summary>
            Returns the 1-neighborhood of a given molecular entity in the entire network
            </summary>
            <param name="organism">The organsim ID</param>
            <param name="entity">The molecular entity ID</param>
            <param name="commonMoleculeList">The list of common molecules</param>
            <returns>An array of record of 8 tuples.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.FindPathsBetweenTwoEntitiesInOrganism(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            	Given two molecular entities A and B, and a pathway P, find alternative ways to go from A to B in P in a given organism but not through the common entities like H2O.
            </summary>
            <param name="organism">The name of an organism</param>
            <param name="pathway">The ID of a pathway</param>
            <param name="entityA">The molecular entity as the source</param>
            <param name="entityB">The molecular entity as the destination</param>
            <param name="entity_list">A list of common entities</param>
            <returns>An instance of DataSet including all paths between two entities.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.EnzymesOfProcessesInvolvingEntityInSpecificUse(System.String,System.String,System.String)">
            <summary>
            Finds enzymes of processes with a given molecule in a specific role
            in an organism.
            </summary>
            <param name="organism">The organism in question.</param>
            <param name="role">The role to consider.</param>
            <param name="entityId">The id of the molecular entity to consider.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.PathwaysAndProcessesIncludingThisMolecularEntityWithSpecifiedRoleInOrganism(System.String,System.String,System.String)">
            <summary>
            Finds enzymes of processes with a given molecule in a specific role
            in an organism.
            </summary>
            <param name="organism">The organism in question.</param>
            <param name="role">The role to consider.</param>
            <param name="entityId">The id of the molecular entity to consider.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.MolecularEntityQueries.PathwaysAndProcessesIncludingThisMolecularEntityWithSpecifiedRoleInOrganism(System.String,System.String,System.String,System.String)">
            <summary>
            Finds enzymes of processes with a given molecule in a specific role
            in an organism.
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism in question.</param>
            <param name="role">The role to consider.</param>
            <param name="entityId">The id of the molecular entity to consider.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="T:PathwaysLib.Queries.PathwayQueries">
            <summary>
            Contains utility functions related to pathways used by the
            built-in queries and other services to help build up information
            for tabular queries.
            Transferred by Greg Strnad from the old pathways service.
            </summary>
        </member>
        <member name="M:PathwaysLib.Queries.PathwayQueries.CreatePathway_ID_List(System.String)">
            <summary>
            create pathway list for the sql statement
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <returns>a pathway list for the sql statement.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.PathwayQueries.GetAllRelatedPathways(System.String,System.String)">
            <summary>
            Finds all pathways related to the given pathway.
            </summary>
            <param name="pathway_id">The pathway in question.</param>
            <returns>A filled DataSet object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.PathwayQueries.NewPathwayTable">
            <summary>
            Creates a table to store all expanded processes' information.
            </summary>
            <returns>An instance of DataTable.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.PathwayQueries.ExpandPathwaysInGivenSteps(System.String,System.String,System.String,System.Int32)">
             <summary>
            	Expands a pathway in a given step.
             </summary>
            <param name="pathway_id">The ID of a pathway.</param>
            <param name="pathway_name">The name of the pathway.</param>
            <param name="steps">How many steps will be expanded.</param>
            <returns>An instance of DataSet including all expanded pathways.</returns>
        </member>
        <member name="T:PathwaysLib.Queries.ProcessQueries">
            <summary>
            Contains utility functions related to processes used by the
            built-in queries and other services to help build up information
            for tabular queries.
            Transferred by Greg Strnad from the old pathways service.
            </summary>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.CreatePathway_ID_List(System.String)">
            <summary>
            create pathway list for the sql statement
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <returns>a pathway list for the sql statement.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.NewTable">
            <summary>
            Creates a table to store all expended processes' information.
            </summary>
            <returns>An instance of DataTable.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ExpandProcessesInGivenStepsCommonListInOrganism(System.String,System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Expand processes that are a given number of steps away from a group of processes that contain
            a specific group of molectules.
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism ID to use.</param>
            <param name="pathway">The pathway ID to use; some queries may set this to "".</param>
            <param name="process">The process ID to use.</param>
            <param name="steps">How many steps to consider.</param>
            <param name="entity_list">Molecules to consider.</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ExpandProcessesInGivenStepsCommonListInOrganism(System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Expand processes that are a given number of steps away from a group of processes that contain
            a specific group of molectules.
            </summary>
            <param name="organism">The organism ID to use.</param>
            <param name="pathway">The pathway ID to use; some queries may set this to "".</param>
            <param name="process">The process ID to use.</param>
            <param name="steps">How many steps to consider.</param>
            <param name="entity_list">Molecules to consider.</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesInvolvingOneSubstrateAndProductInOrganism(System.String)">
            <summary>
            Finds all processes that involve exactly one substrate and one
            product in a specific organism.
            </summary>
            <param name="organism">The organism in question.</param>
            <returns>A filled DataSet object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesInvolvingOneSubstrateAndProductInOrganism(System.String,System.String)">
            <summary>
            Finds all processes that involve exactly one substrate and one
            product in a specific organism.
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism in question.</param>
            <returns>A filled DataSet object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesWithGivenNumberOfMoleculesWithRoleInOrganism(System.String,System.String,System.Int32)">
            <summary>
            Finds processes with a given number of molecules of a specific role
            in an organism.
            </summary>
            <param name="organism">The organism in question.</param>
            <param name="role">The role to consider.</param>
            <param name="number">How many molecules to consider.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesWithGivenNumberOfMoleculesWithRoleInOrganism(System.String,System.String,System.String,System.Int32)">
            <summary>
            Finds processes with a given number of molecules of a specific role
            in an organism.
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism in question.</param>
            <param name="role">The role to consider.</param>
            <param name="number">How many molecules to consider.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesInvolvingPathwayAndMolecularEntityInOrganism(System.String,System.String,System.String)">
            <summary>
            Finds processes involving a specific pathway and ME in an organism
            </summary>
            <param name="organism">The organism in question</param>
            <param name="pathway">The pathway in question</param>
            <param name="molecule">The molecule in question</param>
            <returns>A DataSet array of processes involving the pathway and ME in the organism</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.ProcessesSharingActivatorsAndInhibitorsWithProcessOfPathwayInOrganism(System.String,System.String,System.String)">
            <summary>
            Finds processes sharing activators and inhibitors with processes of a pathway in a
            specific organism.
            </summary>
            <param name="organism"></param>
            <param name="pathway"></param>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.GetAllRelatedProcessesInOrganism(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get all related processes in an organism.
            </summary>
            <param name="organism">The organism ID to consider.</param>
            <param name="process">The process ID to consider.</param>
            <param name="pathway">The pathway ID to consider; this may be "".</param>
            <param name="entity_list">A list of molecular entities to consider.</param>
            <param name="first">Whether this is the first run or not.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.Queries.ProcessQueries.GetAllRelatedProcessesInOrganism(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get all related processes in an organism.
            </summary>
            <param name="pathwayListStr">The string consists of the related pathway ID to consider.</param>
            <param name="organism">The organism ID to consider.</param>
            <param name="process">The process ID to consider.</param>
            <param name="pathway">The pathway ID to consider; this may be "".</param>
            <param name="entity_list">A list of molecular entities to consider.</param>
            <param name="first">Whether this is the first run or not.</param>
            <returns>A filled DataSet[] object.</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.GetQualifierName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.GetComplementQualifierName(System.Int32)">
            <summary>
            Returns the complement name associated with an id.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.GetQualifierId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.GetQualifierId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="roleName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.DeleteQualifier(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AnnotationQualifierManager.DeleteQualifier(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.AnnotationQualifierManager.AllQualifiers">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.AnnotationQualifierManager.AllQualifierIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.AttributeManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/AttributeManager.cs</filepath>
            		<creation>2005/11/29</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/03/26 04:00:50 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/AttributeManager.cs,v 1.2 2009/03/26 04:00:50 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Provides static methods for managing the attribute_names and 
             attribute_values table to provide a dictionary-like interface for generic item
             attributes that can be used with any table with a GUID primary key.
             </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.AttributeManager.MAX_SEARCHABLE_ATTRIBUTE_VALUE">
            <summary>
            The length of the longest string that will be stored in the attribute value's 
            varchar field.  Anything longer will be stored in the text field and 
            will not be searchable.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.SetAttribute(System.String,System.Guid,System.String)">
            <summary>
            Sets a value for the given attribute for the specified item.
            If the string is longer than MAX_SEARCHABLE_ATTRIBUTE_VALUE size (799),
            then it is stored in a varchar field and will be searchable,
            otherwise it will be stored in a text field and will NOT be searchable 
            (i.e. will not be found by the FindItems function).
            </summary>
            <param name="attribName"></param>
            <param name="itemId"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.GetAttribute(System.String,System.Guid)">
            <summary>
            Returns the value of a given attribute for a given item.
            </summary>
            <param name="attribName"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.HasAttribute(System.String,System.Guid)">
            <summary>
            Returns true if the given item has an attribute value.
            </summary>
            <param name="attribName"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.FindItems(System.String,System.String)">
            <summary>
            Find all items with the given attribute set to the given value.
            Will only find item values shored in the varchar field (i.e. shorter than MAX_SEARCHABLE_ATTRIBUTE_VALUE).
            </summary>
            <param name="attribName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.FindItemsEndsWith(System.String,System.String)">
            <summary>
            Find all items with the given attribute set to the given value.
            Will only find item values shored in the varchar field (i.e. shorter than MAX_SEARCHABLE_ATTRIBUTE_VALUE).
            </summary>
            <param name="attribName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.FindSingleItem(System.String,System.String)">
            <summary>
            Finds the first item returned with the given attribute value.
            Will only find item values shored in the varchar field (i.e. shorter than MAX_SEARCHABLE_ATTRIBUTE_VALUE).
            </summary>
            <param name="attribName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.DeleteItemAttributes(System.Guid)">
            <summary>
            Deletes all attribute values associated with a single item GUID.
            This is useful for attribute cleanup when deleting an object.
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.DeleteAttribute(System.String)">
            <summary>
            Deletes an attribute from all items.
            </summary>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.DeleteAttribute(System.String,System.Guid)">
            <summary>
            From the specified attribute value for a given item.
            </summary>
            <param name="attributeName"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.AttributeManager.GetAttributeId(System.String,System.Boolean)">
            <summary>
            Gets the attribute ID associated with an attribute name.
            If create is true and the attribute name is not found, it is created.
            </summary>
            <param name="attribName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ConnectedPathway.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ConnectedPathwayAndCommonProcesses.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             ServerPathway ConnectedPathway- (to be listed as a connected pathway)
             ServerProcess[] SharedProcesses - (shared by two pathways)
             ServerMolecularEntity[] SharedExclusiveMolecules - (molecules shared
             by two pathways but are not included in any process in SharedProcesses)
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses.ConnectedPathway">
            <summary>
            Get the connected pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses.SharedProcesses">
            <summary>
            Get the processes shared by the original pathway and the connected pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses.SharedExclusiveMolecules">
            <summary>
            Get the molecular entities that are shared by the pathways, but are not in
            the shared processes
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerObject">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerObject.cs</filepath>
            		<creation>2005/06/09</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/03/25 17:36:58 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerObject.cs,v 1.2 2009/03/25 17:36:58 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Base class for database persisted objects.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerObject.__DBRow">
            <summary>
            The Database row for this object.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Derived classes must implement this method which is used to
            prepare the SOAP object for transmission.  
            </summary>
            <remarks>
            This function should handle the mapping for each individual
            class's DataRow to the corresponding SOAP object.  
            </remarks>
            <param name="derivedObject">If partially initialized derived object is passed, it's appropriate base class members will be filled.  If this parameter is null, a new object should be created.</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.PrepareForSoap">
            <summary>
            Convienence verison of SoapObject PrepareForSoap ( SoapObject derivedObject ),
            that passes in null to ask the method to create a new object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Derived classes must implement this method which is used to
            retrieve from SOAP the object's properties.
            </summary>
            <remarks>
            This function should handle the mapping for a SOAP object
            to the corresponding DataRow indices.
            </remarks>
            <param name="o">
            The object returned from the SOAP call.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.SetSqlCommandParameters">
            <summary>
            Derived classes must implement this method which is used to
            set the SqlCommand paramteres used by ADO.NET.
            </summary>
            <remarks>
            This function should create and configure SqlCommands with
            the correct parameters and place them in a hash table.
            
            Note that certain ID columns must be filled BEFORE the call
            to SetSqlCommandParameters().
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.UpdateDatabase">
            <summary>
            Update the database to reflect changes to the object.
            This will be overridden in deriveded classes to first 
            update their parent class's row, and then their own.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.Delete">
            <summary>
            Deletes the row(s) corresponding to an object from the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.ToSoapArray(PathwaysLib.ServerObjects.ServerObject[])">
            <summary>
            Returns an ArrayList of SoapObjects created from an array of ServerObjects.
            Useful to return lists to the rich client.
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerObject.DeleteAll(System.String)">
            <summary>
            Delelete all entries in this table
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.#ctor(System.Guid,System.Guid,System.Guid)">
            <summary>
            Constructor for serverDesignedBy wrapper with fields initiallized
            </summary>
            <param name="geneProductId"></param>
            <param name="organismGroupId"></param>
            <param name="processId"></param>
            <param name="ecNumber"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.Finalize">
            <summary>
            Destructor for the serverDesignedBy class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerCatalyze
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Catalyze relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.AllDesignedBy">
            <summary>
            Return all model - author rows from the system.
            </summary>
            <returns>
            Array of SoapCatalyze objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.Exists(System.Guid,System.Guid)">
            <summary>
            Check if a row already exists
            </summary>
            <param name="org_id"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.AddDesignedBy(System.Guid,System.Guid,System.Guid)">
            <summary>
            Create a new author - model row
            </summary>
            <param name="orgGroupId"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDesignedBy.RemoveDesignedBy(System.Guid,System.Guid,System.Guid)">
            <summary>
            Removes the selected relation from the table.
            </summary>
            <param name="orgGroupId"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDesignedBy.Id">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDesignedBy.ModelMetadataId">
            <summary>
            Get/set the process ModelMetadataId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDesignedBy.AuthorId">
            <summary>
            Get/set the Author.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.#ctor(PathwaysLib.SoapObjects.SoapSbase)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSbase.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSbase.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSbase.MetaId">
            <summary>
            Get/set the metaId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSbase.SboTerm">
            <summary>
            Get/set the sboTerm.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSbase.Notes">
            <summary>
            Get/set the notes.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSbase.Annotation">
            <summary>
            Get/set the annotation.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.#ctor(PathwaysLib.SoapObjects.SoapModelMetadata)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.AllModelMetadata">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelMetadata.DeleteAll">
            <summary>
            Delelete all entries in unit related tables, but keep base units
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModelMetadata.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModelMetadata.ModelName">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.#ctor(PathwaysLib.SoapObjects.SoapAuthor)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.GetAuthorsFromModelName(System.String)">
            <summary>
            Finds all authors for a specific model.
            </summary>
            <param name="modelId">Name of the model.</param>
            <returns>Array of authors ordered by insertion.</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.AllAuthors">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerAuthor.DeleteAll">
            <summary>
            Delelete all entries in unit related tables, but keep base units
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerAuthor.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerAuthor.Name">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.DBRow">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/DBRow.cs</filepath>
            		<creation>2005/06/22</creation>
            		<author>
            			<name>Michael F. Starke</name>
            			<initials>mfs</initials>
            			<email>michael.starke@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mitali $</cvs_author>
            			<cvs_date>$Date: 2009/01/26 16:35:16 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/DBRow.cs,v 1.2 2009/01/26 16:35:16 mitali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates dataset and access to ADO.NET.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.#ctor(System.Data.DataSet)">
            <summary>
            Constructs a DBRow from an ADO DataSet object that contains exactly one table and one row.
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.#ctor(System.String)">
            <summary>
            Constructs an intially empty DBRow of the specified table to insert
            from a SOAP object.
            </summary>
            <param name="insertTableName"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.UpdateDatabase">
            <summary>
            Update the object's status back to the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.HasColumn(System.String)">
            <summary>
            Returns true if the named column occurs in this DBRow.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetInt(System.String)">
            <summary>
            Returns the value of an integer column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetInt(System.String,System.Int32)">
            <summary>
            Sets the value of an integer column.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetLong(System.String)">
            <summary>
            Returns the value of a long integer column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetLong(System.String,PathwaysLib.ServerObjects.Long)">
            <summary>
            Sets the value of a long integer column.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetDecimal(System.String)">
            <summary>
            Returns the value of a decimal column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetDecimal(System.String,System.Decimal)">
            <summary>
            Sets the value of a decimal column.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetDouble(System.String)">
            <summary>
            Returns the value of a double column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetDouble(System.String,System.Double)">
            <summary>
            Sets the value of a double column.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetNullable``1(System.String)">
            <summary>
            Gets the value of a column of a value type that can be NULL in the database        
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetGuid(System.String)">
            <summary>
            Gets the value of a GUID column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetGuid(System.String,System.Guid)">
            <summary>
            Sets the value of a GUID column
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetString(System.String)">
            <summary>
            Gets the value of a string column.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetString(System.String,System.String)">
            <summary>
            Sets the value of a string column.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetTribool(System.String)">
            <summary>
            Gets the value of a bool column that may also be null.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetTribool(System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            Sets the value of a bool column that may also be null.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.GetBool(System.String)">
            <summary>
            Gets the value of a bool column that may not be null.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetBool(System.String,System.Boolean)">
            <summary>
            Sets the value of a bool column that may not be null.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.SetNull(System.String)">
            <summary>
            Sets the entry in the given column to null
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBRow.IsNull(System.String)">
            <summary>
            Returns true if the entry in the given column is null,
              returns false if it isn't null.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBRow.ADOCommands">
            <summary>
            Get/set the object's ADO commands
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBRow.Status">
            <summary>
            Get/set the server object status
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBRow.Item(System.String)">
            <summary>
            Get set column values by name from the DataSet
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.DBWrapper">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>/Pathways/PathwaysLib/ServerObjects/DBWrapper.cs</filepath>
            		<creation>2005-06-13 17:29</creation>
            		<author>
            			<name>Michael F. Starke</name>
            			<initials>mfs</initials>
            			<email>michael.starke@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: xjqi $</cvs_author>
            			<cvs_date>$Date: 2009/09/09 15:48:14 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/DBWrapper.cs,v 1.6 2009/09/09 15:48:14 xjqi Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.6 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             This class wraps common database functionality including
             connection and querying.
             </summary>
             <remarks>
             Database wrapper module including storage of the connection
             string, all pre-formated query strings and a convenient set of
             methods to request and update data in the database using
             arbitrary-length arguments.  Before making any queries, the
             connection must first be opened and the connection should be
             closed before the program exits.
             
             This class was adapted from code provided by Brendan Elliott from
             the ToPPLabel project.
             </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>
            This version connects on the connection string provided in the
            global AppSettings.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.#ctor(System.String)">
            <summary>
            Alternate connection constructor.
            </summary>
            <remarks>
            This version connects on the connection string provided as a
            parameter to the function, unless connectionString is null
            in which case, the global AppSettings value is used.
            </remarks>
            <param name="connectionString">
            A connection string that is to be used to connect to the
            database.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.Finalize">
            <summary>
            DBWrapper destructor
            </summary>
            <remarks>
            Unused.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.Connect">
            <summary>
            Opens a connection to the database using the stored
            ConnectionString.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.Close">
            <summary>
            Close the connection to the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteQuery(System.Data.DataSet@,System.Data.SqlClient.SqlCommand@)">
            <summary>
            Execute a SELECT-type query and store the results in a pre-
            allocated DataTable.
            </summary>
            <remarks>
            The query is passed as a SqlCommand object.
            </remarks>
            <param name="results">
            Pre-allocated DataSet
            </param>
            <param name="command">
            SQL command to be performed.
            </param>
            <returns>
            Number of rows in the results DataTable.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.TestConnection(System.String)">
            <summary>
            Tests a connection for openness, and if closed, opens it (expects a connection string parameter).
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteQuery(System.Data.DataSet@,System.String,System.Object[])">
            <summary>
            Execute a SELECT-type query and store the results in a pre-
            allocated DataTable.
            </summary>
            <remarks>
            The query is passed as a SqlCommand object.
            </remarks>
            <param name="results">
            Pre-allocated DataSet
            </param>
            <param name="sql">
            SQL command string to be performed.
            </param>
            <param name="paramNameTypeValueList">
            parameters used in the SQL command string
            </param>
            <returns>
            Number of rows in the results DataTable.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteNonQuery(System.Data.SqlClient.SqlCommand@)">
            <summary>
            Execute a query that does not return a result set (INSERT,
            UPDATE, DELETE).
            </summary>
            <remarks>
            The query is passed as a SqlCommand object.
            </remarks>
            <param name="command"></param>
            <returns>
            Number of affected rows.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Execute a query that does not return a result set (INSERT,
            UPDATE, DELETE), using the argument syntax of the BuildCommand() function.  
            See BuildCommand() for more details.
            </summary>
            <param name="sql"></param>
            <param name="paramNameTypeValueList"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteScalar(System.Data.SqlClient.SqlCommand@)">
            <summary>
            Execute a query that returns a single scalar value (i.e. the
            result of an aggregate function).
            </summary>
            <remarks>
            The query is passed as a SqlCommand object.
            </remarks>
            <param name="command"></param>
            <returns>
            Object containing the scalar value.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteScalar(System.String,System.Object[])">
            <summary>
            EExecute a query that returns a single scalar value (i.e. the
            result of an aggregate function), using the argument syntax of the BuildCommand() function.  
            See BuildCommand() for more details.
            </summary>
            <param name="sql"></param>
            <param name="paramNameTypeValueList"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteScalar(System.String)">
            <summary>
            Execute a query that returns a single scalar value (i.e. the
            result of an aggregate function).
            </summary>
            <remarks>If the query requires parameters, the SqlCommand version should be used instead.</remarks>
            <param name="parameterlessCommand"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.LoadSingle(System.Data.DataSet@,System.Data.SqlClient.SqlCommand@)">
            <summary>
            Return a DataSet to load a single object.
            </summary>
            <param name="results">
            DataSet containing the command's query results.
            </param>
            <param name="command">
            The SQL command to issue to the database.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.LoadSingle(System.Data.DataSet@,System.Data.SqlClient.SqlCommand@,System.Boolean)">
            <summary>
            Return a DataSet to load a single object.
            </summary>
            <param name="results">
            DataSet containing the command's query results.
            </param>
            <param name="command">
            The SQL command to issue to the database.
            </param>
            <param name="allowZero">
            If false, an exception is thrown if no rows are returned when one is expected. 
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.LoadMultiple(System.Data.DataSet[]@,System.Data.SqlClient.SqlCommand@)">
            <summary>
            Return an array of DataSets to load multiple objects.
            </summary>
            <param name="results">
            Array of DataSets containing the query results segregated into
            their own DataSet.
            </param>
            <param name="command">
            The SQL command to issue to the database.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.GetSchema(System.String)">
            <summary>
            Returns an empty dataset with the columns of the specified table.
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.TestConnection">
            <summary>
            Tests a connection for openness, and if closed, opens it.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.SetCommandProperties(System.Data.SqlClient.SqlCommand@)">
            <summary>
            Set the connection-specific properties of a command object.
            </summary>
            <param name="command">
            A SqlCommand object needing a connection parameter, and a
            timeout parameter.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.Update(System.Data.DataSet@,System.Collections.Hashtable)">
            <summary>
            Update the supplied dataset using the supplied commands.
            </summary>
            <param name="ds">
            The dataset to update to/from the database.
            </param>
            <param name="commands">
            The commands passed to the DataAdapter to update the database.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.PrintAllErrs(System.Data.DataSet)">
            <summary>
            Print the errors in the dataset
            </summary>
            <param name="myDataSet"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.NewID">
            <summary>
            Returns a new Guid from the database, which is needed for inserting
            a new run into a uniqueidentifier primary key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.NewIntID(System.String)">
            <summary>        
            Returns a new int id from the database from the corresponding table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.NewIntID(System.String,System.String)">
            <summary>        
            Returns a new int id from the database from the corresponding table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.BuildCommand(System.String,System.Object[])">
            <summary>
            Helpful function for constructing a SqlCommand object from a sql string with parameters
            and a variable-length list of triples (param name, param SqlDbType, and the value for the param).
            
            For readablity, each parameter triple should be on its own line. 
            </summary>
            <remarks>
            Arbitrary parameter variant.
            
            An exception will be thrown if:
              1) The number of arguments passed to paramNameTypeValueList is not a multiple of three.
              2) In each triple (i.e. one SqlParameter), the first value is not a string.
              3) In each triple, the second value is not a SqlDbType.
            <example>
            SqlCommand command = DBWrapper.BuildCommand(
                "INSERT INTO " + __TableName + " (id, name, type) VALUES (@id, @name, @type);",
                    "@id", SqlDbType.UniqueIdentifier, ID,
                    "@name", SqlDbType.VarChar, Name,
                    "@type", SqlDbType.VarChar, Type);
            </example>
            </remarks>
            <param name="sql">SQL command string containing zero or more parameters (@param)</param>
            <param name="paramNameTypeValueList"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.BuildCommand(System.String,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Helpful function for constructing a SqlCommand object from a sql string with parameters
            and a variable-length list of triples (param name, param SqlDbType, and the value for the param).
            </summary>
            <remarks>1 parameter variant.</remarks>
            <param name="sql"></param>
            <param name="paramName"></param>
            <param name="paramType"></param>
            <param name="paramValue"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.BuildCommand(System.String,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Helpful function for constructing a SqlCommand object from a sql string with parameters
            and a variable-length list of triples (param name, param SqlDbType, and the value for the param).
            </summary>
            <remarks>2 parameter variant.</remarks>
            <param name="sql"></param>
            <param name="param1Name"></param>
            <param name="param1Type"></param>
            <param name="param1Value"></param>
            <param name="param2Name"></param>
            <param name="param2Type"></param>
            <param name="param2Value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.BuildCommand(System.String,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Helpful function for constructing a SqlCommand object from a sql string with parameters
            and a variable-length list of triples (param name, param SqlDbType, and the value for the param).
            </summary>
            <remarks>3 parameter variant.</remarks>
            <param name="sql"></param>
            <param name="param1Name"></param>
            <param name="param1Type"></param>
            <param name="param1Value"></param>
            <param name="param2Name"></param>
            <param name="param2Type"></param>
            <param name="param2Value"></param>
            <param name="param3Name"></param>
            <param name="param3Type"></param>
            <param name="param3Value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.BuildCommand(System.String,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Helpful function for constructing a SqlCommand object from a sql string with parameters
            and a variable-length list of triples (param name, param SqlDbType, and the value for the param).
            </summary>
            <remarks>4 parameter variant.</remarks>
            <param name="sql"></param>
            <param name="param1Name"></param>
            <param name="param1Type"></param>
            <param name="param1Value"></param>
            <param name="param2Name"></param>
            <param name="param2Type"></param>
            <param name="param2Value"></param>
            <param name="param3Name"></param>
            <param name="param3Type"></param>
            <param name="param3Value"></param>
            <param name="param4Name"></param>
            <param name="param4Type"></param>
            <param name="param4Value"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.PreprocessSqlArgValue(System.Object)">
            <summary>
            Preprocesses a data value for direct use in a SQL expression string.
            This includes removing any dangerous single quote characters, using a 
            valid date format and not adding single quotes if the value is NULL.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="F:PathwaysLib.ServerObjects.DBWrapper.DateFormat">
            <summary>
            SQLServer's prefered date format string.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.DBWrapper.ExecuteQueryDictionaryList``2(System.String,System.Object[])">
            <summary>
            Execute a SQL query for a many-to-many relationship as a Dictionary with the first column as the key 
            and the second column as the values associated with that key.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="L"></typeparam>
            <param name="sql"></param>
            <param name="paramNameTypeValueList"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PathwaysLib.ServerObjects.DBWrapper.ExecuteQueryList``1(System.String,System.Object[])" -->
        <!-- Badly formed XML comment ignored for member "M:PathwaysLib.ServerObjects.DBWrapper.ExecuteQueryDictionary``2(System.String,System.Object[])" -->
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.ConnectionString">
            <summary>
            Get the connection string.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.ActiveConnection">
            <summary>
            Get/set the active connection.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.CommandTimeout">
            <summary>
            Get/set the command timeout.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.InstancesTable">
            <summary>
            Get/set the hashtable instance.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.Instance">
            <summary>
            Static property to get/set a database instance
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.DBWrapper.IsInstanceNull">
            <summary>
            Static property to check if the instance is null
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.EntityNameManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/EntityNameManager.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/EntityNameManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the name table (i.e. molecular_entity_names) used for
             both Molecular Entities and E.C. numbers via static methods.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.LookupName(System.Guid)">
            <summary>
            Look up the entity name corresponding to the supplied Guid.
            </summary>
            <param name="id">
            The Guid of the item you desire the name for.
            </param>
            <returns>
            The entity name of the requested object.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.LookupId(System.String)">
            <summary>
            Look up the Guid for an object from its name.
            </summary>
            <param name="name">
            The entity name of the object.
            </param>
            <returns>
            The Guid of the object.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.NameExists(System.String)">
            <summary>
            Does the supplied name exist as an entity name?
            </summary>
            <param name="name">
            The entity name to test for existence.
            </param>
            <returns>
            Existence of parameter name within the entity names table.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.IdExists(System.Guid)">
            <summary>
            Does the supplied Guid exist in the entity names table?
            </summary>
            <param name="id">
            The id to test for existence.
            </param>
            <returns>
            Existence of parameter id within the entity names table.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.DeleteByName(System.String)">
            <summary>
            Delete an entity name from a supplied name.
            </summary>
            <param name="name">
            The name to remove.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.DeleteById(System.Guid)">
            <summary>
            Delete an entity name from its id.
            </summary>
            <param name="id">
            The id of the entity name to delete.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityNameManager.AddName(System.String)">
            <summary>
            Adds the given name to the molecular_entity_names table and returns an id.
            If the given name already exists in the table, its ID is returned.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/EntityRoleProcessAndPathway.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/EntityRoleProcessAndPathway.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages access to the process_entities and pathway_processes
             tables for Molecular Entities.  Contains members to return all
             pathway with the specific process that the entity takes role in
             that pathway, including the role of the molecule in	that process.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway.Pathway">
            <summary>
            Get/set the Process name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway.Process">
            <summary>
            Get/set the Process name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.EntityRoleProcessAndPathway.Role">
            <summary>
            Get/set the entity role as a string.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.SearchMethod">
            <summary>
            Enum used by many search functions to determine what type of search to use.
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.SearchMethod.Contains">
            <summary>
            Return results where the string CONTAINS a value (i.e. y LIKE '%x%')
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.SearchMethod.EndsWith">
            <summary>
            Return results where the string ENDS WITH a value (i.e. y LIKE 'x%')
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.SearchMethod.StartsWith">
            <summary>
            Return results where the string STARTS WITH a value (i.e. y LIKE '%x')
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.SearchMethod.ExactMatch">
            <summary>
            Return results where the string matches exactly (i.e. y = x)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:PathwaysLib.ServerObjects.GraphNodeManager" -->
        <member name="T:PathwaysLib.ServerObjects.IOrganismEntity">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerCatalyze.cs</filepath>
            		<creation>2005/07/15</creation>
            		<author>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/IOrganismEntity.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Common interface used to represent either an Organism or an Organism Group.
             </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.IOrganismEntity.OrganismEntityID">
            <summary>
            The ID for the organism or organism group
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.IOrganismEntity.OrganismEntityName">
            <summary>
            The name of the organism or organism group
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.IProcess">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerGenericProcess.cs</filepath>
            		<creation>2005/10/20</creation>
            		<author>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/IProcess.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Common interface shared by both ServerProcess and ServerGenericProcess.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.IProcess.GetECNumbers">
            <summary>
            Returns the EC Number(s) for these processes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.IProcess.GetAllProcessEntities">
            <summary>
            Get all entries in the process_entities (catalyze) relation for this generic process
            </summary>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.IProcess.GetAllGeneProducts">
            <summary>
            Get all gene products
            </summary>
            <returns>
            Returns all of the gene products involved in the generic process
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.IProcess.GetAllOrganisms">
            <summary>
            Returns all organisms (including organism groups) that this process takes place in
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.IProcess.GetAllOrganismGroups">
            <summary>
            Returns all organism groups that this process takes place in
            </summary>
            <returns></returns>
        </member>
        <member name="T:PathwaysLib.ServerObjects.MolecularEntityTypeManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/MolecularEntityTypeManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/MolecularEntityTypeManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the molecular_entity_types lookup table.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.MolecularEntityTypeManager.GetTypeName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.MolecularEntityTypeManager.GetTypeId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.MolecularEntityTypeManager.GetTypeId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="typeName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.MolecularEntityTypeManager.DeleteTypeName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.MolecularEntityTypeManager.DeleteTypeId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.MolecularEntityTypeManager.AllTypes">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.MolecularEntityTypeManager.AllTypeIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.NameIdManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/NameIdManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: murat $</cvs_author>
            			<cvs_date>$Date: 2011/03/31 02:33:17 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/NameIdManager.cs,v 1.6 2011/03/31 02:33:17 murat Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.6 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Provides a generic implemention of a int id/string name lookup table manager.
             Designed to be used as a static member of a static manager class.
             
             On first request, the table values are loaded and cached in a hashtable 
             for efficient in-memory value lookup later.  Designed for reasonably-sized
             mapping tables that can trivially be stored in main memory 
             (i.e. not millions/billions of entries).
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.#ctor(System.String,System.String,System.String,System.Data.SqlDbType)">
            <summary>
            Initializes the manager with the database table and stirng name/int id field names.
            </summary>
            <param name="tableName"></param>
            <param name="nameField"></param>
            <param name="idField"></param>
            <param name="idFieldType"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.#ctor(System.String,System.String,System.String,System.Data.SqlDbType,System.String)">
            <summary>
            Initializes the manager with the database table and stirng name/int id field names.
            </summary>
            <param name="tableName"></param>
            <param name="nameField"></param>
            <param name="idField"></param>
            <param name="idFieldType"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.GetName(System.Int32)">
            <summary>
            Returns the name associated with an id (int).
            </summary>
            <param name="nameId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.GetName(System.Guid)">
            <summary>
            Returns the name associated with an id (Guid).
            </summary>
            <param name="nameId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.GetNameId(System.String)">
            <summary>
            Returns the id (int) associated with a name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.GetNameId(System.String,System.Boolean)">
            <summary>
            Returns the id (int) associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="name"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.GetGuidNameId(System.String)">
            <summary>
            Returns the id (Guid) associated with a name,         
            </summary>
            <param name="name"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.DeleteName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameIdManager.DeleteNameId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="nameId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.NameIdManager.AllNames">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.NameIdManager.AllNameIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.NameTypeManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/NameTypeManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/NameTypeManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the name_types lookup table.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameTypeManager.GetNameType(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="nameTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameTypeManager.GetNameTypeId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="nameType"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameTypeManager.GetNameTypeId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="nameType"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameTypeManager.DeleteNameType(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="nameType"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.NameTypeManager.DeleteNameTypeId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="nameTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.NameTypeManager.AllNameTypes">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.NameTypeManager.AllNameTypeIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.PathwaysTypeManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/PathwaysTypeManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/PathwaysTypeManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the pathway_types lookup table.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.PathwaysTypeManager.GetPathwayTypeName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="pathwayTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.PathwaysTypeManager.GetPathwayTypeId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="pathwayTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.PathwaysTypeManager.GetPathwayTypeId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="pathwayTypeName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.PathwaysTypeManager.DeletePathwayTypeName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="pathwayTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.PathwaysTypeManager.DeletePathwayTypeId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="pathwayTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.PathwaysTypeManager.AllPathwayTypeNames">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.PathwaysTypeManager.AllPathwayTypeIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ProcessEntityRoleManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/ProcessEntityRoleManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ProcessEntityRoleManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the process_entity_roles lookup table.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ProcessEntityRoleManager.GetRoleName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ProcessEntityRoleManager.GetRoleId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ProcessEntityRoleManager.GetRoleId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="roleName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ProcessEntityRoleManager.DeleteRoleName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ProcessEntityRoleManager.DeleteRoleId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ProcessEntityRoleManager.AllRoles">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ProcessEntityRoleManager.AllRoleIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.GetRoleName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.GetRoleId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.GetRoleId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="typeName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.DeleteRoleName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.DeleteRoleId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.AllRoles">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ReactionSpeciesRoleManager.AllRoleIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.RnaTypeManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/RnaTypeManager.cs</filepath>
            		<creation>2006/04/19</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>bde</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/RnaTypeManager.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Manages the rna_types lookup table.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RnaTypeManager.GetRnaTypeName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="rnaTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RnaTypeManager.GetRnaTypeId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="rnaTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RnaTypeManager.GetRnaTypeId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="rnaTypeName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RnaTypeManager.DeleteRnaTypeName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="rnaTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RnaTypeManager.DeleteRnaTypeId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="rnaTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.RnaTypeManager.AllRnaTypeNames">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.RnaTypeManager.AllRnaTypeIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RuleTypeManager.GetTypeName(System.Int32)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RuleTypeManager.GetTypeId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RuleTypeManager.GetTypeId(System.String,System.Boolean)">
            <summary>
            Returns the id associated with a name, 
            optionally creating it if it doesn't exist.
            </summary>
            <param name="typeName"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RuleTypeManager.DeleteTypeName(System.String)">
            <summary>
            Remove a name (and it's id) from the lookup table.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.RuleTypeManager.DeleteTypeId(System.Int32)">
            <summary>
            Remove an id (and it's name) from the lookup table.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.RuleTypeManager.AllTypes">
            <summary>
            Return all names.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.RuleTypeManager.AllTypeIds">
            <summary>
            Return all name Ids
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerBasicMolecule">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerBasicMolecule.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: akaraca $</cvs_author>
            			<cvs_date>$Date: 2008/06/17 15:38:46 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerBasicMolecule.cs,v 1.2 2008/06/17 15:38:46 akaraca Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to basic molecules.
             </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerMolecularEntity">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerMolecularEntity.cs</filepath>
            		<creation>2005/06/23</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            				<contributor>
            				<name>Brandon S. Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/05/27 14:35:49 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerMolecularEntity.cs,v 1.5 2009/05/27 14:35:49 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.5 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to molecular entities.  
             </summary>
             <remarks>
             This is an abstract base class, and it's query methods return 
             instances of derived classes. 
             </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.#ctor(PathwaysLib.SoapObjects.SoapMolecularEntity,System.String)">
            <summary>
            Constructor for server molecular entity wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerMolecularEntity object from a
            SoapMolecularEntity object.
            </remarks>
            <param name="data">
            A SoapMolecularEntity object from which to construct the
            ServerMolecularEntity object.
            </param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server molecular entity wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerMolecularEntity object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.Finalize">
            <summary>
            Destructor for the ServerMolecularEntity class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.EntityType">
            <summary>
            Returns the type of the MolecularEntity because Type is protected
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetRolesInOrganism(PathwaysLib.ServerObjects.ServerOrganismGroup)">
            <summary>
            Return a list of roles that this entity performs in an organism
            </summary>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetRolesInOrganism(System.Guid)">
            <summary>
            Return a list of roles that this entity performs in an organism
            </summary>
            <param name="orgID"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetRoles">
            <summary>
            Return a list of roles that this entity performs in an organism
            </summary>
            <returns>All the roles</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AddName(System.String,System.String)">
            <summary>
            Adds a name for this molecular entity to the molecular_entity_names
            table and sets the type.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.HasName(System.String)">
            <summary>
            Does this MolecularEntity have name amongst its names.
            </summary>
            <param name="name">
            The name we're checking.
            </param>
            <returns>
            Existence of parameter name in this molecularentity's names list.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetName(System.String)">
            <summary>
            Gets the ServerMolecularEntityName object associated with a name, or null if the name is not found.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.DeleteName(System.String)">
            <summary>
            Dlete a name from this molecular entity's name list.
            </summary>
            <param name="name">
            The name to be removed.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllSpeciesAnnotations">
            <summary>
            Return all reaction annotations for this molecular entity-species mapping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.UpdateDatabase">
            <summary>
            Persist the molecular entity to the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.updateNames">
            <summary>
            Update the database based on the names of the molecular entity
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.deleteNames">
            <summary>
            Delete the names of the molecular entity so that the molecular entity can be deleted. 
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllProcesses">
            <summary>
            Returns all processes this molecular entity is involved in
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllProcessEntities">
            <summary>
            Get all entries in the process_entities relation for this molecular entity
            </summary>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AddToProcess(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Add this molecular entity to the given process
            </summary>
            <param name="processId"></param>
            <param name="role"></param>
            <param name="quantity"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.RemoveFromProcess(System.Guid,System.String)">
            <summary>
            Remove this from the given
            </summary>
            <param name="processId"></param>
            <param name="role"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllPathways">
            <summary>
            Returns all of the pathways that this molecular entity is involved in.
            All queries return pathways that involve certain processes (using the pathway_processes relation)
            Depending on the entity type, those certain processes are:
            	- Basic Molecules:
            		processes that are related to the entity through the process_entities table
            	- Gene Products (proteins or rnas):
            		processes related to the gene product through the process_entities table AND those related
            			through the gene_products_and_processes table
            	- Genes:
            		processes related to gene products ( only using the gene_products_and_processes table )
            			that are encoded by the gene
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllSpecies">
            <summary>
            Return all ServerSpecies for this molecule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllPathwaysProcessesAndRoles">
            <summary>
            	Returns an array of objects with the following properties:
            ServerProcess Process: the process that this molecular entity is in
            ServerPathway Pathway: the pathway that Process is in
            string Role: the molecular entity's role in Process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.Delete">
            <summary>
            Deletes the molecular entity from table entity_name_lookups and molecular_entities
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.SetSqlCommandParameters">
            <summary>
            Required function for settign up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AllMolecularEntities">
            <summary>
            Return all molecular entities from the system.
            </summary>
            <returns>
            Array of ServerMolecularEntity objects.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AllMolecularEntities(System.Int32,System.Int32)">
            <summary>
            Returns a select number of records from the molecular_entities table starting at
            the startRecord (in alphabetical order by name).  Used for paging.
            </summary>
            <param name="startRecord">
            the number of the first record returned
            </param>
            <param name="maxRecords">
            the maximum number of records to be returned
            </param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.CountAllMolecularEntities">
            <summary>
            Count all of the molecular entites within the database.
            </summary>
            <returns>
            Integer of the count of the number of molecular entites within the database.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.Load(System.Guid)">
            <summary>
            Return a molecular entity with given ID.
            </summary>
            <param name="id">
            The Guid of the desired molecular entity.
            </param>
            <returns>
            SoapMolecularEntity object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.LoadDerived(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Loads a concrete instance of a derived class from the
            corresponding 
            </summary>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a pathway with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.Exists(System.Guid)">
            <summary>
            Returns true if the given molecular entity 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllEntitiesInProcess(System.Guid)">
            <summary>
            Gets all molecular entities involved in a process,
            will be used by ServerProcess object
            </summary>
            <remarks>
            This function is in this class because of access restrictions on LoadDerived()
            </remarks>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetLinkingEntitiesForPathway(System.Guid)">
            <summary>
            Returns an array of the entities that link the given pathway to other pathways
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllEntitiesForPathway(System.Guid)">
            <summary>
            Returns an array of the entities that this pathway contains
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllEntitiesForPathways(System.String)">
            <summary>
            Returns an array of the entities for the pathways 
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetExclusiveEntitiesForPathways(System.Guid,System.Guid)">
            <summary>
            Returns an array of molecular entities that two pathways share, but are not
            in their shared processes
            </summary>
            <param name="pathwayId1"></param>
            <param name="pathwayId2"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.ByOrganismAndPathway(PathwaysLib.ServerObjects.ServerOrganismGroup,PathwaysLib.ServerObjects.ServerPathway,System.Boolean)">
            <summary>
            Return a list of molecule IDs for a given organism (or group) and pathway combination
            </summary>
            <param name="org"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.ByOrganismAndPathways(PathwaysLib.ServerObjects.ServerOrganismGroup,System.String,System.Boolean)">
            <summary>
            Return a list of molecule IDs for a given organism (or group) and a list of pathways
            </summary>
            <param name="org"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AllMolecularEntitiesForOrganism(PathwaysLib.ServerObjects.ServerOrganismGroup)">
            <summary>
            Return all molecular entities associated with the current organism or group
            </summary>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AllMolecularEntitiesForOrganism(System.Guid)">
            <summary>
            Find all molecular entities associated w/ a particular organism
            </summary>
            <param name="orgID"></param>
            <returns>A list of ServerMolecularEntity objects containing molecules, rnas, ...</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.AllMolecularEntitiesForAllOrganisms">
            <summary>
            Find all molecular entities associated with all organisms
            </summary>
            <returns>A list of ServerMolecularEntity objects containing molecules, rnas, ...</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllPathwaysForEntity(System.Guid)">
            <summary>
            Returns all pathways that involve processes that are related to the entity 
            through the process_entities table
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.GetAllRolesProcessesAndPathwaysForEntity(System.Guid)">
            <summary>
            returns all the pathways, processes, and roles for the given molecular entity.
            Should work for gene products as well, I gave them the role of 'enzyme'
            </summary>
            <param name="molecularEntityId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.FindMolecularEntities(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all molecular entities whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.FindMolecularEntities(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32)">
            <summary>
            Returns all molecular entities whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="topk"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.FindMolecularEntities(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Paged search function.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method to use.
            </param>
            <param name="startRecord">
            The first record requested in the returned set.
            </param>
            <param name="maxRecords">
            The maximum number of records to return.
            </param>
            <param name="section">
            The sub-type of Molecular Entity in which to search.
            </param>
            <returns>
            A page of molecular entities matching the search criteria.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntity.CountFindMolecularEntities(System.String,PathwaysLib.ServerObjects.SearchMethod,System.String,System.Boolean)">
            <summary>
            The count of molecular entites that would respond to the provided search conditions.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The serach method to use.
            </param>
            <param name="section">
            The sub-section of MolecularEntities to search in.
            </param>
            <returns>
            The count of items that respond to the search conditions.
            </returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.ID">
            <summary>
            Get/set the molecular entity ID.
            This is virtual so the derived class
            can override it to change the value in both rows.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.Name">
            <summary>
            Get/set the molecular entity name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.Type">
            <summary>
            Get/set the molecular entity type.
            Only modifiable by derived classes,
            as this property is used for inheritance!
            
            This now wraps TypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.TypeId">
            <summary>
            Get/set molecular entity type ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.MolecularEntityNotes">
            <summary>
            Get/set the molecular entity notes.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntity.AllNames">
            <summary>
            Get all of the names for this molecular entity
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.#ctor(PathwaysLib.SoapObjects.SoapBasicMolecule)">
            <summary>
            Constructor for server basic molecule wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerBasicMolecule object from a
            SoapBasicMolecule object.
            </remarks>
            <param name="data">
            A SoapBasicMolecule object from which to construct the
            ServerBasicMolecule object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server basic molecule wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerBasicMolecule object from a
            DBRow.
            </remarks>
            <param name="basicMoleculeRow">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="basicMoleculeRow"></param>
            <param name="molecularEntityRow"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.Finalize">
            <summary>
            Destructor for the ServerBasicMolecule class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerBasicMolecule.__BasicMoleculeRow">
            <summary>
            This contains the data for the derived class table.  Data from
            the base class table is maintained by the server base class.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.Delete">
            <summary>
            Deletes this basic molecule.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.AllBasicMolecules">
            <summary>
            Return all basic molecules from the system.
            </summary>
            <returns>
            Array of SoapBasicMolecule objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.AllCommonMolecules">
            <summary>
            Return all common molecules from the system
            </summary>
            <returns>An array of ServerBasicMolecule objects (where all objects are common molecules)</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.Exists(System.Guid)">
            <summary>
            Returns true if the basic_molecule_id is in the basic_molecules table,
            otherwise returns false
            </summary>
            <param name="basic_molecule_id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.FindBasicMolecules(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all basic molecules who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.IsCommonMolecule(System.Guid)">
            <summary>
            returns true if the id is found in the common_molecules table,
            if not then it returns false
            </summary>
            <param name="basicMoleculeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.GetAllCommonMolecules">
            <summary>
            Returns all the basic molecule who's id is in the common_molecules table
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.SetCommonMolecule(System.Guid,System.Boolean)">
            <summary>
            Depending if value is true or false, the id is entered into or removed from
             the common_molecules table
            </summary>
            <param name="basicMoleculeId"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.Load(System.Guid)">
            <summary>
            Return a basic molecule with given ID.
            </summary>
            <param name="id">
            The Guid of the desired basic molecule.
            </param>
            <returns>
            SoapBasicMolecule object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.LoadFromBaseRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Given a row from the base class, calls LoadRow on the base class id
            </summary>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a basic molecule with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerBasicMolecule.WhatIsTheSource(System.String)">
            <summary>
            Finds out the data source of the molecular entity whoe id is given as the parameter
            Since the database table is not ready yet, I had to decide whether an entity is a kegg entity checking
            the id of the entity if exists in external_database_links and the external_database is 1, biomodel.
            But, we had decided to put every entity in external dabase_links table and I would decide checking the external_database
            id. But, currently, all entities have this field as '1'. - ahmet
            </summary>
            <param name="molid">id of the entity</param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerBasicMolecule.ID">
            <summary>
            Get/set the BasicMolecule ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerBasicMolecule.IsCommon">
            <summary>
            Get/set whether the molecule is common or not.  This wraps the common_molecules database table.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerCatalyze">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerCatalyze.cs</filepath>
            		<creation>2005/06/16</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Marc Reynolds</name>
            				<initials>mrr</initials>
            				<email>marc.reynolds@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ann $</cvs_author>
            			<cvs_date>$Date: 2009/05/14 14:28:17 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerCatalyze.cs,v 1.2 2009/05/14 14:28:17 ann Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological processes.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.#ctor(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Constructor for server catalyze wrapper with fields initiallized
            </summary>
            <param name="geneProductId"></param>
            <param name="organismGroupId"></param>
            <param name="processId"></param>
            <param name="ecNumber"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.#ctor(System.Guid,System.Guid)">
            <summary>
            
            </summary>
            <param name="organismGroupId"></param>
            <param name="processId"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.#ctor(PathwaysLib.SoapObjects.SoapCatalyze)">
            <summary>
            Constructor for server catalyze wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerCatalyze object from a
            SoapCatalyze object.
            </remarks>
            <param name="data">
            A SoapCatalyze object from which to construct the
            ServerCatalyze object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server process wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProcess object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.Finalize">
            <summary>
            Destructor for the ServerCatalyze class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerCatalyze
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Catalyze relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.AllGeneProductAndProcesses">
            <summary>
            Return all catalyzing relations from the system.
            </summary>
            <returns>
            Array of SoapCatalyze objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetAllGeneProductsForProcessInOrganism(System.Guid,System.Guid)">
            <summary>
            Gets all of the gene products involved in the process within a specific organism
            </summary>
            <param name="process_id"></param>
            <returns>
            Returns all of the gene products involved in the process within a specific organism
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.Load(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Returns a single ServerCatalyze object
            </summary>
            <param name="org_group_id"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.LoadRow(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
            <param name="orgGroupId"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.LoadFromECNumber(System.String)">
            <summary>
            Returns the entry in the gene_product_and_processes table with
            the given ec number.  If there is no entry NULL is returned
            </summary>
            <param name="ecNum">
            the ec number
            </param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.LoadAllWithUnknownECNumber">
            <summary>
            Should return all entries with a null ec number, I don't know if it will
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.Exists(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Check if a catalyzing relation already exists
            </summary>
            <param name="org_id"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.AddGeneProductToProcess(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Create a new catalyzing relation
            </summary>
            <param name="orgGroupId"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.RemoveGeneProductFromProcess(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Removes the selected relation from the table.
            </summary>
            <param name="orgGroupId"></param>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetAllProcessesForGeneProduct(System.Guid)">
            <summary>
            This will be used by ServerGeneProduct
            </summary>
            <param name="gene_product_id"></param>
            <returns>
            Returns all of the processes involving the given gene product
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetAllGeneProductsForProcess(System.Guid)">
            <summary>
            This will be used by ServerProcess
            </summary>
            <param name="process_id"></param>
            <returns>
            Returns all of the gene products involved in the process
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetAllGeneProductsForGenericProcess(System.Guid)">
            <summary>
            This will be used by ServerGenericProcess
            </summary>
            <param name="genericProcessId"></param>
            <returns>
            Returns all of the gene products involved in the generic process
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetECNumberForGeneProductAndProcess(System.Guid,System.Guid)">
            <summary>
            Gets the ECNumber for an enzyme in a given process
            </summary>
            <param name="processId"></param>
            <param name="geneProductId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetECNumberForGeneProductandProcessInOrganism(System.Guid,System.Guid,System.Guid)">
            <summary>
            Gets the EC number for an enzyme and process in an organism
            </summary>
            <param name="processId"></param>
            <param name="geneProductId"></param>
            <param name="organismId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetECNumbersForProcess(System.Guid)">
            <summary>
            Get's the ECNumber(s) for a given process
            </summary>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCatalyze.GetECNumbersForGenericProcess(System.Guid)">
            <summary>
            Get's the ECNumber(s) for a given generic process
            </summary>
            <param name="genericProcessId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCatalyze.GeneProductID">
            <summary>
            Get/set the gene product ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCatalyze.ProcessID">
            <summary>
            Get/set the process ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCatalyze.ECNumber">
            <summary>
            Get/set the EC number.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCatalyze.OrganismGroupID">
            <summary>
            Get/set the organism group id.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerChromosome">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerChromosome.cs</filepath>
            		<creation>2005/06/29</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerChromosome.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to chromosomes.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.#ctor(System.String,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>
            Constructor for server chromosome wrapper with fields initiallized
            </summary>
            <param name="name"></param>
            <param name="length"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.#ctor(PathwaysLib.SoapObjects.SoapChromosome)">
            <summary>
            Constructor for server chromosome wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerPathway object from a
            SoapChromosome object.
            </remarks>
            <param name="data">
            A SoapChromosome object from which to construct the
            ServerChromosome object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server chromosome wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerChromosome object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.Finalize">
            <summary>
            Destructor for the ServerChromosome class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.AllChromosomes">
            <summary>
            Return all chromosomes from the system.
            </summary>
            <returns>
            Array of SoapChromosome objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.GetAllChromosomesForOrganism(System.Guid)">
            <summary>
            Return all chromosomes of an organism.
            </summary>
            <returns>
            Array of SoapChromosome objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.Load(System.Guid)">
            <summary>
            Return a chromosome with given ID.
            </summary>
            <param name="id">
            The Guid of the desired chromosome.
            </param>
            <returns>
            SoapChromosome object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a chromosome with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.Exists(System.Guid)">
            <summary>
            Returns true if the chromosome_id is in the chromosomes table,
            otherwise returns false
            </summary>
            <param name="chromosome_id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerChromosome.FindChromosomes(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all chromosomes who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.ID">
            <summary>
            Get/set the chromosome ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.Name">
            <summary>
            Get/set the chromosome name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.OrganismGroupId">
            <summary>
            Get/set the organism id
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.Length">
            <summary>
            Get/set the chromosome length.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.CentromereLocation">
            <summary>
            Get/set the centromere location.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerChromosome.ChromosomeNotes">
            <summary>
            Get/set the notes.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerCommonMolecule">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerCommonMolecule.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerCommonMolecule.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to common molecules.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.#ctor(PathwaysLib.SoapObjects.SoapCommonMolecule)">
            <summary>
            Constructor for server common molecule wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerCommonMolecule object from a
            SoapCommonMolecule object.
            </remarks>
            <param name="data">
            A SoapCommonMolecule object from which to construct the
            ServerCommonMolecule object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server common molecule wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerCommonMolecule object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.Finalize">
            <summary>
            Destructor for the ServerCommonMolecule class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.AllCommonMolecules">
            <summary>
            Return all common molecules from the system.
            </summary>
            <returns>
            Array of SoapCommonMolecule objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.Load(System.Guid)">
            <summary>
            Return a common molecule with given ID.
            </summary>
            <param name="id">
            The Guid of the desired common molecule.
            </param>
            <returns>
            SoapCommonMolecule object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCommonMolecule.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a common molecule with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCommonMolecule.ID">
            <summary>
            Get/set the CommonMolecule ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.#ctor(PathwaysLib.SoapObjects.SoapCompartment)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapReaction object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetAllSpecies">
            <summary>
            gets all the species in the compartment
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetAllReactions">
            <summary>
            Gets all the reactions which contain species in the compartment
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetImmediateChildCompartments">
            <summary>
            gets all the Compartments within the compartment
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetImmediateParentCompartment">
            <summary>
            gets all the Compartments outside the compartment
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.AllCompartments">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.AllCompartmentsByName(System.String)">
            <summary>
            Gets all Compartments with the given name or sbmlid
            </summary>
            <param name="name"></param>
            <returns>ServerCompartment[]</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.FindCompartmentNames(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            Searches all compartments and gets the corresponding number of records 
            </summary>
            <param name="name"></param>
            <returns>string[]</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.AllCompartmentsByNameOnly(System.String)">
            <summary>
            Gets all Compartments with the given name ,it does not consider the sbmlid
            </summary>
            <param name="name"></param>
            <returns>ServerCompartment[]</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetAllCompartmentNames">
            <summary>
            Gets all distinct compartment names
            </summary>
            <returns>string[]</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.GetCompartmentIDsByModel(System.Guid)">
            <summary>
            Return all compartments id related with modelid from compartment table.
            By Xinjian Qi   03/07/2009
            </summary>
            <param name="modelid"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.Exists(System.Guid)">
            <summary>
            Returns true if the given compartment exists
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartment.FindCompartmentByIds(System.Guid,System.String)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.CompartmentTypeId">
            <summary>
            Get/set the compartmentTypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.SpatialDimensions">
            <summary>
            Get/set the spatialDimensions.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.Size">
            <summary>
            Get/set the size.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.UnitsId">
            <summary>
            Get/set the unitsId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.Outside">
            <summary>
            Get/set the outside.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.CompartmentClassId">
            <summary>
            Get/set the compartmentClassId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartment.Constant">
            <summary>
            Get/set the constant.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.#ctor(PathwaysLib.SoapObjects.SoapCompartment)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapReaction object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.GetImmediateChildCompartmentClass">
            <summary>
            gets all the CompartmentClasses within the CompartmentClass
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.GetAllNames">
            <summary>
            gets all the names within the CompartmentClass
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.GetRootClass">
            <summary>
            gets all the Root level compartment classes
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentClass.GetImmediateParentCompartmentClass">
            <summary>
            gets all the CompartmentClasss outside the CompartmentClass
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentClass.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentClass.name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentClass.parentId">
            <summary>
            Get/set the ParentId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.#ctor(PathwaysLib.SoapObjects.SoapCompartmentType)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.AllFunctionDefinitions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerCompartmentType.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentType.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentType.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentType.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerCompartmentType.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.#ctor(PathwaysLib.SoapObjects.SoapConstraint)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.AllConstraints">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerConstraint.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerConstraint.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerConstraint.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerConstraint.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerConstraint.Message">
            <summary>
            Get/set the message.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.#ctor(System.String,System.String)">
            <summary>
            Constructor for server DataSource wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.#ctor(PathwaysLib.SoapObjects.SoapDataSource)">
            <summary>
            Constructor for server DataSource wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerDataSource object from a
            SoapDataSource object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server DataSource wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerDataSource object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.Finalize">
            <summary>
            Destructor for the ServerDataSource class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerDataSource
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the DataSource relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.AllDataSources">
            <summary>
            Return all catalyzing relations from the system.
            </summary>
            <returns>
            Array of SoapDataSource objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.Exists(System.String)">
            <summary>
            Returns true if there exists a data source with the given name.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.Load(System.Int16,System.String,System.String)">
            <summary>
            Returns a single ServerDataSource object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.LoadRow(System.Int16,System.String,System.String)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.LoadRow(System.String)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerDataSource.LoadRow(System.Int16)">
            <summary>
            Return the dataset for an object with the given id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDataSource.ID">
            <summary>
            Get/set the datasource ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDataSource.Name">
            <summary>
            Get/set the datasource name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerDataSource.Url">
            <summary>
            Get/set the datasource url.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.#ctor(System.String,System.String)">
            <summary>
            constructor
            </summary>
            <param name="id"></param>
            <param name="nodeCode"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server node code
            </summary>
            <remarks>
            This constructor creates a ServerNodeCode object from a
            DBRow.
            </remarks>
            <param name="data">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.Finalize">
            <summary>
            Destructor for the ServerECNumber class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.SetSchemaParameters(System.String,System.String,System.String)">
            <summary>
            This method should be called first before creating any instance of the ServerNodeCode class. It sets the table name, id and nodeCode column names.
            </summary>
            <param name="tableName"></param>
            <param name="idColumnName"></param>
            <param name="nodeCodeColumnName"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.GetNodeCodes(System.String)">
            <summary>
            Returns the node codes for a given term.
            </summary>
            <param name="termId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.GetFirstNodeCode(System.String)">
            <summary>
            Returns the first node code for a given term.
            </summary>
            <param name="termId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.GetDescendantTerms(System.String)">
            <summary>
            Returns descendants of a given ontology term as a comma-separated list of ids (including the id of the original term)
            </summary>
            <param name="termId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.GetChildTerms(System.String)">
            <summary>
            Returns children of a given ontology term as a comma-separated list of ids (including the id of the original term)
            </summary>
            <param name="termId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerNodeCode.PopulateNodeCodes(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Populates the coresponding node code table based on the information in the provided hierarchy table
            </summary>
            <param name="conceptHierarchyTableName"></param>
            <param name="childIdColumnName"></param>
            <param name="parentIdColumnName"></param>
            <param name="emptyCurrentNodeCodesTable"></param>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerNodeCode.ID">
            <summary>
            Get/set the Id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerNodeCode.NodeCode">
            <summary>
            Get/set Node Code.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNodeCode.#ctor(System.String,System.String)">
            <summary>
            Constructor for server node code
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNodeCode.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server node code
            </summary>
            <remarks>
            This constructor creates a ServerNodeCode object from a
            DBRow.
            </remarks>
            <param name="data">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNodeCode.Finalize">
            <summary>
            Destructor for the ServerECNumber class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerECNumber">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerECNumber.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>	
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>contributor>
            			<contributor>
            				<name>Marc Reynolds</name>
            				<initials>mrr</initials>
            				<email>marc.reynolds@case.edu</email>
            			</contributor>contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/05/01 06:34:34 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerECNumber.cs,v 1.3 2009/05/01 06:34:34 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.3 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to basic molecules.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for server ec number wrapper with fields initiallized
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <param name="nodeCode"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.#ctor(PathwaysLib.SoapObjects.SoapECNumber)">
            <summary>
            Constructor for server ec number wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerECNumber object from a
            SoapECNumber object.
            </remarks>
            <param name="data">
            A SoapECNumber object from which to construct the
            ServerECNumber object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server ec number wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerECNumber object from a
            DBRow.
            </remarks>
            <param name="data">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.Finalize">
            <summary>
            Destructor for the ServerECNumber class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.GetAllMappingAnnotations">
            <summary>
            Return all model annotations for this organism.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.GetAnnotatingGOTerms">
             <summary>
             Gets the GO Terms which annotate this EC Number
             </summary>
             <returns>The annotating ServerGOTerm(s)</returns>
             <remarks>
             Added: (mrr) 2006-202-15
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.Delete">
            <summary>
            Deletes the protein tuple from the ec_numbers table and all the associated tables
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.GetAllProcessGeneProducts">
            <summary>
            Get all entries in the gene_products_and_processes relation with this ec_number
            </summary>
            <remarks>
            this should only return one ServerProcessEntity, except for NULL
            </remarks>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.AddName(System.String,System.String)">
            <summary>
            Adds a name for an enzyme in a reaction, or changes the type for an existing name
            Affects the molecular_entity_names table
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.HasName(System.String)">
            <summary>
            Returns true if this ec number already has the given name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.DeleteName(System.String)">
            <summary>
            remove a name for an enzyme
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.UpdateDatabase">
            <summary>
            Persist the ECNumber to the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.ComputeNodeCodes">
            <summary>
            Computes node codes for ec numbers
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.Exists(System.String)">
            <summary>
            Returns true if the ec_number is in the ec_numbers table,
            otherwise returns false
            </summary>
            <param name="ec_number"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.AllECNumbers">
            <summary>
            Return all basic molecules from the system.
            </summary>
            <returns>
            Array of SoapECNumber objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.Load(System.String)">
            <summary>
            Return a ec number with given ID.
            </summary>
            <param name="ec_number">
            ec_number is the primary key for ec_numbers.
            </param>
            <returns>
            SoapECNumber object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumber.LoadRow(System.String)">
            <summary>
            Return the DBRow for a given ec number
            </summary>
            <param name="ec_number"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumber.ECNumber">
            <summary>
            Get/set the EC number.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumber.Name">
            <summary>
            Get/set the EC number default name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumber.NodeCode">
            <summary>
            Get/set the EC number nodeCode.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumber.AllNames">
            <summary>
            getter for all the names for this EC Number from the ec_number_names table
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerECNumberName">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerECNumberName.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon S. Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerECNumberName.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many names associated with an ec number.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.#ctor(PathwaysLib.SoapObjects.SoapECNumberName)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.AllNames(System.String)">
            <summary>
            returns all the names for a given ec number from the ec_number_names table
            </summary>
            <param name="ecNumber"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.Load(System.String,System.String)">
            <summary>
            Loads a single ServerECNumberName object for a given ec number and name
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.Exists(System.String,System.String)">
            <summary>
            Returns true if an entry with the given name and ec number exists in the
            ec_number_names table, otherwise returns false
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.LoadRow(System.String,System.String)">
            <summary>
            Return the DBRow for a given ec number and name.
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerECNumberName.UpdateDatabase">
            <summary>
            Persist the ECNumberName to the database.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumberName.ECNumber">
            <summary>
            Get/set the EC number
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumberName.NameId">
            <summary>
            get set the name id
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumberName.Name">
            <summary>
            Get/set the name
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumberName.Type">
            <summary>
            Get/set the type
            (as of 7/18/05) the type for all ec_number_names is primary
            
            Now wraps TypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerECNumberName.TypeId">
            <summary>
            Get/set ECNumber type ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.#ctor(PathwaysLib.SoapObjects.SoapEvent)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapReaction object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.AllModels">
            <summary>
            Return all Reactions from the system.
            </summary>
            <returns>
            Array of SoapReaction objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.Load(System.Guid)">
            <summary>
            Returns a single ServerReaction object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEvent.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.EventTriggerId">
            <summary>
            Get/set the eventTriggerId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEvent.EventDelayId">
            <summary>
            Get/set the kineticLawId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.#ctor(PathwaysLib.SoapObjects.SoapEventAssignment)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.AllRules">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventAssignment.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventAssignment.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventAssignment.EventId">
            <summary>
            Get/set the eventId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventAssignment.Variable">
            <summary>
            Get/set the variable.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventAssignment.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.#ctor(PathwaysLib.SoapObjects.SoapEventDelay)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.AllEventTriggers">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventDelay.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventDelay.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventDelay.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.#ctor(PathwaysLib.SoapObjects.SoapEventTrigger)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.AllEventTriggers">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerEventTrigger.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventTrigger.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerEventTrigger.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerExternalDatabase">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerExternalDatabase.cs</filepath>
            		<creation>2005/06/08</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerExternalDatabase.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological pathways.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor, creates a new external database wrapper with fields initiallized
            </summary>
            <param name="name"></param>
            <param name="fullname"></param>
            <param name="url"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.#ctor(PathwaysLib.SoapObjects.SoapExternalDatabase)">
            <summary>
            Constructor for server external database wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDatabase object from a
            SoapExternalDatabase object.
            </remarks>
            <param name="data">
            A SoapExternalDatabase object from which to construct the
            ServerExternalDatabase object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server external database wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDatabase object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.Finalize">
            <summary>
            Destructor for the ServerExternalDatabase class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.GetAllTemplateLinks">
            <summary>
            Return all links from this external database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.AddLink(System.Guid,System.String)">
            <summary>
            Add a link for this external database
            </summary>
            <param name="localId"></param>
            <param name="idInExternalDb"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.RemoveLink(System.Guid,System.String)">
            <summary>
            Remove the given link to this external database
            </summary>
            <param name="localId"></param>
            <param name="idInExternalDb"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.AllExternalDatabases">
            <summary>
            Return all external databases from the system.
            </summary>
            <returns>
            Array of SoapExternalDatabase objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.Load(System.Int32)">
            <summary>
            Return an external database with given ID.
            </summary>
            <param name="id">
            The ID of the desired external database.
            </param>
            <returns>
            SoapExternalDatabase object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.Exists(System.Int32)">
            <summary>
            Returns true if there exists a database with the given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.LoadRow(System.Int32)">
            <summary>
            Return the DBRow for the external database with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.GetAllTranslatedLinksFromDatabaseForPathway(System.Int32,System.Guid)">
            <summary>
            Get translated links from database for pathway
            </summary>
            <param name="db_id"></param>
            <param name="local_id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDatabase.TranslateUrlFromExternalDbLink(PathwaysLib.ServerObjects.ServerExternalDbLink,System.String)">
            <summary>
            Takes a ServerExternalDbLink and combines the id_in_external_db with the
            url template from the external_database_urls table to give a translated url
            </summary>
            <param name="link"></param>
            <param name="type">The type of link ("pathway", "process" etc.)</param>
            <returns>the complete url for an external database link</returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDatabase.ID">
            <summary>
            Get/set the External Database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDatabase.Name">
            <summary>
            Get/set the External Database name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDatabase.Fullname">
            <summary>
            Get/set the External Database's full name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDatabase.URL">
            <summary>
            Get/set the External Database's URL.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDatabase.ExtendedName">
            <summary>
            Get the database's extended name
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerExternalDbLink">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerExternalDbLinks.cs</filepath>
            		<creation>2005/06/16</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerExternalDbLink.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological processes.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.#ctor(System.Guid,System.Int32,System.String,System.String)">
            <summary>
            Constructor for server external database link wrapper with fields initiallized
            </summary>
            <param name="localId"></param>
            <param name="externalDatabaseId"></param>
            <param name="idInExternalDb"></param>
            <param name="nameInExternalDb"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.#ctor(PathwaysLib.SoapObjects.SoapExternalDbLink)">
            <summary>
            Constructor for server external database link wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDbLink object from a
            SoapExternalDbLink object.
            </remarks>
            <param name="data">
            A SoapExternalDbLink object from which to construct the
            ServerExternalDbLink object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server process wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDbLink object from a
            DBRow.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.Finalize">
            <summary>
            Destructor for the ServerExternalDbLink class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerExternalDbLink
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the ExternalDbLink relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.AllExternalDatabaseLinks">
            <summary>
            Return all external database links.
            </summary>
            <returns>
            Array of SoapExternalDbLink objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.Load(System.Guid,System.Int32,System.String)">
            <summary>
            Returns a single ServerExternalDbLink object
            </summary>
            <param name="localId"></param>
            <param name="externalDbId"></param>
            <param name="idInExternalDb"></param>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.LoadRow(System.Guid,System.Int32,System.String)">
            <summary>
            Return the DBRow for an object with the given parameters.
            </summary>
            <param name="localId"></param>
            <param name="externalDbId"></param>
            <param name="idInExternalDb"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.GetAllTemplatesFromExternalDatabase(System.Int32)">
            <summary>
            Get all of the external database link templates for a given database ID
            </summary>
            <param name="externalDatabaseId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.GetExternalDatabaseLinksForPathway(PathwaysLib.ServerObjects.ServerPathway)">
            <summary>
            Get all of the external database link templates for a given pathway
            </summary>
            <param name="pw">The pathway to consider</param>
            <returns>All external database links</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.Exists(System.Guid,System.Int32,System.String)">
            <summary>
            Check if a external database link already exists
            </summary>
            <param name="local_id"></param>
            <param name="external_database_id"></param>
            <param name="id_in_external_database"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.AddExternalDatabaseLink(System.Guid,System.Int32,System.String)">
            <summary>
            Create a external database link
            </summary>
            <param name="local_id"></param>
            <param name="external_database_id"></param>
            <param name="id_in_external_database"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbLink.RemoveExternalDatabaseLink(System.Guid,System.Int32,System.String)">
            <summary>
            Removes the selected external database link from the table.
            </summary>
            <param name="local_id"></param>
            <param name="external_database_id"></param>
            <param name="id_in_external_database"></param>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbLink.LocalID">
            <summary>
            Get/set the gene local ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbLink.ExternalDatabaseID">
            <summary>
            Get/set the external database id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbLink.IdInExternalDatabase">
            <summary>
            Get/set the id of the object in the external database.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbLink.NameInExternalDatabase">
            <summary>
            Get/set the id of the object in the external database.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerExternalDbUrl">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerExternalDbUrl.cs</filepath>
            		<creation>2006/06/08</creation>
            		<author>
            			<name>Greg Strnad</name>
            			<initials>gjs</initials>
            			<email>gjs4@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerExternalDbUrl.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to external database URLs.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Constructor, creates a new external database url wrapper with fields initiallized
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <param name="url"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.#ctor(PathwaysLib.SoapObjects.SoapExternalDbUrl)">
            <summary>
            Constructor for server external database url wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDbUrl object from a
            SoapExternalDbUrl object.
            </remarks>
            <param name="data">
            A SoapExternalDbUrl object from which to construct the
            ServerExternalDbUrl object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server external database URL wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerExternalDbUrl object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.Finalize">
            <summary>
            Destructor for the ServerExternalDbUrl class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.AddLink(System.Guid,System.String)">
            <summary>
            Add a link for this external database
            </summary>
            <param name="localId"></param>
            <param name="idInExternalDb"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.RemoveLink(System.Guid,System.String)">
            <summary>
            Remove the given link to this external database
            </summary>
            <param name="localId"></param>
            <param name="idInExternalDb"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.AllExternalDbUrls">
            <summary>
            Return all external database URLs from the system.
            </summary>
            <returns>
            Array of ServerExternalDbUrl objects.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.Load(System.Int32,System.String)">
            <summary>
            Return an external database URL with given ID and type.
            </summary>
            <param name="id">The ID of the desired external database.</param>
            <param name="type">The item type.</param>
            <returns>
            ServerExternalDbUrl object.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.Exists(System.Int32,System.String)">
            <summary>
            Returns true if there exists a database URL with the given ID and type
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerExternalDbUrl.LoadRow(System.Int32,System.String)">
            <summary>
            Return the DBRow for the external database URL with a given ID and type.
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbUrl.ID">
            <summary>
            Get/set the External Database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbUrl.Type">
            <summary>
            Get/set the type.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerExternalDbUrl.URL">
            <summary>
            Get/set the External Database's URL (template)
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.#ctor(PathwaysLib.SoapObjects.SoapFunctionDefinition)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.AllFunctionDefinitions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerFunctionDefinition.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerFunctionDefinition.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerFunctionDefinition.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerFunctionDefinition.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerFunctionDefinition.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerFunctionDefinition.Lambda">
            <summary>
            Get/set the lambda.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGene">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerGene.cs</filepath>
            		<creation>2005/06/23</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerGene.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological Organisms.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.#ctor(PathwaysLib.SoapObjects.SoapGene)">
            <summary>
            Constructor for server gene wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGene object from a
            SoapGene object.  The base constructor must also be called here.
            </remarks>
            <param name="data">
            A SoapGene object from which to construct the
            ServerGene object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server gene wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGene object from a
            DataSet.  The base constructor must also be called here.
            </remarks>
            <param name="geneRow">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor given a base class row and the derived class row
            </summary>
            <param name="geneRow"></param>
            <param name="molecularEntityRow"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.Finalize">
            <summary>
            Destructor for the ServerGene class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerGene.__GeneRow">
            <summary>
            The contains the data for the derived class table.  Data from
            the base class table is maintained by the server base class.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.Delete">
            <summary>
            Deletes the ServerGene from the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetHomologues">
            <summary>
            Gives all the homologues of this gene (list does not include this gene)
            </summary>
            <returns>
            an array of gene homologues this gene
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetChromosome">
            <summary>
            Loads the chromosome for this gene
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetOrganism">
            <summary>
            Returns the organism that has this gene
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.AddGeneProductEncoding(System.Guid)">
            <summary>
            Adds an entry in the gene_encodings table
            </summary>
            <param name="gene_product_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.RemoveGeneProductEncoding(System.Guid)">
            <summary>
            Removes an entry in the gene_encodings table
            </summary>
            <param name="gene_product_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetAllGeneProducts">
            <summary>
            Gives all of the GeneProducts associated with this gene
            </summary>
            <returns>
            an array of Gene Products encoded by this gene
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.SetSqlCommandParameters">
            <summary>
            Required function for settign up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.AllGenes">
            <summary>
            Return all genes from the system.
            </summary>
            <returns>
            Array of SoapGene objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetAllGenesForOrganism(System.Guid)">
            <summary>
            Return all genes in an organism.
            </summary>
            <returns>
            Array of ServerGene objects.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.FindGenes(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all genes who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.FindGenes(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Guid)">
            <summary>
            Returns all genes who's name contains the given substring in a specific organism
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.Load(System.Guid)">
            <summary>
            Return a gene with given ID.
            </summary>
            <param name="id">
            The Guid of the desired gene.
            </param>
            <returns>
            SoapGene object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.LoadFromBaseRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Given a row from the base class, calls LoadRow on the base class id
            </summary>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.LoadRow(System.Guid)">
            <summary>
            Return the row for an object with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetNumOfPathwayGenes">
            <summary>
            Return the number of pathway-related genes in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetNumOfGenes">
            <summary>
            Return the total number of genes in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetNumOfGenes(System.String)">
            <summary>
            Return the total number of genes for an organism
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.AddGeneEncoding(System.Guid,System.Guid)">
            <summary>
            Add a gene encoding relationship
            </summary>
            <param name="gene_id"></param>
            <param name="gene_product_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GeneEncodingExists(System.Guid,System.Guid)">
            <summary>
            Check if a gene encoding relationship already exists
            </summary>
            <param name="gene_id"></param>
            <param name="gene_product_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.RemoveGeneEncoding(System.Guid,System.Guid)">
            <summary>
            Remove gene encoding relationship
            </summary>
            <param name="gene_id"></param>
            <param name="gene_product_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetAllPathwaysForGene(System.Guid)">
            <summary>
            Returns all pathways that involve processes related to gene products ( only through 
             the gene_products_and_processes table ) that are encoded by the given gene.
            </summary>
            <param name="geneId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGene.GetOrganismForGene(System.Guid)">
            <summary>
            Getting the organism or group for this gene
            </summary>
            <param name="geneId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.ID">
            <summary>
            Get/set the gene ID.  
            This must be the same value as ServerMolecularEntity.ID,
            so we override it and set the base class value as well 
            in the setter.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.HomologueGroupID">
            <summary>
            Get/set the gene's group ID.  
            
            A Gene group is used to identify homologous genes
            between different organisms.  This should be either
            set to the same value as another gene's GeneGroupId
            if they are homologous, or left empty and a new 
            GeneGroupId will be created at insertion.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.ChromosomeID">
            <summary>
            Get/set the chromosomome ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.CytogenicAddress">
            <summary>
            Get/set the cytogenic address.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.GeneticAddress">
            <summary>
            Get/set the genetic address.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.OrganismGroupID">
            <summary>
            Get/set the organism group id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.GeneNotes">
            <summary>
            Get/set the notes.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.RelativeAddress">
            <summary>
            Get/set the relative address.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGene.RawAddress">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGeneProduct">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerGeneProduct.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerGeneProduct.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological gene products.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.#ctor(PathwaysLib.SoapObjects.SoapGeneProduct,System.String)">
            <summary>
            Constructor for server gene product wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGeneProduct object from a
            SoapGeneProduct object.
            </remarks>
            <param name="data">
            A SoapGeneProduct object from which to construct the
            ServerGeneProduct object.
            </param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server gene product wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGeneProduct object from a
            data row.
            </remarks>
            <param name="geneProductRow">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server gene product wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGeneProduct object from a
            base class data row and the derived class data row.
            </remarks>
            <param name="geneProductRow">
            DBRow to load into the object.
            </param>
            <param name="molecularEntityRow"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.Finalize">
            <summary>
            Destructor for the ServerGeneProduct class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerGeneProduct.__GeneProductRow">
            <summary>
            The contains the data for the derived class table.  Data from
            the base class table is maintained by the server base class.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.Delete">
            <summary>
            Delete the gene product from gene_products table and the associated tables
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.AddToGeneEncoding(System.Guid)">
            <summary>
            Adds an entry in the gene_encodings table
            </summary>
            <param name="gene_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.RemoveFromGeneEncoding(System.Guid)">
            <summary>
            Removes an entry in the gene_encodings table
            </summary>
            <param name="gene_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetAllGenes">
            <summary>
            This will be used by ServerGeneProduct
            </summary>
            <returns>
            Returns all of the processes for this gene product
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.AddToProcess(System.Guid,System.Guid,System.String)">
            <summary>
            Adds this gene product to a given process, an ec number may also be assigned
            </summary>
            <param name="process_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.RemoveFromProcess(System.Guid,System.Guid,System.String)">
            <summary>
            Removes the relation between this gene product and the given process
            </summary>
            <remarks>
            In order to specify a row in the gene_products_and_processes, all three
            fields (gene_product_id, process_id, ec_number) must be given.
            </remarks>
            <param name="process_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetAllProcesses">
            <summary>
            Get all processes
            </summary>
            <returns>
            Returns all of the processes this is involved in
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetECNumberInProcess(System.Guid)">
            <summary>
            Get the ec number for this enzyme in the given process
            </summary>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetECNumberInProcessForOrganism(System.Guid,System.Guid)">
            <summary>
            Get the ec number for this organism in the given process
            </summary>
            <param name="processId"></param>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetAllOrganisms">
            <summary>
            Gets the organism that contains the gene encoding this enzyme.
            </summary>
            <returns>
            an array of the interface for organisms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.AllGeneProducts">
            <summary>
            Return all gene products from the system.
            </summary>
            <returns>
            Array of SoapGeneProduct objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.Load(System.Guid)">
            <summary>
            Return a gene product with given ID.
            </summary>
            <param name="id">
            The Guid of the desired gene product.
            </param>
            <returns>
            SoapGeneProduct object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.LoadFromBaseRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Calls LoadDerived on LoadRow on the base class id
            </summary>
            <param name="molecularEntityRow"></param>
            <returns>
            A ServerGeneProduct that corresponds to the given molecular entity row
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.LoadDerived(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Loads a concrete instance of a derived class from the
            corresponding 
            </summary>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a gene product with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.LoadFromRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Load a ServerGeneProduct from a DBRow.
            </summary>
            <param name="geneProductRow">
            The source row.
            </param>
            <returns>
            A gene product with the data supplied by the source row.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.Exists(System.Guid)">
            <summary>
            Returns true if the given gene product exists
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.CreateFromMolecularEntity(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Create a new gene product row from a molecular entity row
            </summary>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetAllOrganismsForGeneProduct(System.Guid)">
            <summary>
            Given an enzyme (gene product), gets the organisms that contains the gene encoding the enzyme.
            </summary>
            <param name="geneProductId"></param>
            <returns>
            An array of ServerOrganism's
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGeneProduct.GetAllPathwaysForGeneProduct(System.Guid)">
            <summary>
            Returns all pathways that involve processes related to gene products
             using the gene_products_and_processes table
            </summary>
            <param name="geneProductId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGeneProduct.ID">
            <summary>
            Get/set the GeneProduct ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGeneProduct.GeneProductNotes">
            <summary>
            Get/set the GeneProduct notes.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGenericProcess">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerGenericProcess.cs</filepath>
            		<creation>2005/10/19</creation>
            		<author>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/05/27 14:35:49 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerGenericProcess.cs,v 1.4 2009/05/27 14:35:49 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.4 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Provides a virtual view of a Generic Process (which in the current model
             corresponds to a set of Processes sharing a common GenericProcess GUID).
             This class exposes operations similar to ServerProcess, but are
             implemented by doing a union of the corresponding operations in its
             corresponding ServerProcesses.  In other words, this class represents
             the UNION of a set of Processes with are essentially the same
             process in multiple organisms, originally created for graph drawing.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetECNumbers">
            <summary>
            Returns the EC Number(s) for these processes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllProcessEntities">
            <summary>
            Get all entries in the process_entities (catalyze) relation for this generic process
            </summary>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetSpecificProcessEntities(System.String)">
            <summary>
            Get all entries in the process_entities (catalyze) relation for this generic process
            which take a specific role
            </summary>
            <param name="role">The specific role of the process entity</param>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllProcesses">
            <summary>
            Gets the list of specific processes that this generic process represents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllOrganisms">
            <summary>
            Returns all the organisms or organism groups for this generic process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllOrganismGroups">
            <summary>
            Returns all the organisms or organism groups for this generic process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllGeneProducts">
            <summary>
            Get all gene products
            </summary>
            <returns>
            Returns all of the gene products involved in the generic process
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.Equals(System.Object)">
            <summary>
            Returns true if the IDs of the objects match.  Send to the base
            Equals method if obj is not a ServerGenericProcess object
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetHashCode">
            <summary>
            Returns the hashcode for this generic process.
            </summary>
            <returns>An integer hashcode</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllReactions">
            <summary>
            Return all reactions for this process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.GetAllReactionAnnotations">
            <summary>
            Return all reaction annotations for this process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.LoadFromPathway(PathwaysLib.ServerObjects.ServerPathway)">
            <summary>
            From a pathway, convert a set of specific processes into a set of generic
            processes by forming the union of all processes that share a generic ID in the pathway.
            </summary>
            <param name="pathway"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.LoadGenericProcess(PathwaysLib.ServerObjects.ServerProcess[])">
            <summary>
            From a set of processes, create a generic process as the union of those processes (which must all share
            the same generic process ID.
            </summary>
            <param name="specificProcesses"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.Load(System.Guid)">
            <summary>
            Load a generic process by ID, forming a union of ALL specific processes in all pathways
            that share the same generic process ID.
            </summary>
            <param name="genericProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.AllGenericProcessesIds">
            <summary>
            Returns all generic process IDs found in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGenericProcess.LoadFromProcessSet(PathwaysLib.ServerObjects.ServerProcess[])">
            <summary>
            Convert a set of specific processes into a set of generic
            processes by forming the union of all processes that share a generic ID in the set.
            </summary>
            <param name="processes"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGenericProcess.Name">
            <summary>
            Get the Process name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGenericProcess.Reversible">
            <summary>
            Gets the Process reversibility.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGenericProcess.ID">
            <summary>
            Get the GenericProcess ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGenericProcess.GenericProcessID">
            <summary>
            Get the generic process id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGenericProcess.IsGenericProcess">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGONodeCode.#ctor(System.String,System.String)">
            <summary>
            Constructor for server node code
            </summary>
            <param name="ecNumber"></param>
            <param name="name"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGONodeCode.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server node code
            </summary>
            <remarks>
            This constructor creates a ServerNodeCode object from a
            DBRow.
            </remarks>
            <param name="data">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGONodeCode.Finalize">
            <summary>
            Destructor for the ServerECNumber class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGOTerm">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerGOTerm.cs</filepath>
            		<creation>2005/02/14</creation>
            		<author>
            			<name>Marc R. Reynolds</name>
            			<initials>mrr</initials>
            			<email>marc.reynolds@cwru.edu</email>
            		</author>
            		<cvs>
            			<cvs_author>$Author: murat $</cvs_author>
            			<cvs_date>$Date: 2010/11/19 21:13:29 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerGOTerm.cs,v 1.8 2010/11/19 21:13:29 murat Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.8 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access to GOTerms and the GOHierarchy
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for ServerGOTerm with fields initialized
            </summary>
            <param name="id">7-digit, leading zero'd GOID of the term</param>
            <param name="name">The name of the GOTerm</param>
            <param name="totalDescendants">The total number of descendants in this term's subtree</param>
            <param name="maximumSubtreeHeight">The maximum depth of this term's subtree</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.#ctor(PathwaysLib.SoapObjects.SoapGOTerm)">
            <summary>
            Constructor for server GOTerm wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGOTerm object from a
            SoapGOTerm object.
            </remarks>
            <param name="data">
            A SoapGOTerm object from which to construct the
            ServerGOTerm object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for ServerGOTerm wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerGOTerm object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerGOTerm._isLeafTerm">
            <summary>
            True if the term is a leaf term in the GO hierarchy, False if not
            Null if it hasn't been set by the Property yet
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerGOTerm.__RootTermID">
            <summary>
            The id of the root GO term.  This is used in methods like LoadRootTerm()
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerGOTerm.__GO_EC_AnnotationTable">
            <summary>
            The name of the table containing the 'GO--EC Number' relation 
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.ComputeNodeCodes">
            <summary>
            Once go_terms table is repopulated, their node codes also need to be recomputed.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadParentGOTerms">
            <summary>
            Creates new ServerGOTerm objects for each GO Term 
            which acts as a parent to this term
            </summary>
            <returns>The parent ServerGOTerm(s)</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadChildGOTerms">
            <summary>
            Creates new ServerGOTerm objects for each GO Term 
            which acts as a child to this term
            </summary>
            <returns>The child ServerGOTerm(s)</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadChildGOTermsWithMapping(System.String)">
            <summary>
            Returns set of child GO terms which (either directly or through an descendant) is mapped to a [model, compartment, or a reaction]
            </summary>
            <returns>The child ServerGOTerm(s) with a model</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadChildGOTermsWithMapping(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns set of child GO terms which (either directly or through an descendant) is mapped to a [model, compartment, or a reaction]
            </summary>
            <returns>The child ServerGOTerm(s) with a model</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllMappingAnnotations(System.String)">
            <summary>
            Return all entity type annotations for this organism.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllMappingAnnotations(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Return all entity type annotations for this organism based on name search.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetMappedEntityCount(System.String)">
            <summary>
            Returns the number of [models, compartments, or reactions] associated directly with a go term or with one its descendants
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetMappedEntityCount(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns the number of [models, compartments, or reactions] associated directly with a go term or with one its descendants
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetModelCountQuery">
            <summary>
            Returns the number of models associated directly with a go term or with one its descendants
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAnnotatedECNumbers">
            <summary>
            Get all EC Numbers this GO term annotates
            </summary>
            <returns>The ServerECNumbers this term annotates</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAnnotatedPathways(System.Guid[]@,System.Int32[]@)">
            <summary>
            Returns a collection of pathways annotated by GO term and the number of times
            the GO term annotates that pathway
            </summary>
            <param name="pathways">An array of pathways</param>
            <param name="annotationCounts">An array of counts which matches the array of pathways</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetMaximumTermLevel">
            <summary>
            Returns the maximum (most-general) level at which this term exists
            </summary>
            <returns>The number of the level</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.Load(System.Int32,System.Boolean)">
            <summary>
            Loads all ServerGOTerms existing at the given level, sorted by Name
            </summary>
            <param name="hierarchyLevel">The level of the GO hierachy to query</param>
            <param name="includeLeavesAboveLevel">True if leaves which exist above the given level
            should be included in the return list</param>
            <returns>The list of ServerGOTerms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadGOTermsWithMapping(System.Int32,System.Boolean,System.String)">
            <summary>
            Loads ServerGOTerms which are directly or through a descendant associated with a model, compartment, or reaction
            </summary>
            <param name="hierarchyLevel">The level of the GO hierachy to query</param>
            <param name="includeLeavesAboveLevel">True if leaves which exist above the given level
            should be included in the return list</param>
            <returns>The list of ServerGOTerms</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PathwaysLib.ServerObjects.ServerGOTerm.LoadGOTermsWithMapping(System.Int32,System.Boolean,System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)" -->
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadLeafTerms">
            <summary>
            Retrieves all GO terms which exist at the leaf-level of the hierarchy,
            sorted by Name
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.AllGOTerms">
            <summary>
            Retrieves all GO terms 
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllMappedEntitiesOfType(System.String)">
            <summary>
            Return all mapped entities of specified type for this GO term.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllMappedEntitiesOfType(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Return all mapped entities of specified type for this GO term .
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllModels">
            <summary>
            Return all models for this GO term.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetLeafLevelDescendants">
            <summary>
            Performs a DFS on the GO term's subtree to find
            all unique, leaf-level descendant terms
            </summary>
            <returns>An array all unique, leaf-level descendant terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.TransposeTermInHierarchy(System.Int32)">
            <summary>
            Find the unique terms relating to the current term and at the
            specified level
            </summary>
            <param name="level">The level of the hierarchy to which we want to transpose</param>
            <returns>The set of anscestor GO terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.TransposeTermDownHierarchy(System.Int32)">
            <summary>
            Find the unique terms below the current term
            </summary>
            <param name="level">The level of the hierarchy to which we want to transpose</param>
            <returns>The set of anscestor GO terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetDescendantTermIds">
            <summary>
            Find the unique terms below the current term
            </summary>
            <param name="level">The level of the hierarchy to which we want to transpose</param>
            <returns>The set of anscestor GO terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.TransposeTermUpHierarchy(System.Int32)">
            <summary>
            Find the unique terms above the current term
            </summary>
            <param name="level">The level of the hierarchy to which we want to transpose</param>
            <returns>The set of anscestor GO terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.Equals(System.Object)">
            <summary>
            Returns true if the IDs of the objects match.  Send to the base
            Equals method if obj is not a ServerGOTerm object
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetHashCode">
            <summary>
            HashCode generated on the GO ID of the term
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadRootTerm">
            <summary>
            Create a new ServerGOTerm from the root term of the hierarchy
            </summary>
            <returns>The root ServerGOTerm of the hierarchy</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.LoadRow(System.String)">
            <summary>
            Return the dataset for a GO Term with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.Load(System.String)">
            <summary>
            Constructor for loading an existing GOTerm by ID
            </summary>
            <param name="id">The 7-digit ID with leading zeros</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.GetAllGOTerms">
            <summary>
            Get all GO Terms
            </summary>
            <returns>All GO Terms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTerm.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.ID">
            <summary>
            get/set the 7-digit ID with leading zeros
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.Name">
            <summary>
            get/set the string Name of the GO Term
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.TotalDescendants">
            <summary>
            get/set the total number of GO terms in this term's subtree
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.MaximumSubtreeHeight">
            <summary>
            get/set the maximum depth of this term's subtree
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.IsLeafTerm">
            <summary>
            Returns true if this term has no children
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTerm.MaxHierarchyLevel">
            <summary>
            The number representing the maximum level of the GO hierarchy
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGOTerm.CompareGOName">
            <summary>
            Used to sort GO terms by name so they can be displayed nicely
            in a list
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGOTerm.CompareGOID">
            <summary>
            Used to sort GO terms by ID so BinarySearch can be performed
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGOTermProcess">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerGOTermProcess.cs</filepath>
            		<creation>2005/02/16</creation>
            		<author>
            			<name>Marc R. Reynolds</name>
            			<initials>mrr</initials>
            			<email>marc.reynolds@cwru.edu</email>
            		</author>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerGOTermProcess.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access to relationships between GO Terms and GenericProcesses
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.#ctor(PathwaysLib.ServerObjects.ServerGOTerm[],PathwaysLib.ServerObjects.ServerGenericProcess[])">
            <summary>
            Constructor for ServerGOTermProcess with initialization.
            List of ServerGOTerm(s) is sorted by GOID
            </summary>
            <param name="terms">The GO Terms</param>
            <param name="genericProcesses">The processes</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.TransposeAllGOTerms(System.Int32)">
            <summary>
            Transpose all the GO Terms up the hierarchy, removing duplicates
            </summary>
            <param name="hierarchyLevel">The level of the GO hierarchy to which terms
            will be transposed</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.TransposeAllGOTerms(PathwaysLib.ServerObjects.ServerGOTermProcess,System.Int32)">
            <summary>
            Method used to transpose all GO terms up to the given hierarchy level
            </summary>
            <param name="toTranspose">Contains the Terms to transpose</param>
            <param name="hierarchyLevel">The level to transpose the terms to</param>
            <returns>A transposed ServerGOTermProcess</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.TransposeAllGOTerms(PathwaysLib.ServerObjects.ServerGOTermProcess[],System.Int32,System.Boolean)">
            <summary>
            Transpose all GO Terms in all ServerGOTermProcess objects in the array
            </summary>
            <param name="toTranspose">The ServerGOTermProcess objects to transpose</param>
            <param name="hierarchyLevel">The level of the GO hierarchy to transpose annotations</param>
            <param name="mergeSameAnnotationProcesses">--not used--</param>
            <returns>A list of transposed ServerGOTermProcesses.  Position of transposed versions is the same as the un-transposed version</returns>
            <remarks>!!--NOT TESTED--!!</remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.HaveSameAnnotations(PathwaysLib.ServerObjects.ServerGOTermProcess,PathwaysLib.ServerObjects.ServerGOTermProcess)">
            <summary>
            Returns true if the annotations in 'left' are the same as those in 'right'
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns>True if the annotations in 'left' are the same as those in 'right'</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.CombineGenericProcesses(PathwaysLib.ServerObjects.ServerGOTermProcess,PathwaysLib.ServerObjects.ServerGOTermProcess)">
            <summary>
            Create a new ServerGOTermProcess which contains the generic process from both 'left' and 'right'
            GOTerms are take arbitrarily from the 'left' ServerGOTermProcess
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns>The new ServerGOTermProcess</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.SortGOTerms">
            <summary>
            Sorts the ServerGOTerms by GOID
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetHashCode">
            <summary>
            Generates a hash code from a list of ServerGenericProcesses
            by concatenating the Guid IDs into a string and getting
            the hashcode of that string
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetMaximumAnnotationlevel">
            <summary>
            Get the maximum level of all annotating terms
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetMaximumAnnotationLevel(PathwaysLib.ServerObjects.ServerGOTermProcess[])">
            <summary>
            Get the maximum level of all annotating terms in the collection
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetTotalNumberGOAnnotations(PathwaysLib.ServerObjects.ServerGOTermProcess[])">
            <summary>
            Calculate the total number of GO relationships in the collection
            </summary>
            <param name="col">The collection of ServerGOTermProcess relationships</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetAnnotationHash(PathwaysLib.ServerObjects.ServerGOTermProcess[])">
            <summary>
            Return a hashtable keyed on ServerGOTerms where the value is
            an ArrayList of ServerGenericProcesses which the term annotates.
            Note that concurrent annotations are split up, so there is a
            loss of information in this transformation.
            </summary>
            <param name="col">The collection of ServerGOTermProcesses</param>
            <returns>
            Hashtable
            key: ServerGOTerm
            value: ArrayList of ServerGenericProcesses the ServerGOTerm annotates
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetAnnotationHash(PathwaysLib.ServerObjects.ServerGOTermProcess[],PathwaysLib.ServerObjects.ServerGOTerm[]@)">
            <summary>
            Return a hashtable keyed on ServerGOTerms where the value is
            an ArrayList of ServerGenericProcesses which the term annotates.
            Note that concurrent annotations are split up, so there is a
            loss of information in this transformation.
            </summary>
            <param name="col">The collection of ServerGOTermProcesses</param>
            <param name="sortedKeyArray"></param>
            <returns>
            Hashtable
            key: ServerGOTerm
             value: ArrayList of ServerGenericProcesses the ServerGOTerm annotates
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GetTotalNumberGOAnnotations(PathwaysLib.ServerObjects.ServerGOTermProcess[],System.String)">
            <summary>
            Calculate the total number of GO relationships in the collection
            for a specific go term
            </summary>
            <param name="col">The collection of ServerGOTermProcess relationships</param>
            <param name="goid">The specific go term to check</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromGOTerm(PathwaysLib.ServerObjects.ServerGOTerm)">
            <summary>
            Retrieves the GO Term->Process relationships from the given GO term
            </summary>
            <param name="term">The GO term</param>
            <returns>A ServerGOTermProcess object with represents the 1->Many
            relationship between the given GO term and the processes it annotates</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromProcess(PathwaysLib.ServerObjects.ServerProcess)">
            <summary>
            Retrieves the Process->GO Term relationships from the given
            specific process using the Maximum level of the GO hierarchy
            </summary>
            <param name="process">The Process</param>
            <returns>A ServerGOTermProcess object with represents the 1->Many
            relationship between the given Process and the GO Terms which annotate it</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromProcess(PathwaysLib.ServerObjects.ServerProcess,System.Int32)">
            <summary>
            Retrieves the Process->GO Term relationships from the given
            specific process
            </summary>
            <param name="process">The Process</param>
            <param name="hierarchyLevel">The level of the GO hierarchy from which
            annotations will come</param>
            <returns>A ServerGOTermProcess object with represents the 1->Many
            relationship between the given Process and the GO Terms which annotate it</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromGenericProcess(PathwaysLib.ServerObjects.ServerGenericProcess)">
            <summary>
            Retrieves the Process->GO Term relationships from the given
            generic process process.  GO Annotations are taken from the maximum
            level of the hierarhcy
            </summary>
            <param name="genericProcess">The generic process</param>
            <returns>A ServerGOTermProcess object with represents the 1->Many
            relationship between the given generic process and the GO Terms which annotate it</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromGenericProcess(PathwaysLib.ServerObjects.ServerGenericProcess,System.Int32)">
            <summary>
            Retrieves the Process->GO Term relationships from the given
            generic process process
            </summary>
            <param name="genericProcess">The generic process</param>
            <param name="hierarchyLevel">The level of the GO hierarchy from which
            annotations will come</param>
            <returns>A ServerGOTermProcess object with represents the 1->Many
            relationship between the given generic process and the GO Terms which annotate it</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromPathway(PathwaysLib.ServerObjects.ServerPathway,System.Boolean)">
            <summary>
            Returns a set of GenericProcessID / GOTerm annotation sets
            </summary>
            <param name="pathway">The pathway to query</param>
            <param name="mergeProcessesWithSameGOAnnotations">true to merge set of generic processes 
            into one ServerGOTermProcess object if they share the same GO annotations</param>
            <returns>A set of GenericProcessID / GOTerm annotation sets</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.LoadFromPathway(PathwaysLib.ServerObjects.ServerPathway,System.Int32,System.Boolean)">
            <summary>
            Returns a set of GenericProcessID / GOTerm annotation sets
            </summary>
            <param name="pathway">The pathway to query</param>
            <param name="hierarchyLevel">The level of the GO hierarchy from which annotations come</param>
            <param name="mergeProcessesWithSameGOAnnotations">true to merge set of generic processes 
            into one ServerGOTermProcess object if they share the same GO annotations</param>
            <returns>A set of GenericProcessID / GOTerm annotation sets</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerGOTermProcess.GenerateGOBasedHashCode">
            <summary>
            Return a hashcode based upon the the concatenation
            of the ids of the GO terms
            </summary>
            <returns>The hashcode</returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTermProcess.GOTerms">
            <summary>
            get the array of GO terms associated with the processes
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerGOTermProcess.GenericProcesses">
            <summary>
            get the array of GenericProcesses associated with
            the GO term
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerGOTermProcess.GOIDComparer">
            <summary>
            Used to sort terms by GOID
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.#ctor(PathwaysLib.SoapObjects.SoapInitialAssignment)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.AllFunctionDefinitions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerInitialAssignment.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerInitialAssignment.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerInitialAssignment.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerInitialAssignment.Symbol">
            <summary>
            Get/set the symbol.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerInitialAssignment.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.#ctor(PathwaysLib.SoapObjects.SoapKineticLaw)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.AllKineticLaws">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerKineticLaw.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerKineticLaw.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:PathwaysLib.ServerObjects.ServerKineticLaw.Math" -->
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.#ctor(System.Guid,System.Guid,System.Int32,System.Guid)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.#ctor(PathwaysLib.SoapObjects.SoapMapModelsPathways)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.AllMapModelsPathways">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.Load(System.Guid,System.Guid,System.Int32,System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapModelsPathways.LoadRow(System.Guid,System.Guid,System.Int32,System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapModelsPathways.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapModelsPathways.PathwayId">
            <summary>
            Get/set the pathwayId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapModelsPathways.QualifierId">
            <summary>
            Get/set the qualifierId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapModelsPathways.OrganismGroupId">
            <summary>
            Get/set the organismGroupId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.#ctor(System.Guid,System.String,System.Int32)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.AllMapReactionECNumbers">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.Load(System.Guid,System.String,System.Int32)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionECNumber.LoadRow(System.Guid,System.String,System.Int32)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapReactionECNumber.ReactionId">
            <summary>
            Get/set the reaction.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapReactionECNumber.ECNumber">
            <summary>
            Get/set the ecNumber.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.#ctor(System.Guid,System.Guid,System.Int32)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.#ctor(PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.AllMapReactionsProcessEntities">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.Load(System.Guid,System.Guid,System.Int32)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.LoadRow(System.Guid,System.Guid,System.Int32)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.ReactionId">
            <summary>
            Get/set the reaction.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapReactionsProcessEntities.ProcessId">
            <summary>
            Get/set the processId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.#ctor(System.Guid,System.String,System.Int16)">
            <summary>
            Constructor for ServerMapSbaseGO with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for ServerMapSbaseGO.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.#ctor(PathwaysLib.SoapObjects.SoapMapSbaseGO)">
            <summary>
            Constructor for server DataSource wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerDataSource object from a
            SoapDataSource object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.Finalize">
            <summary>
            Destructor for the ServerMapSbaseGO class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerDataSource
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the DataSource relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.AllMapSbaseGO">
            <summary>
            Return all catalyzing relations from the system.
            </summary>
            <returns>
            Array of SoapDataSource objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.Exists(System.Guid)">
            <summary>
            Returns true if there exists a data source with the given name.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.Load(System.Guid,System.String)">
            <summary>
            Returns a single ServerDataSource object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.LoadRow(System.Guid,System.String)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.LoadRow(System.String)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given id.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.Load(System.Guid,System.String,System.Int16)">
            <summary>
            Returns a single ServerMapSbaseGO object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSbaseGO.LoadRow(System.Guid,System.String,System.Int16)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapSbaseGO.SbaseId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapSbaseGO.QualifierId">
            <summary>
            Get/set the qualifierId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapSbaseGO.GOId">
            <summary>
            Get/set the organismGroupId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.#ctor(System.Guid,System.Guid,System.Int32)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.#ctor(PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.AllMapSpeciesMolecularEntities">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.Load(System.Guid,System.Guid,System.Int32)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.LoadRow(System.Guid,System.Guid,System.Int32)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.SpeciesId">
            <summary>
            Get/set the species.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMapSpeciesMolecularEntities.MolecularEntityId">
            <summary>
            Get/set the molecularEntityId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.#ctor(PathwaysLib.SoapObjects.SoapModel)">
            <summary>
            Constructor for server Model wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerModel object from a
            SoapModel object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server DataSource wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerDataSource object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.CheckPathwaysExist">
            <summary>
            Checks if Pathways related to a model exist!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllPathways">
            <summary>
            Gets all the pathways related with "this" model
            <returns>
            ServerPathway[]
            </returns>
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetImmediateChildren(System.Guid)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.CheckCompartmentsExist">
            <summary>
            Checks if Compartments related to a model exist!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllCompartments">
            <summary>
            Gets all the Compartments related to a model!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.CheckReactionsExist">
            <summary>
            Checks if Reactions related to a model exist!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllReactions">
            <summary>
            Gets all the Reactions related to a model!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllReactionNames">
            <summary>
            Gets all the Reaction names related to a model!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.CheckSpeciesExist">
            <summary>
            Checks if Species related to a model exist!!
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllSpecies">
            <summary>
            Gets all the Species related to a model!! not implemented
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetAllSpeciesNames">
            <summary>
            Gets all the Species related to a model!! not implemented
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetModelLayout(System.Guid)">
            <summary>
            Get the freezed layout for a single pathway.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetModelsFromPathwayId(System.Guid)">
            <summary>
            Get all models of a given pathway.
            </summary>
            <param name="id">Id of the pathway that is going to be searched for models.</param>
            <returns>Array of models in the given pathway, empty array is returned if there are no models.</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.GetOrganismGroups">
            <summary>
            Get organism groups of the model.
            </summary>
            <returns>Array of organism group, if there is not an organism group for the model.</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.AllModels">
            <summary>
            Return all Models from the system.
            </summary>
            <returns>
            Array of SoapModel objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.Load(System.Guid)">
            <summary>
            Returns a single ServerModel object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.CountFindModels(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of Models that would be found with the supplied search parameters.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found models.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.FindModels(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModel.FindModelsByFileName(System.String)">
            <summary>
            A search function for SBML Parser
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.ID">
            <summary>
            Get/set the Model ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.SbmlId">
            <summary>
            Get/set the Model sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.Name">
            <summary>
            Get/set the Model name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.SbmlLevel">
            <summary>
            Get/set the Model sbmlLevel.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.SbmlVersion">
            <summary>
            Get/set the Model sbmlVersion.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModel.DataSourceId">
            <summary>
            Get/set the Model dataSourceId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.#ctor(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.#ctor(PathwaysLib.SoapObjects.SoapModelOrganism)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.Load(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerModelOrganism.LoadRow(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModelOrganism.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModelOrganism.OrganismGroupId">
            <summary>
            Get/set the organismGroupId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerModelOrganism.NCBITaxonomyId">
            <summary>
            Get/set the qualifierId.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerMolecularEntityName">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerMolecularEntityName.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerMolecularEntityName.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many names associated with a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.#ctor(PathwaysLib.SoapObjects.SoapMolecularEntityName)">
            <summary>
            ServerMolecularEntityName constructor
            </summary>
            <param name="data">
            A SoapMolecularEntityName object from which to create this object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            ServerMolecularEntityName constructor.
            </summary>
            <param name="data">
            The DBrow from which to initialize this object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.AllNames(System.Guid)">
            <summary>
            Return all of the names for the supplied molecular entity id.
            </summary>
            <param name="molecularEntityId">
            The id of the molecular entity on which to do the lookup.
            </param>
            <returns>
            A list of names for the molecular entity with id molecularEntityId.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.Load(System.Guid,System.String)">
            <summary>
            Load a MolecularEntityName from its id and name.
            </summary>
            <param name="molecularEntityId">
            The supplied id.
            </param>
            <param name="name">
            The supplied name.
            </param>
            <returns>
            A SErverMolecularEntityName object corresponding to the input parameters.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.Exists(System.Guid,System.String)">
            <summary>
            Does this MolecularEntityName exist?
            </summary>
            <param name="molecularEntityId">
            The id to check.
            </param>
            <param name="name">
            The name to check.
            </param>
            <returns>
            Existence of a molecularentityname with corresponding parameters.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerMolecularEntityName.UpdateDatabase">
            <summary>
            Persist the ServerMolecularEntityNAme to the database.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntityName.MolecularEntityId">
            <summary>
            Get/set the MolecularEntityId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntityName.NameId">
            <summary>
            Get/set the NameId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntityName.Type">
            <summary>
            Get/set entity name type as a string.  Wraps TypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntityName.TypeId">
            <summary>
            Get/set entity name type ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerMolecularEntityName.Name">
            <summary>
            Get/set the Name.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerOrganism">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerOrganism.cs</filepath>
            		<creation>2005/06/16</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brian Lauber</name>
            				<initials>bml</initials>
            				<email>bml8@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ann $</cvs_author>
            			<cvs_date>$Date: 2009/09/17 20:40:38 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerOrganism.cs,v 1.2 2009/09/17 20:40:38 ann Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to organisms.
             </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerOrganismGroup">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerOrganismGroup.cs</filepath>
            		<creation>2005/07/01</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: murat $</cvs_author>
            			<cvs_date>$Date: 2010/11/19 21:13:29 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerOrganismGroup.cs,v 1.11 2010/11/19 21:13:29 murat Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.11 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to organism groups.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.#ctor(System.String,System.Guid,System.String)">
            <summary>
            Constructor for server organism group wrapper with fields initiallized
            </summary>
            <param name="scientific_name"></param>
            <param name="parentId"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.#ctor(System.String,System.String,System.Guid,System.String)">
            <summary>
            Same as the above, but also including a common name
            </summary>
            <param name="scientific_name"></param>
            <param name="common_name"></param>
            <param name="parentID"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.#ctor(PathwaysLib.SoapObjects.SoapOrganismGroup)">
            <summary>
            Constructor for server organism group wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerOrganismGroup object from a
            SoapOrganismGroup object.
            </remarks>
            <param name="data">
            A SoapOrganismGroup object from which to construct the
            ServerOrganismGroup object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server organism group wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerOrganismGroup object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.Finalize">
            <summary>
            Destructor for the ServerOrganismGroup class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetPathways">
            <summary>
            Finds all pathways assocated w/ this organism group (and everything under it)
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetMolecularEntities">
            <summary>
            Find all molecular entities associated with this organism
            </summary>
            <returns>A list of ServerMolecularEntity objects containing molecules, rnas, ...</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllModels">
            <summary>
            Return all models for this organism.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllModelAnnotations">
            <summary>
            Return all model annotations for this organism.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildOrganisms">
            <summary>
            Get all organisms that are immediately (ie, 1 level) under this group
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildGroups">
            <summary>
            Get all groups immediately under this group
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildren">
            <summary>
            Find all of the ServerOrganism's and ServerOrganismGroups 1 level under this group
            </summary>
            <returns>An array of ServerOrganismGroups (Note that some of these may actually be ServerOrganism's)</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildrenWithModel">
            <summary>
            Find all of the ServerOrganism's and ServerOrganismGroups 1 level under this group with at least one model
            </summary>
            <returns>An array of ServerOrganismGroups (Note that some of these may actually be ServerOrganism's)</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildGroups">
            <summary>
            Find all groups under the current group (if a group has an organism part, the group is not returned)
            </summary>
            <returns>An array of ServerOrganismGroup's containing only groups</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildOrganisms">
            <summary>
            Find all organisms under the current group
            </summary>
            <returns>An array of ServerOrganism's</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildren">
            <summary>
            Trace down the group hierarchy to return all organisms and groups under this one
            </summary>
            <returns>An array of ServerOrganismGroup's containing groups and organisms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildrenAndParent">
            <summary>
            Grab all organisms and groups under current group, plus the current group
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllProcesses">
            <summary>
            Return all processes for this organism group
            </summary>
            <returns>
            an array of processes for this organism group
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllEntityRoleProcessAndPathways">
            <summary>
            Return all processes for this organism group
            </summary>
            <returns>
            an array of processes for this organism group
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismGroups">
            <summary>
            Return all organism groups from the system.
            </summary>
            <returns>
            Array of SoapOrganismGroup objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismGroupsForPathway(System.Guid)">
            <summary>
            Return all organism groups for a pathway
            </summary>
            <param name="pathwayId">The pathway id</param>
            <returns>ServerOrganismGroup array</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismGroupsForPathway(System.String)">
            <summary>
            Return all organism groups for a pathway Group
            </summary>
            <param name="cspathwayIds">comma separated list of pathway ids</param>
            <returns>ServerOrganismGroup array</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.RequireIdInList(PathwaysLib.ServerObjects.ServerOrganismGroup[])">
            <summary>
            Create a list of id's that can be inserted into an SQL query (ex:    id IN (id_1, id_2, ...) )
            </summary>
            <param name="groups"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.RequireIdInList(PathwaysLib.ServerObjects.ServerOrganismGroup[],System.String,System.String)">
            <summary>
            Create a list of id's that can be inserted into an SQL query (ex:    id IN (id_1, id_2, ...) )
            </summary>
            <param name="table">The pseudonym given to the organism_groups table.  Ex: grp for grp.id</param>
            <param name="column">The column name (usually just "id")</param>
            <param name="groups"></param>
            <returns>A list of ServerOrganismGroup id's ready to be inserted into an sql query</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildOrganisms(System.Guid)">
            <summary>
            Get all organisms that are immediately (ie, 1 level) under this group
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildGroups(System.Guid)">
            <summary>
            Get all groups immediately under this group
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildren(System.Guid)">
            <summary>
            Get all groups and organisms immediately under this group
            </summary>
            <param name="id">id of an organism or group</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildrenWithModel(System.Guid)">
            <summary>
            Get all groups and organisms immediately under this group with at least one model
            </summary>
            <param name="id">id of an organism or group</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildren(System.Guid,System.Collections.ArrayList@)">
            <summary>
            Get all organisms and groups immediately under the one specified by id.  This is a private version
            that uses a reference to an array list for efficiency in recursive calls
            </summary>
            <param name="id"></param>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetImmediateChildrenWithModel(System.Guid,System.Collections.ArrayList@)">
            <summary>
            Get all organisms and groups immediately under the one specified by id and has a model.  This is a private version
            that uses a reference to an array list for efficiency in recursive calls
            </summary>
            <param name="id"></param>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildOrganisms(System.Guid)">
            <summary>
            Get all organisms under the current group (not just immediately under)
            </summary>
            <param name="id"></param>
            <returns>An array of ServerOrganisms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildGroups(System.Guid)">
            <summary>
            Return all groups under the current group (note: does not return any group w/ an organism part.  If
            you need that, just call GetAllChildren )
            </summary>
            <param name="id"></param>
            <returns>An array of ServerOrganismGroup's containing only groups</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildren(System.Guid)">
            <summary>
            Get all organisms and groups under the current group
            </summary>
            <param name="id"></param>
            <returns>An array of ServerOrganismGroup's containing both groups and organisms</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildrenAndParent(System.Guid)">
            <summary>
            Grab all organisms and groups under current group, plus the current group
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetAllChildren(System.Guid,System.Collections.ArrayList@)">
            <summary>
            Get all children under the specified group or organism.  This is a private version used
            for efficient recursive calls
            </summary>
            <param name="id"></param>
            <param name="results"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismEntities">
            <summary>
            Return all organisms and organism groups as ServerOrganismGroup Objects from the system.
            </summary>
            <returns>
            Array of ServerOrganismGroups (some of which are just organisms)
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganisms">
            <summary>
            Return all organisms as ServerOrganismGroup Objects from the system.
            </summary>
            <returns>
            Array of ServerOrganismGroups (all of which are just organisms)
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismsGroup">
            <summary>
            Return all organism groups as ServerOrganismGroup Objects from the system.
            </summary>
            <returns>
            Array of ServerOrganismGroups (all of which are just organism groups)
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismsWithGenes">
            <summary>
            Return all organisms which has a gene in the database.
            </summary>
            <returns>
            Array of ServerOrganismGroups (all of which are just organisms)
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.LoadMultiple(System.Data.SqlClient.SqlCommand)">
            <summary>
            Returns an array containing organisms and groups
            </summary>
            <param name="command">A query returning mutltiple rows from the organism_groups table.  Note
            that it must return all columns, and not just the id</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.LoadFromDBRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Attempts to load an organism group from a row of data.  If this is an organism, it will pull the
            additional information that it needs
            </summary>
            <param name="r">A row from organism_groups containing information for the organism or group</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.LoadFromID(System.Guid)">
            <summary>
            Given an id, it will load an organism or an organism_group
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismGroupIds">
            <summary>
            Returns the GUID IDs of all pathways in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AllOrganismGroups(System.Int32,System.Int32)">
            <summary>
            Return all pathways, paginated.
            </summary>
            <param name="startRecord">
            Record to start the page from.
            </param>
            <param name="maxRecords">
            The number of records for the page.
            </param>
            <returns>
            Array of ServerPathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.CountAllOrganismGroups">
            <summary>
            Returns a count of all the organisms and groups in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.FindByName(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all organims groups whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.FindByName(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.FindByNameWithModel(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.CountFindByName(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of organisms and groups that would be found with the supplied search parameters.
            Searches for both common and scientific name.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found pathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.CountFindByNameWithModel(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of organisms and groups that would be found with the supplied search parameters.
            Searches for both common and scientific name.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found pathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.FindByCommonName(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all organims groups whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.FindByCommonName(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.CountFindByCommonName(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of organisms and groups that would be found with the supplied search parameters.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found pathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetRoots">
            <summary>
            Returns all organism groups that don't have parent
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetRootsWithModel">
            <summary>
            Returns all organism groups that don't have parent and has an associated model
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.AddSubHierarchyToXML">
            <summary>
            Adds its subhierarchy to the input XML fragment
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.Load(System.Guid)">
            <summary>
            Return a organism group with given ID.
            </summary>
            <param name="id">
            The Guid of the desired organism group.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.LoadRow(System.Guid)">
            <summary>
            Return the DBRow for a organism group with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.LoadSingle(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates a single ServerOrganism from an SQL query
            </summary>
            <param name="command">An SQL query that returns a single row from organism_groups.  Note that the query
            must output every column of organism_groups</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.Exists(System.Guid)">
            <summary>
            See if given id corresponds to an existing organism group
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.Exists(System.String)">
            <summary>
            Check for the existance of the group by scientific or common name
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganismGroup.GetOrganismHierarchy">
            <summary>
            Creates an xml string representing the hierarchy of all groups
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.ID">
            <summary>
            Get/set the organism group ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.Name">
            <summary>
            Formats the name depending upon whether the scientific name, common name, or both are available
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.ScientificName">
            <summary>
            Get/set the organism group scientific name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.CommonName">
            <summary>
            Get/Set the common name for the organism group
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.ParentID">
            <summary>
            Get/set the organism_group parent ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.Notes">
            <summary>
            Get/set the organism group notes.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.IsOrganism">
            <summary>
            Get/Set whether or not this is an organism
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganismGroup.NodeLabel">
            <summary>
            Node label for quickly determining ancestor/descendant organism groups.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.#ctor(System.String,System.String,System.String,System.Guid,System.String,System.Int32)">
            <summary>
            Constructor for server organism wrapper with fields initiallized
            </summary>
            <param name="common"></param>
            <param name="scientific"></param>
            <param name="taxonomyId"></param>
            <param name="parent"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.#ctor(PathwaysLib.SoapObjects.SoapOrganism)">
            <summary>
            Constructor for server Organism wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerOrganism object from a
            SoapOrganism object.
            </remarks>
            <param name="data">
            A SoapOrganism object from which to construct the
            ServerOrganism object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server organism wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerOrganism object from its organism and organism_group rows
            </remarks>
            <param name="organism">
            The organism part
            </param>
            <param name="group">
            The group part of the organism
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Loads a ServerOrganism from a row of the organisms table
            </summary>
            <param name="organism">A row of the organisms table</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.Finalize">
            <summary>
            Destructor for the ServerOrganism class.
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerOrganism.UnspecifiedOrganism">
            <summary>
            The string representation of an unspecified organism
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerOrganism
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the organism.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.AllOrganisms">
            <summary>
            Return all organisms from the system.
            </summary>
            <returns>
            Array of SoapOrganism objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.AllOrganismsForPathway(System.Guid)">
            <summary>
            Returns all organisms that contain a pathway (i.e. contain any process in that pathway).
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.Load(System.Guid)">
            <summary>
            Return a Organism with given ID.
            </summary>
            <param name="id">
            The Guid of the desired Organism.
            </param>
            <returns>
            SoapOrganism object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.LoadRow(System.Guid)">
            <summary>
            Returns the row information for the organism part only
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.LoadFromGroupRow(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Loads a ServerOrganism from a row of its group table.  I would have made this a constructor,
            but alas, its parameter type has already been overloaded
            </summary>
            <param name="group">A row from the organism_groups table (where is_organism=1)</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.LoadMultiple(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates an array of ServerOrganism objects from an SQL query for multiple organism rows.
            </summary>
            <param name="command">A query for multiple rows of organism.  Note that the query must output
            all columns of organism (not just the id's)!</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.LoadSingle(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates a single ServerOrganism from an SQL query
            </summary>
            <param name="command">An SQL query that returns a single row from organism_groups.  Note that the query
            must output every column of organism_groups</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerOrganism.Exists(System.Guid)">
            <summary>
            See if the organism_id is valid
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganism.ID">
            <summary>
            Get/set the Organism ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganism.TaxonomyID">
            <summary>
            Get/set the organism's taxonomy id
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerOrganism.CM_Unit_Length">
            <summary>
            Get/set the cM_unit_length
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.#ctor(PathwaysLib.SoapObjects.SoapParameter)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.AllParameters">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerParameter.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.ReactionId">
            <summary>
            Get/set the reactionId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.Value">
            <summary>
            Get/set the pvalue.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.UnitsId">
            <summary>
            Get/set the unitsId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerParameter.Constant">
            <summary>
            Get/set the constant.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerPathway">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerPathway.cs</filepath>
            		<creation>2005/06/08</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brandon S. Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: murat $</cvs_author>
            			<cvs_date>$Date: 2010/11/19 21:13:29 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerPathway.cs,v 1.12 2010/11/19 21:13:29 murat Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.12 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological pathways.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, creates a new pathway with fields initiallized
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="pathwayStatus"></param>
            <param name="pathwayNotes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.#ctor(PathwaysLib.SoapObjects.SoapPathway)">
            <summary>
            Constructor for server pathway wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerPathway object from a
            SoapPathway object.
            </remarks>
            <param name="data">
            A SoapPathway object from which to construct the
            ServerPathway object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server pathway wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerPathway object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.Finalize">
            <summary>
            Destructor for the ServerPathway class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGenomesForASetOfPathways(System.String)">
            <summary>
            Returns the set of organisms that have at least one mapped gene encoding an enzyme of a pathway in a given set of comma separated pathways.
            </summary>
            <param name="pathwayIdSet"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AddPathwayLink(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Adds a tuple to the pathway_links table, which denotes a linking molecular_entity between two pathways
            </summary>
            <param name="pathwayId1"></param>
            <param name="pathwayId2"></param>
            <param name="entityId"></param>
            <param name="notes"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.RemovePathwayLink(System.Guid,System.Guid,System.Guid)">
            <summary>
            Removes the given pathway link.
            </summary>
            <param name="pathwayId1"></param>
            <param name="pathwayId2"></param>
            <param name="entityId"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.PathwayLinkExists(System.Guid,System.Guid,System.Guid)">
            <summary>
            Tells whether an entry already exists in the pathway_links table with
            the given pathwayId1, pathwayId2, and entityId
            </summary>
            <param name="pathwayId1"></param>
            <param name="pathwayId2"></param>
            <param name="entityID"></param>
            <returns>
            True if the tuple exists in the pathway_links table, false if it doesn't
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetMappingPathwayByModelID(System.Guid)">
            <summary>
            
            </summary>
            <param name="mid"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllOrganismGroups">
            <summary>
            Returns all organisms and organism groups that contain this pathway (i.e. contain one of its processes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetHashCode">
            <summary>
            Derives the Hashcode from the Guid ID of the pathway
            </summary>
            <returns>The Hashcode</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOAnnotatingTerms(System.Int32,System.Boolean)">
            <summary>
            Returns a set of GenericProcessID / GOTerm annotation sets for this pathway
            at the specified level.
            </summary>
            <param name="level">The level of the GO hierarchy from which annotations come</param>
            <param name="mergeTermsWithSameAnnotations">true to merge set of generic processes 
            into one ServerGOTermProcess object if they share the same GO annotations</param>
            <returns>A set of GenericProcessID / GOTerm annotation sets</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllModels">
            <summary>
            Return all models for this pathway.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllModelAnnotations">
            <summary>
            Return all model annotations for this pathway.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllProcesses">
            <summary>
            Return all processes for this pathway.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllGenericProcesses">
            <summary>
            Return all generic processes for this pathway.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllGOTermProcesses(System.Boolean)">
            <summary>
            Get all GOTerm / Generic Process pairings in this pathway
            </summary>
            <param name="mergeProcessesWithSameGOAnnotations">true to merge set of generic processes 
            into one ServerGOTermProcess object if they share the same GO annotations</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllGOTermProcesses(System.Int32,System.Boolean)">
            <summary>
            Get all GOTerm / Generic Process pairings in this pathway
            </summary>
            <param name="mergeProcessesWithSameGOAnnotations">true to merge set of generic processes 
            into one ServerGOTermProcess object if they share the same GO annotations</param>
            <param name="hierarchyLevel">The level of the GO hierarchy from which annotations will come</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AddProcess(System.Guid,System.String)">
            <summary>
            Add the given process to this pathway
            </summary>
            <param name="process_id"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.RemoveProcess(System.Guid)">
            <summary>
            Remove the given process from this pathway
            </summary>
            <param name="process_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetLinkingEntities">
            <summary>
            Returns an array of the entities that link this pathway to other pathways
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetLinkedPathways">
            <summary>
            Returns an array of the pathways linked to this pathway
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetConnectedPathways">
            <summary>
            Returns an array of ConnectedPathwayAndCommonProcesses objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwayGroup">
            <summary>
            Load the pathway group to which a pathway belongs
            </summary>
            <returns>The pathway group</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetExternalDatabaseLinks">
            <summary>
            Get the external database links for this pathway, ordered by the db id
            </summary>
            <returns>the external database links for this pathway</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwaysThatHaveMoreThanOneModel">
            <summary>
            Pathways that a contains more than one model, for comparison.
            </summary>
            <returns>Array of pathways that contain more than one model.</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOAnnotationCount(System.String,System.Int32)">
            <summary>
            Get the number of times a GO term annotates processes
            within all pathways
            </summary>
            <param name="GOID">The 7-digit GO id with leading zeros</param>
            <param name="level">The level of the GO hierarchy</param>
            <returns>The number of times the GO term annotates</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOAnnotationCount(System.Int32)">
            <summary>
            Get the total number of annotations from all GO terms
            within all pathways at the given level
            </summary>
            <param name="level">The level of the GO hierarchy</param>
            <returns>The total number of annotations</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOEnrichmentSignificance(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the significance of an annotation count within all pathways
            using hypergeometric distribution
            </summary>
            <param name="GOID">The GO id</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="sampleAnnotationSize">The total number of annotations (by any GO term) within the sample</param>
            <param name="sampleAnnotationSuccesses">The total number of times the given GO term annotates within the sample</param>
            <returns>The P-value of the annotation significance</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOEnrichmentRatio(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the significance of an annotation count within all pathways
            by computing the enrichment ratio, which compares the expected
            annotation rate (the rate of annotation in all pathways)
            with the observed annotation rate
            </summary>
            <param name="GOID">The GO term id</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="sampleAnnotationSize">The total number of annotations (by any GO term) within the sample</param>
            <param name="sampleAnnotationSuccesses">The total number of times the given GO term annotates within the sample</param>
            <returns>observed annotation rate / expected annotation rate</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOExpectedRatio(System.String,System.Int32)">
            <summary>
            Returns the expected annotation rate for a given GO term at a level of the GO hierarchy
            </summary>
            <param name="GOID">The ID of the GO term</param>
            <param name="level">The level of the go hierarchy</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGOEnrichment(System.String,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the significance of an annotation count within all pathways
            by computing the enrichment ratio and enrichment significance
            </summary>
            <param name="GOID">The GO term id</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="sampleAnnotationSize">The total number of annotations (by any GO term) within the sample</param>
            <param name="sampleAnnotationSuccesses">The total number of times the given GO term annotates within the sample</param>
            <param name="enrichmentRatio">observed annotation rate / expected annotation rate</param>
            <param name="enrichmentSignificance">The significance of the annotation, based upon the hypergeometric distribution</param>
            <param name="expectedSuccesses">The number of successes expected</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AllPathways">
            <summary>
            Return all pathways from the system.
            </summary>
            <returns>
            Array of ServerPathways
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwaysOfOrganism(System.Guid)">
            <summary>
            Finds all pathways assocated w/ this organism group (and everything under it)
            </summary>
            
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.getNames(System.String)">
            <summary>
            Return names of the pathways in the comma-separated list.
            </summary>
            <param name="cspathwayIds">
            comma-separated list of pathways.
            </param>
            <returns>
            ArrayList with its element as pathwayId|pathwayname
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AllPathwayIds">
            <summary>
            Returns the GUID IDs of all pathways in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AllPathways(System.Int32,System.Int32)">
            <summary>
            Return all pathways, paginated.
            </summary>
            <param name="startRecord">
            Record to start the page from.
            </param>
            <param name="maxRecords">
            The number of records for the page.
            </param>
            <returns>
            Array of ServerPathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.CountAllPathways">
            <summary>
            Returns a count of all the pathways in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.FindPathways(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all pathways who's name contains the given substring.
            
            SearchMethod must be one of the following strings (exact case/spacing):
            "Contains", "Ends with", "Exact match", or "Starts with".
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.FindPathways(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.FindPathwaysWithModel(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            A search function for paging
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="startRecord"></param>
            <param name="maxRecords"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.CountFindPathwaysWithModel(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of pathways that would be found with the supplied search parameters.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found pathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.CountFindPathways(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count of the number of pathways that would be found with the supplied search parameters.
            </summary>
            <param name="substring">
            The substring we're searching for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Count of found pathways.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.Load(System.Guid)">
            <summary>
            Return a pathway with given ID.
            </summary>
            <param name="id">
            The Guid of the desired pathway.
            </param>
            <returns>
            SoapPathway object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.LoadMultiple(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates an array of ServerPathway objects from an SQL query for multiple pathways rows.
            </summary>
            <param name="command">A query for multiple rows of pathways.  Note that the query must output
            all columns(not just the id's)!</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.LoadSingle(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates a single ServerPathway from an SQL query
            </summary>
            <param name="command">An SQL query that returns a single row from pathways.  Note that the query
            must output every column</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.Exists(System.Guid)">
            <summary>
            Returns true if there exists a pathway with the given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.LoadRow(System.Guid)">
            <summary>
            Return the dataset for a pathway with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGeneMappingForASetOfPathways(System.String,System.Guid)">
            <summary>        
            Return the mappings of the genes on chromosomes for a given set of comma-separated pathways
            </summary>
            <param name="pathwayidSet"></param>
            <param name="organismGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGeneMapping(System.Guid,System.Guid)">
            <summary>
            Return the mappings of the genes on chromosomes for a given pathway
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGeneMapping(System.Guid)">
            <summary>
            Return the mappings of the genes on chromosomes for a given pathway
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetGenomes(System.Guid)">
            <summary>
            Returns the set of organisms that have at least one mapped gene encoding an enzyme of a given pathway
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.AddProcessToPathway(System.Guid,System.Guid,System.String)">
            <summary>
            Add a process to a pathway
            </summary>
            <param name="pathway_id"></param>
            <param name="process_id"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.PathwayProcessExists(System.Guid,System.Guid)">
            <summary>
            Check if a process already belongs to a pathway
            </summary>
            <param name="pathway_id"></param>
            <param name="process_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.RemoveProcessFromPathway(System.Guid,System.Guid)">
            <summary>
            Remove a process from a pathway
            </summary>
            <param name="pathway_id"></param>
            <param name="process_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetLinkedPathwaysAndEntitiesForPathway(System.Guid)">
            <summary>
            Get a DataSet of linked pathways and the common entity between them
            </summary>
            <param name="pathwayId"></param>
            <returns>
            A data set of pathways and entities
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwaysLinkedToPathway(System.Guid)">
            <summary>
            Returns an array of the pathways linked to the given pathway
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetProcessesInCommonForPathways(System.Guid,System.Guid)">
            <summary>
            Returns an array of processes that two pathways have in common
            Created for use by ConnectedPathwayAndCommonProcesses.
            </summary>
            <param name="pathwayId1"></param>
            <param name="pathwayId2"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwayGroup(System.Guid)">
            <summary>
            Load the pathway group to which a pathway belongs
            </summary>
            <param name="pathwayID">The id of the pathway</param>
            <returns>The pathway group</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllConnectedPathwaysForPathway(System.Guid)">
            <summary>
            Returns an array of ConnectedPathway objects
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetConnectedPathwaysWithEntities(System.Guid)">
            <summary>
            For a given pathway, returns a dictionary that maps the IDs of the 
            linked pathways to the list of molecules that are shared.
            </summary>
            <param name="pathwayId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetAllPathwaysForQueryInterface">
            <summary>
            this is specifically for getting the name and ID of all pathways as a dataset
             (written for the PathwaysWithinStepsFromPathway user control)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.HavingFreezedLayout">
            <summary>
            Check if the current pathway has freezed layout in the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.HavingFreezedLayout(System.Guid)">
            <summary>
            Check if the current pathway has freezed layout in the database.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwayLayout(System.Guid)">
            <summary>
            Get the freezed layout for a single pathway.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.GetPathwaysWithFrozenLayout">
            <summary>
            Get all pathways which have frozen layout
            </summary>
            <returns>
            Set of all pathways which have frozen layout.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathway.StorePathwayLayout">
            <summary>
            Store the layout string of the pathway into the database.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.ID">
            <summary>
            Get/set the Pathway ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.Name">
            <summary>
            Get/set the Pathway name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.Type">
            <summary>
            Get/set the Pathway type. Wraps TypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.TypeId">
            <summary>
            Get/set pathway type ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.PathwayNotes">
            <summary>
            Get/set the Pathway notes.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathway.PathwayStatus">
            <summary>
            Get/set the Pathway status.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerPathway.PathwaySearchMethod">
            <summary>
            Enumeration of methods available for searching pathways
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerPathway.PathwaySearchMethod.Contains">
            <summary>
            The pathway name contains the given string
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerPathway.PathwaySearchMethod.EndsWith">
            <summary>
            The pathway name ends with the given string
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerPathway.PathwaySearchMethod.ExactMatch">
            <summary>
            The pathway name is exactly the same as the given string
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerPathway.PathwaySearchMethod.StartsWith">
            <summary>
            The pathway name starts with the given string
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerPathwayGroup">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerPathwayGroup.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Michael Starke</name>
            			<initials>mfs</initials>
            			<email>michael.starke@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerPathwayGroup.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to PathwayGroups.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.#ctor">
            <summary>
            Creating constructor for the server pathway group wrapper
            </summary>
            <remarks>Private; No insertion at this time.</remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.#ctor(PathwaysLib.SoapObjects.SoapPathwayGroup)">
            <summary>
            Constructor for server pathway group.
            </summary>
            <remarks>
            This constructor creates a ServerPathwayGroup object from a
            SoapPathwayGroup object.
            </remarks>
            <param name="data">
            A SoapPathwayGroup object from which to construct the
            ServerPathwayGroup object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server pathway group.
            </summary>
            <remarks>
            This constructor creates a ServerPathwayGroup object from a
            DBRow.
            </remarks>
            <param name="data">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.Finalize">
            <summary>
            Destructor for the ServerPathwayGroup class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetAllPathways">
            <summary>
            Get all pathways, unpaged.
            </summary>
            <returns>
            Set of all pathways in this pathwaygroup.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOAnnotationCount(System.String,System.Int32)">
            <summary>
            Get the number of times a GO term annotates processes
            within pathways in this pathway group
            </summary>
            <param name="GOID">The 7-digit GO id with leading zeros</param>
            <param name="level">The level of the GO hierarchy</param>
            <returns>The number of times the GO term annotates</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOEnrichment(System.String,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the significance of an annotation count within a pathway group
            by computing the enrichment ratio and enrichment significance
            </summary>
            <param name="GOID">The GO term id</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="sampleAnnotationSize">The total number of annotations (by any GO term) within the sample</param>
            <param name="sampleAnnotationSuccesses">The total number of times the given GO term annotates within the sample</param>
            <param name="enrichmentRatio">observed annotation rate / expected annotation rate</param>
            <param name="enrichmentSignificance">The significance of the annotation, based upon the hypergeometric distribution</param>
            <param name="expectedSuccesses">Expected successes</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetMissingGroupGOTerms(PathwaysLib.ServerObjects.ServerGOTerm[],System.Int32,PathwaysLib.ServerObjects.ServerGOTerm[]@,System.Int32[]@)">
            <summary>
            Retrieves the intersection of 'GOIDs' and all annotating terms in the pathway group
            </summary>
            <param name="annotatingTerms">The terms which we know annotate the pathway in the group</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="missingTerms">The array of terms which annotate in the group, but are not in the 'GOIDs' list</param>
            <param name="missingTotalCounts">The total number of times a term at the same index in 'missingTerms' annotates in the group</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOAnnotationCount(System.Guid,System.String,System.Int32)">
            <summary>
            Get the number of times a GO term annotates processes
            within pathways in this pathway group
            </summary>
            <param name="GOID">The 7-digit GO id with leading zeros</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="pathwayGroupID">The ID of the pathway group</param>
            <returns>The number of times the GO term annotates</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOAnnotationCount(System.Guid,System.Int32)">
            <summary>
            Get the total number of annotations from all GO terms
            within pathways in this pathway group at the given level
            </summary>
            <param name="pathwayGroupID">The pathway group</param>
            <param name="level">The level of the GO hierarchy</param>
            <returns>The total number of annotations</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOExpectedRatio(System.Guid,System.String,System.Int32)">
            <summary>
            Returns the expected annotation rate for a given GO term at a level of the GO hierarchy
            </summary>
            <param name="pathwayGroupID">The id of the pathway group</param>
            <param name="GOID">The ID of the GO term</param>
            <param name="level">The level of the go hierarchy</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetGOEnrichment(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the significance of an annotation count within a pathway group
            by computing the enrichment ratio and enrichment significance
            </summary>
            <param name="pathwayGroupID">The pathway group</param>
            <param name="GOID">The GO term id</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="sampleAnnotationSize">The total number of annotations (by any GO term) within the sample</param>
            <param name="sampleAnnotationSuccesses">The total number of times the given GO term annotates within the sample</param>
            <param name="enrichmentRatio">observed annotation rate / expected annotation rate</param>
            <param name="enrichmentSignificance">The significance of the annotation, based upon the hypergeometric distribution</param>
            <param name="expectedSuccesses">The number of successes expected</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetMissingGroupGOTerms(System.Guid,PathwaysLib.ServerObjects.ServerGOTerm[],System.Int32,PathwaysLib.ServerObjects.ServerGOTerm[]@,System.Int32[]@)">
            <summary>
            Retrieves the intersection of 'GOIDs' and all annotating terms in the pathway group
            </summary>
            <param name="pathwayGroupID">The group to check</param>
            <param name="annotatingTerms">The GO terms which we know annotate the pathway in the group</param>
            <param name="level">The level of the GO hierarchy</param>
            <param name="missingTerms">The array of terms which annotate in the group, but are not in the 'GOIDs' list</param>
            <param name="missingTotalCounts">The total number of times a term at the same index in 'missingTerms' annotates in the group</param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.FindPathwayGroups(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all pathway groups who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.AllPathwayGroups">
            <summary>
            Get all of the pathway groups from the system.
            </summary>
            <returns>
            Set of pathway groups.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.GetAllPathwayGroupsForQueryInterface">
            <summary>
            this is specifically for getting the name and ID of all pathwaygroup as a dataset
             (written for the PathwaysWithinStepsFromPathway user control)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.LoadRow(System.Guid)">
            <summary>
            Load a pathwaygroup from its id.
            </summary>
            <param name="id">
            The id of the desired object.
            </param>
            <returns>
            The DBRow holding the object's data.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.Load(System.Guid)">
            <summary>
            Load a pathway group from its id
            </summary>
            <param name="groupID">The id of the pathwaygroup</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.AddPathwayGroupLink(System.Guid,System.Guid)">
            <summary>
            Adds a tuple to the pathway_to_pathway_groups table, which denotes the group of a pathway
            </summary>
            <param name="pathwayId"></param>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.RemovePathwayGroupLink(System.Guid,System.Guid)">
            <summary>
            Removes the given pathway_to_pathway_groups link.
            </summary>
            <param name="pathwayId"></param>
            <param name="groupId"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerPathwayGroup.PathwayGroupLinkExists(System.Guid,System.Guid)">
            <summary>
            Tells whether an entry already exists in the pathway_to_pathway_groups table with
            the given pathwayId and groupId
            </summary>
            <param name="pathwayId"></param>
            <param name="groupId"></param>
            <returns>
            True if the tuple exists in the pathway_to_pathway_groups table, false if it doesn't
            </returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathwayGroup.Id">
            <summary>
            Get/set the Id of this pathwaygroup.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathwayGroup.Name">
            <summary>
            Get/set the name of this pathwaygroup.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerPathwayGroup.Notes">
            <summary>
            Get/set the notes for this pathwaygroup.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerProcess">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerProcess.cs</filepath>
            		<creation>2005/06/16</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: murat $</cvs_author>
            			<cvs_date>$Date: 2010/11/19 21:13:30 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerProcess.cs,v 1.10 2010/11/19 21:13:30 murat Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.10 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to biological processes.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.#ctor(System.String,PathwaysLib.Utilities.Tribool,System.String,System.String,System.Guid)">
            <summary>
            Constructor for server process wrapper with fields initiallized
            </summary>
            <param name="name"></param>
            <param name="reversible"></param>
            <param name="location"></param>
            <param name="notes"></param>
            <param name="genericProcessId"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.#ctor(PathwaysLib.SoapObjects.SoapProcess)">
            <summary>
            Constructor for server process wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProcess object from a
            SoapProcess object.
            </remarks>
            <param name="data">
            A SoapProcess object from which to construct the
            ServerProcess object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server process wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProcess object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.Finalize">
            <summary>
            Destructor for the ServerProcess class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerProcess
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Process.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllReactions">
            <summary>
            Return all reactions for this process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllReactionAnnotations">
            <summary>
            Return all reaction annotations for this process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AddToPathway(System.Guid,System.String)">
            <summary>
            Add this process to the specified pathway
            </summary>
            <param name="pathway_id"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.RemoveFromPathway(System.Guid)">
            <summary>
            Remove this process from the given pathway
            </summary>
            <param name="pathway_id"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllPathways">
            <summary>
            Return all pathways for this process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganisms">
            <summary>
            Returns all the organisms or organism groups for this process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganismGroups">
            <summary>
            Returns all organism groups for this process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AllProcessesSharingThisGenericProcessId">
            <summary>
            Returns all the processes that share this process' generic process id
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AddGeneProduct(System.Guid,System.Guid,System.String)">
            <summary>
            Adds a gene product to the catalyzing relation
            </summary>
            <param name="gene_product_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.RemoveGeneProduct(System.Guid,System.Guid,System.String)">
            <summary>
            Remove a gene product from the process
            </summary>
            <param name="gene_product_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllGeneProducts">
            <summary>
            Get all gene products
            </summary>
            <returns>
            Returns all of the gene products involved in the process
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllGeneProductsInOrganism(System.Guid)">
            <summary>
            Get all gene products in a specific organism
            </summary>
            <returns>
            Returns all of the gene products involved in the process within a specific organism
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetECNumberByGeneProduct(System.Guid)">
            <summary>
            Returns the ec number for an enzyme in this process
            </summary>
            <param name="geneProductId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetECNumbers">
            <summary>
            Returns the EC Number(s) for this process from 
            gene_products_and_processes table
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllMolecularEntities">
            <summary>
            Returns all Molecular Entities involved in this process
            </summary>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllProcessEntities">
            <summary>
            Get all entries in the process_entities (catalyze) relation for this process
            </summary>
            <returns>
            an array of ServerProcessEntity objects
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AddMolecularEntity(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Add the given molecular entity to this process with the specified role
            </summary>
            <param name="entityId"></param>
            <param name="role"></param>
            <param name="quantity"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.RemoveMolecularEntity(System.Guid,System.String)">
            <summary>
            Remove the given molecular entity from the process
            </summary>
            <param name="entityId"></param>
            <param name="role"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.SetSqlCommandParameters">
            <summary>
            Required function for settign up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.ExpandNeighborhoodOneStep(System.Guid[],System.Collections.ArrayList@,System.Guid)">
            <summary>
            Expands a neighborhood by one step (I guess you knew that from the function name, huh?)
            </summary>
            <param name="expansionSeed"></param>
            <param name="excludeSet"></param>
            <param name="organismGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AllProcesses">
            <summary>
            Return all processes from the system.
            </summary>
            <returns>
            Array of SoapPreocess objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AllProcessesForOrganism(System.String)">
            <summary>
            Returns all of the processes for a specified organism.
            </summary>
            <param name="organism">
            The organism to filter on.
            </param>
            <returns>
            Set of server processes from the specified organism.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AllProcesses(System.Int32,System.Int32)">
            <summary>
            Return a page of ServerProcesses.
            </summary>
            <param name="startRecord">
            The starting record.
            </param>
            <param name="maxRecords">
            The number of records to return.
            </param>
            <returns>
            Page of ServerProcesses
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllProcessesForPathway(System.Guid)">
            <summary>
            Get all processes for a pathway
            </summary>
            <param name="pathway_id">Pathway ID to use</param>
            <returns>
            All processes in that pathway
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.AllProcessesForOrganism(System.String,System.Int32,System.Int32)">
            <summary>
            Returns a page of processes filtered on organism.
            </summary>
            <param name="organism">
            The organism on which to filter.
            </param>
            <param name="startRecord">
            The starting record.
            </param>
            <param name="maxRecords">
            The size of the page.
            </param>
            <returns>
            A page of server processes.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.CountAllProcesses">
            <summary>
            The count of all processes in the system.
            </summary>
            <returns>
            The count of all processes in the system.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.CountAllProcessesForOrganism(System.String)">
            <summary>
            The count of processes from a specific organism.
            </summary>
            <param name="organism">
            The supplied organism.
            </param>
            <returns>
            The count of processes from a specific organism.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.FindProcesses(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all processes whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.FindProcesses(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32)">
            <summary>
            Returns all processes whose name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <param name="topk"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.FindProcessesForOrganism(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Find a set of processes within the subset for a specific organism.
            </summary>
            <param name="organism">
            The filtering organism.
            </param>
            <param name="substring">
            The substring to search for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <returns>
            Set of processes matching search criteria.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.FindProcesses(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            Page of processes meeting the search criteria.
            </summary>
            <param name="substring">
            The substring to search for.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <param name="startRecord">
            The record to start at.
            </param>
            <param name="maxRecords">
            The page size.
            </param>
            <returns>
            Page of processes meeting the search criteria.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.FindProcessesForOrganism(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            Find page of processes based on the search criteria.
            </summary>
            <param name="organism">
            The filtering organism.
            </param>
            <param name="substring">
            The search substring.
            </param>
            <param name="searchMethod">
            The search method.
            </param>
            <param name="startRecord">
            The starting record.
            </param>
            <param name="maxRecords">
            The page size.
            </param>
            <returns>
            Page of processes based on the search criteria.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.CountFindProcesses(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            The count of process responding to the search criteria.
            </summary>
            <param name="substring">
            The substring to search for.
            </param>
            <param name="searchMethod">
            The search method to use.
            </param>
            <returns>
            Count of matching processes.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.CountFindProcessesForOrganism(System.String,System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Count processes matching search criteria.
            </summary>
            <param name="organism">
            The filtering organism.
            </param>
            <param name="substring">
            The substring to search for.
            </param>
            <param name="searchMethod">
            The search method to use.
            </param>
            <returns>
            Count of processes matching the search criteria.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.ByOrganismAndPathway(PathwaysLib.ServerObjects.ServerOrganismGroup,PathwaysLib.ServerObjects.ServerPathway)">
            <summary>
            Finds all processes related to a pathway and organism (or group).
            </summary>
            <param name="Org"></param>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.Load(System.Guid)">
            <summary>
            Return a process with given ID.
            </summary>
            <param name="id">
            The Guid of the desired process.
            </param>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.LoadMultiple(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates an array of ServerProcess objects from an SQL query for multiple processes rows.
            </summary>
            <param name="command">A query for multiple rows of processes.  Note that the query must output
            all columns(not just the id's)!</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.LoadSingle(System.Data.SqlClient.SqlCommand)">
            <summary>
            Creates a single ServerPathway from an SQL query
            </summary>
            <param name="command">An SQL query that returns a single row from processes.  Note that the query
            must output every column</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.Exists(System.Guid)">
            <summary>
            Returns true if there exists a process with the given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganismsForProcess(System.Guid)">
            <summary>
            given a process, gets the organism, or organism groups that have genes encoding at least one enzyme in the process.
            </summary>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganismGroupsForProcess(System.Guid)">
            <summary>
            given a process, gets the organism groups that have genes encoding at least one enzyme in the process.
            </summary>
            <param name="processId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganismsForGenericProcess(System.Guid)">
            <summary>
            given a process, gets the organism that have genes encoding at least one enzyme in the generic process.
            </summary>
            <param name="genericProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetAllOrganismGroupsForGenericProcess(System.Guid)">
            <summary>
            given a process, gets the organism, or organism groups that have genes encoding at least one enzyme in the generic process.
            </summary>
            <param name="genericProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcess.GetProcessesByGenericProcessId(System.Guid)">
            <summary>
            Returns all processes with the given generic process id
            </summary>
            <param name="genericProcessId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.ID">
            <summary>
            Get/set the Process ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.Name">
            <summary>
            Get/set the Process name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.Reversible">
            <summary>
            Get/set the Process reversibility.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.Location">
            <summary>
            Get/set the Process Location.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.GenericProcessID">
            <summary>
            Get/set the generic process id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcess.IsGenericProcess">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerProcessEntity">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerProcessEntity.cs</filepath>
            		<creation>2005/07/05</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Marc R. Reynolds</name>
            				<initials>mrr</initials>
            				<email>marc.reynolds@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/04/07 14:44:13 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerProcessEntity.cs,v 1.3 2009/04/07 14:44:13 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.3 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many names associated with a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.#ctor(System.Guid,System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructor for server catalyze wrapper with fields initiallized 
            </summary>
            <param name="processId"></param>
            <param name="entityId"></param>
            <param name="role"></param>
            <param name="quantity"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.#ctor(PathwaysLib.SoapObjects.SoapProcessEntity)">
            <summary>
            Create a ServerProcessEntity object from the given Soap object
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllForEntity(System.Guid)">
            <summary>
            Returns the rows in the process_entities table in which the given entity appears
            </summary>
            <param name="entityId"></param>
            <returns>
            An array of ServerProcessEntity objects where entity_id is the given id
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllForProcess(System.Guid)">
            <summary>
            Returns all rows in the process_entities table that involve the given process
            </summary>
            <param name="processId"></param>
            <returns>
            An array of ServerProcessEntity objects where entity_id is the given id
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllForGenericProcess(System.Guid)">
            <summary>
            Returns all rows in the process_entities table that involve the given generic process with all specific process combinations
            </summary>
            <param name="genericProcessId"></param>
            <returns>
            An array of ServerProcessEntity objects where entity_id is the given id
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetSpecificRoleForGenericProcess(System.Guid,System.String)">
            <summary>
            Returns all rows in the process_entities table that involve the given generic process
            via a specified role
            </summary>
            <param name="genericProcessId">The process the entitiy is related to</param>
            <param name="role">The role the entity takes</param>
            <returns>
            An array of ServerProcessEntity objects where entity_id is the given id
            </returns>
            <remarks>Added mrr 2006-02-21</remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllProcessesForEntity(System.Guid)">
            <summary>
            Gets all processes that a molecular entity is involved in,
            will be used by ServerMolecularEntity object
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllProcessesForEntity(System.Guid,System.Int32)">
            <summary>
            Gets all processes that a molecular entity is involved in a particular tissue
            will be used by ServerMolecularEntity object
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetTransportProcessForEntity(System.Guid,System.Int32)">
            <summary>
            Gets the transport process (if one exists for the entityid-- tissueid combo
            </summary>
            <param name="entityId"></param>
            <param name="tissueId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.AddMolecularEntityToProcess(System.Guid,System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Inserts an entry into the 'process_entities' table for the 
            given molecular entity and process.
            </summary>
            <remarks>
            TODO: add implementation, not yet implemented
            </remarks>
            <param name="processId"></param>
            <param name="entityId"></param>
            <param name="role"></param>
            <param name="quantity"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.RemoveMolecularEntityFromProcess(System.Guid,System.Guid,System.String)">
            <summary>
            Removes the given molecular entity and process from the process_molecular_entities table.
            </summary>
            <param name="processId"></param>
            <param name="entityId"></param>
            <param name="role"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.Load(System.Guid,System.Guid,System.String)">
            <summary>
            Calls LoadRow
            </summary>
            <param name="processID"></param>
            <param name="entityID"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.Exists(System.Guid,System.Guid,System.String)">
            <summary>
            Tells whether an entry already exists in the process_entities table with
            the given process_id, entity_id, and role
            </summary>
            <param name="processID"></param>
            <param name="entityID"></param>
            <param name="role"></param>
            <returns>
            True if the tuple exists in the process_entities table, false if it doesn't
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.LoadRow(System.Guid,System.Guid,System.String)">
            <summary>
            Loads a row from the process_entities table
            </summary>
            <param name="processID"></param>
            <param name="entityID"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProcessEntity.GetAllForMolecularEntityAndProcess(System.Guid,System.Guid)">
            <summary>
            given a molecular entity and a process, gets all the entries in the process_entities table.
            this is used for getting the role and amount of the molecular entity.
            </summary>
            <param name="processId"></param>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.ProcessID">
            <summary>
            ID of Process in process entities relation
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.Process">
            <summary>
            Convenience property to load the process specified by the ProcessID property.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.EntityID">
            <summary>
            ID of molecular entity in process entities relation
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.Entity">
            <summary>
            Convenience property to load the molecule specified by the EntityID property.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.Role">
            <summary>
            Entity role in a process as a string.  Wraps RoleId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.RoleId">
            <summary>
            Get/set process entity role ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.Quantity">
            <summary>
            The number of times the given molecule appears in this process
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProcessEntity.ProcessEntityNotes">
            <summary>
            notes on the relation
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerProtein">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerProtein.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerProtein.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to proteins.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.#ctor(PathwaysLib.SoapObjects.SoapProtein)">
            <summary>
            Constructor for server protein wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProtein object from a
            SoapProtein object.
            </remarks>
            <param name="data">
            A SoapProtein object from which to construct the
            ServerProtein object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server protein wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProtein object from a
            DataSet.
            </remarks>
            <param name="proteinRow">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for ServerProteinObject given a base class row and derived class row
            </summary>
            <param name="proteinRow"></param>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.Finalize">
            <summary>
            Destructor for the ServerProtein class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerProtein.__ProteinRow">
            <summary>
            The contains the data for the derived class table.  Data from
            the base class table is maintained by the server base class.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.Delete">
            <summary>
            Deletes the protein tuple from the proteins table and all the associated tables
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.AllProteins">
            <summary>
            Return all basic molecules from the system.
            </summary>
            <returns>
            Array of SoapProtein objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.FindProteins(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all proteins who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.Load(System.Guid)">
            <summary>
            Return a protein with given ID.
            </summary>
            <param name="id">
            The Guid of the desired protein.
            </param>
            <returns>
            SoapProtein object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.LoadFromBaseRow(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructs an object based on the rows of it's derived classes.
            </summary>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.LoadRow(System.Guid)">
            <summary>
            Return the dataset row for a protein with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.Exists(System.Guid)">
            <summary>
            Returns true if a item exists in the database with the given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.CreateFromMolecularEntity(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow@)">
            <summary>
            Hack used to fix database anomolies where the base object rows exist, but the derived class rows do not.
            </summary>
            <param name="molecularEntityRow"></param>
            <param name="geneProductRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerProtein.CreateFromGeneProduct(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Hack used to fix database anomolies where the base object rows exist, but the derived class rows do not.
            </summary>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerProtein.ID">
            <summary>
            Get/set the Protein ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.#ctor(PathwaysLib.SoapObjects.SoapReaction)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapReaction object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllSpecies">
            <summary>
            Gets all species for the reaction
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllSpeciesIdWithName">
            <summary>
            Gets all species for the reaction
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllReactants">
            <summary>
            Gets all reactants for the reaction
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllProducts">
            <summary>
            Gets all products for the reaction
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllModifiers">
            <summary>
            Gets all modifiers for the reaction
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetAllCompartments">
            <summary>
            Gets all compartments to which the reaction's species belong
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.AllModels">
            <summary>
            Return all Reactions from the system.
            </summary>
            <returns>
            Array of SoapReaction objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.Load(System.Guid)">
            <summary>
            Returns a single ServerReaction object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.GetReactionIDsByModel(System.Guid)">
            <summary>
            Return all reactions' ids related with modelid from compartment table.
            By Xinjian Qi   03/07/2009
            </summary>
            <param name="modelid"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.Exists(System.Guid)">
            <summary>
            Returns true if the given compartment exists
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.FindReactionsByIds(System.Guid,System.String)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.FindReactionsByName(System.Guid,System.String)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReaction.FindReactionsByIds(System.Guid,System.Guid)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="modelId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.Reversible">
            <summary>
            Get/set the reversible.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.Fast">
            <summary>
            Get/set the fast.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReaction.KineticLawId">
            <summary>
            Get/set the kineticLawId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.#ctor(PathwaysLib.SoapObjects.SoapReactionSpecies)">
            <summary>
            Constructor for server ReactionSpecies wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReactionSpecies object from a
            SoapReactionSpecies object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server ReactionSpecies wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReactionSpecies object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerSpecies
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Species relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpecies.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.ReactionId">
            <summary>
            Get/set the reactionId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.SpeciesId">
            <summary>
            Get/set the speciesId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.RoleId">
            <summary>
            Get/set the roleId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.Stoichiometry">
            <summary>
            Get/set the stoichiometry.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.StoichiometryMathId">
            <summary>
            Get/set the stoichiometryMathId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpecies.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.#ctor(System.String)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.#ctor(PathwaysLib.SoapObjects.SoapReactionSpeciesRole)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.AllReactionSpeciesRoles">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.Load(System.Int16)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.LoadRow(System.Int16)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerReactionSpeciesRole.Role">
            <summary>
            Get/set the role.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerRNA">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Server/ServerRNA.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliot</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerRNA.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to RNAs.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.#ctor(PathwaysLib.SoapObjects.SoapRNA)">
            <summary>
            Constructor for server protein wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerProtein object from a
            SoapProtein object.
            </remarks>
            <param name="data">
            A SoapProtein object from which to construct the
            ServerProtein object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server rna wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerRNA object from a
            DBRow.
            </remarks>
            <param name="rnaRow">
            DBRow to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.#ctor(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor
            </summary>
            <param name="rnaRow"></param>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.Finalize">
            <summary>
            Destructor for the ServerRNA class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerRNA.__RNARow">
            <summary>
            The contains the data for the derived class table.  Data from
            the base class table is maintained by the server base class.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.Delete">
            <summary>
            Delete the RNA from the RNA table, as well as all the associated tables
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.AllRNAs">
            <summary>
            Return all basic molecules from the system.
            </summary>
            <returns>
            Array of SoapRNA objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.FindRNAs(System.String,PathwaysLib.ServerObjects.SearchMethod)">
            <summary>
            Returns all rnas who's name contains the given substring
            </summary>
            <param name="substring"></param>
            <param name="searchMethod"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.Load(System.Guid)">
            <summary>
            Return an RNA with given ID.
            </summary>
            <param name="id">
            The Guid of the desired RNA.
            </param>
            <returns>
            SoapRNA object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.LoadFromBaseRow(PathwaysLib.ServerObjects.DBRow,PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructs an object based on the rows of it's derived classes.
            </summary>
            <param name="geneProductRow"></param>
            <param name="molecularEntityRow"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.LoadRow(System.Guid)">
            <summary>
            Return the dataset row for an RNA with a given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRNA.Exists(System.Guid)">
            <summary>
            Returns true if a item exists in the database with the given ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRNA.ID">
            <summary>
            Get/set the RNA ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRNA.RNAType">
            <summary>
            Get/set the RNA type as a string. Wraps RNATypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRNA.RNATypeId">
            <summary>
            Get/set RNA type ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.#ctor(PathwaysLib.SoapObjects.SoapRule)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.AllRules">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRule.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRule.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRule.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRule.Variable">
            <summary>
            Get/set the variable.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRule.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRule.RuleTypeId">
            <summary>
            Get/set the ruleTypeId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.#ctor(System.String)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.#ctor(PathwaysLib.SoapObjects.SoapRuleType)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.AllFunctionDefinitions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.Load(System.Int16)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerRuleType.LoadRow(System.Int16)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRuleType.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerRuleType.Type">
            <summary>
            Get/set the type.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.#ctor(PathwaysLib.SoapObjects.SoapSpecies)">
            <summary>
            Constructor for server Reaction wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapReaction object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Species wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerSpecies object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.UpdateDatabase">
            <summary>
            Update the base class's data row, then the derived class's row
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerSpecies
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Species relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.FindSpeciesNames(System.String,PathwaysLib.ServerObjects.SearchMethod,System.Int32,System.Int32)">
            <summary>
            Searches all species and gets the corresponding number of records 
            </summary>
            <param name="name"></param>
            <returns>string[]</returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.AllSpeciesByNameOnly(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.AllSpeciesByName(System.String)">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.GetAllSpeciesForModel(System.Guid)">
            Get all species for a model
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.FindSpeciesByIds(System.Guid,System.String)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpecies.FindSpeciesById(System.Guid,System.Guid)">
            <summary>
            A search function for SBML Parser
            modelId + sbmlId is used as a super key needed for frozen layout
            03/05/2011 Murat Kurtcephe
            </summary>
            <param name="sbmlFileName"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.SpeciesTypeId">
            <summary>
            Get/set the speciesTypeId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.CompartmentId">
            <summary>
            Get/set the compartmentId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.InitialAmount">
            <summary>
            Get/set the initialAmount.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.InitialConcentration">
            <summary>
            Get/set the initialConcentration.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.SubstanceUnitsId">
            <summary>
            Get/set the substanceUnitsId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.HasOnlySubstanceUnits">
            <summary>
            Get/set the hasOnlySubstanceUnits.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.BoundaryCondition">
            <summary>
            Get/set the boundaryCondition.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.Charge">
            <summary>
            Get/set the charge.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpecies.Constant">
            <summary>
            Get/set the constant.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.#ctor(PathwaysLib.SoapObjects.SoapSpeciesType)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.AllFunctionDefinitions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerSpeciesType.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpeciesType.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpeciesType.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpeciesType.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerSpeciesType.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.#ctor(PathwaysLib.SoapObjects.SoapStoichiometryMath)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.AllStoichiometryMaths">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerStoichiometryMath.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerStoichiometryMath.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerStoichiometryMath.Math">
            <summary>
            Get/set the math.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.#ctor(PathwaysLib.SoapObjects.SoapUnit)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.AllUnits">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnit.DeleteAll">
            <summary>
            Delelete all entries in unit related tables, but keep base units
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.Kind">
            <summary>
            Get/set the kind.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.Exponent">
            <summary>
            Get/set the exponent.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.Scale">
            <summary>
            Get/set the scale.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnit.Multiplier">
            <summary>
            Get/set the multiplier.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.#ctor(System.Guid,System.Guid)">
            <summary>
            Constructor for server Parameter wrapper with fields initiallized
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.#ctor(PathwaysLib.SoapObjects.SoapUnitComposition)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.AllUnitCompositions">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitComposition.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitComposition.UnitDefinitionId">
            <summary>
            Get/set the unitDefinitionId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitComposition.UnitId">
            <summary>
            Get/set the unitId.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.#ctor(PathwaysLib.SoapObjects.SoapUnitDefinition)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerReaction object from a
            SoapParameter object.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            Constructor for server Parameter wrapper.
            </summary>
            <remarks>
            This constructor creates a ServerParameter object from a
            DataSet.
            </remarks>
            <param name="data">
            DataSet to load into the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.Finalize">
            <summary>
            Destructor for the ServerModel class.
            </summary>
            <remarks>
            Call base constructor to ensure proper updates.
            </remarks>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.AddUnit(System.Guid,System.Int32,System.Int32,System.Double)">
            <summary>
            Adds individual units into a unit definition        
            kind: a base unit
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the ServerModel
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the Model relation.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.AllUnits">
            <summary>
            Return all Compartments from the system.
            </summary>
            <returns>
            Array of SoapCompartment objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.Load(System.Guid)">
            <summary>
            Returns a single ServerCompartment object
            </summary>
            <returns>
            Object ready to be sent via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerUnitDefinition.LoadRow(System.Guid)">
            <summary>
            Return the dataset for an object with the given parameters.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitDefinition.ID">
            <summary>
            Get/set the ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitDefinition.ModelId">
            <summary>
            Get/set the modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitDefinition.SbmlId">
            <summary>
            Get/set the sbmlId.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitDefinition.Name">
            <summary>
            Get/set the name.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerUnitDefinition.IsBaseUnit">
            <summary>
            Get/set the isBaseUnit.
            </summary>
        </member>
        <member name="T:PathwaysLib.ServerObjects.ServerViewState">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/ServerObjects/ServerViewState.cs</filepath>
            		<creation>2005/07/18</creation>
            		<author>	
            			<name>Michael F. Starke</name>
            			<initials>mfs</initials>
            			<email>michael.starke@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: sarp $</cvs_author>
            			<cvs_date>$Date: 2010/05/13 20:43:49 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/ServerObjects/ServerViewState.cs,v 1.3 2010/05/13 20:43:49 sarp Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.3 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Encapsulates database access related to view states.
             </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            ServerViewState constructor.
            </summary>
            <param name="openSection">
            The section of the browser that is open.
            </param>
            <param name="organism">
            The filtering organism in use.
            </param>
            <param name="openNode1ID">
            The id of the top level open node.
            </param>
            <param name="openNode1Type">
            The type of the top level open node.
            </param>
            <param name="openNode2ID">
            The id of the second level open node.
            </param>
            <param name="openNode2Type">
            The type of the second level open node.
            </param>
            <param name="openNode3ID">
            The id of the third level open node.
            </param>
            <param name="openNode3Type">
            The type of the third level open node.
            </param>
            <param name="displayItemID">
            The id of the currently displayed item.
            </param>
            <param name="displayItemType">
            The type of the currently displayed item.
            </param>
            <param name="viewGraph">
            Should the graph be viewed?
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.#ctor(PathwaysLib.SoapObjects.SoapViewState)">
            <summary>
            ServerViewState constructor.
            </summary>
            <param name="data">
            Soap item from which to copy data.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.#ctor(PathwaysLib.ServerObjects.DBRow)">
            <summary>
            ServerViewState constructor.
            </summary>
            <param name="data">
            The database row that is the source of data.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.Finalize">
            <summary>
            ServerViewState destructor.
            </summary>
        </member>
        <member name="F:PathwaysLib.ServerObjects.ServerViewState.__TableName">
            <summary>
            The table name for this object.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.PrepareForSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Returns a representation of this object suitable for being
            sent to a client via SOAP.
            </summary>
            <returns>
            A SoapObject object capable of being passed via SOAP.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.UpdateFromSoap(PathwaysLib.SoapObjects.SoapObject)">
            <summary>
            Consumes a SoapObject object and updates the object
            from it.
            </summary>
            <param name="o">
            The SoapObject object to update from, potentially containing
            changes to the object.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.SetSqlCommandParameters">
            <summary>
            Required function for setting up the SqlCommands for ADO.NET.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.Load(System.Guid)">
            <summary>
            Load a ServerViewState from its id.
            </summary>
            <param name="id">
            The id of the requested item.
            </param>
            <returns>
            The requested ServerViewState.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.ServerViewState.GetLinkID(System.String,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            Get the link id based on the input criteria.
            </summary>
            <param name="openSection">
            The section of the browser that is open.
            </param>
            <param name="organism">
            The filtering organism in use.
            </param>
            <param name="openNode1ID">
            The id of the top level open node.
            </param>
            <param name="openNode1Type">
            The type of the top level open node.
            </param>
            <param name="openNode2ID">
            The id of the second level open node.
            </param>
            <param name="openNode2Type">
            The type of the second level open node.
            </param>
            <param name="openNode3ID">
            The id of the third level open node.
            </param>
            <param name="openNode3Type">
            The type of the third level open node.
            </param>
            <param name="displayItemID">
            The id of the currently displayed item.
            </param>
            <param name="displayItemType">
            The type of the currently displayed item.
            </param>
            <param name="viewGraph">
            Should the graph be viewed?
            </param>
            <returns>
            The guid of the row to link to.
            </returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.ViewID">
            <summary>
            Get/set the view state's id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenSection">
            <summary>
            Get/set the view state's open section.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.Organism">
            <summary>
            Get/set the view state's filtering organism.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode1ID">
            <summary>
            Get/set the view state's open node 1 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode1Type">
            <summary>
            Get/set the view state's open node 1 type.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode2ID">
            <summary>
            Get/set the view state's open node 2 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode2Type">
            <summary>
            Get/set the view state's open node 2 type.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode3ID">
            <summary>
            Get/set the view state's open node 3 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode3Type">
            <summary>
            Get/set the view state's open node 3 type.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.DisplayItemID">
            <summary>
            Get/set the view state's display item id.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.DisplayItemType">
            <summary>
            Get/set the view state's display item type.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.ViewGraph">
            <summary>
            Get/set the graph's visibility.
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNode">
            <summary>
            Get the Open Nodes
            </summary>
        </member>
        <member name="P:PathwaysLib.ServerObjects.ServerViewState.OpenNodeType">
            <summary>
            Get the Open Node Types
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.UnitDefinitionManager.GetBaseUnitName(System.Guid)">
            <summary>
            Returns the name associated with an id.
            </summary>
            <param name="typeId"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.UnitDefinitionManager.GetBaseUnitId(System.String)">
            <summary>
            Returns the id associated with a name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="T:PathwaysLib.ServerObjects.Long">
            <summary>
            Wraps the value type 'long' to allow nulls.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.Long.#ctor">
            <summary>
            Long type constructor.
            </summary>
        </member>
        <member name="M:PathwaysLib.ServerObjects.Long.#ctor(System.Int64)">
            <summary>
            Long type constructor.
            </summary>
            <param name="value">
            Variable of long type to load from.
            </param>
        </member>
        <member name="M:PathwaysLib.ServerObjects.Long.op_Implicit(PathwaysLib.ServerObjects.Long)~System.Int64">
            <summary>
            Implicit conversion to long type.
            </summary>
            <param name="l">
            Long type to be converted.
            </param>
            <returns>
            Long l converted to long.
            </returns>
        </member>
        <member name="M:PathwaysLib.ServerObjects.Long.op_Implicit(System.Int64)~PathwaysLib.ServerObjects.Long">
            <summary>
            Implicit conversion to Long type.
            </summary>
            <param name="l">
            Variable long to convert to Long.
            </param>
            <returns>
            Long version of long.
            </returns>
        </member>
        <member name="P:PathwaysLib.ServerObjects.Long.Value">
            <summary>
            Get/set the Long type's value.
            </summary>
        </member>
        <member name="M:Jarnac.msim.createModel">
            <summary>
            Start a new model instance, returns model handle
            </summary>
        </member>
        <member name="M:Jarnac.msim.freeModel(System.Int32)">
            <summary>
            Destroy a model given it's model handle
            </summary>
        </member>
        <member name="M:Jarnac.msim.loadSBML(System.Int32,System.String)">
            <summary>
            Load the sbml model contained in the string argument
            </summary>
        </member>
        <member name="M:Jarnac.msim.loadJarnac(System.Int32,System.String)">
            <summary>
            Load the Jarnac script model contained in the string argument
            </summary>
        </member>
        <member name="M:Jarnac.msim.changeInitialConditions(System.Int32,System.Double[])">
            <summary>
            Load the initial conditions vector with a new vector
            </summary>
        </member>
        <member name="M:Jarnac.msim.setTimeStart(System.Int32,System.Double)">
            <summary>
            Set the time start for the simulation
            </summary>
        </member>
        <member name="M:Jarnac.msim.setTimeEnd(System.Int32,System.Double)">
            <summary>
            Set the time end for the simulation
            </summary>
        </member>
        <member name="M:Jarnac.msim.setNumPoints(System.Int32,System.Int32)">
            <summary>
            Set the number of output data points
            </summary>
        </member>
        <member name="M:Jarnac.msim.setSelectionList(System.Int32,System.Collections.ArrayList)">
            <summary>
            Sets the list of variables to return when calling simulate(), eg setSelectionList(handle, {'Time', 'S1', 'J0'
            </summary>
        </member>
        <member name="M:Jarnac.msim.reset(System.Int32)">
            <summary>
            Reset the model to it's initial conditions
            </summary>
        </member>
        <member name="M:Jarnac.msim.oneStep(System.Int32,System.Double,System.Double)">
            <summary>
            Carry out one step in the simulation. The method takes two arguments, the current time and the step size to use in the next integration step. The method returns the time at the new point. Usage: t = oneStep (modelHandle, t, 0.1)
            </summary>
        </member>
        <member name="M:Jarnac.msim.simulate(System.Int32)">
            <summary>
            Carry out a simulation using a stiff ODE itegrator
            </summary>
        </member>
        <member name="M:Jarnac.msim.steadyState(System.Int32)">
            <summary>
            Compute the steady state, returns the sum fo squares indicating the quality of the solution
            </summary>
        </member>
        <member name="M:Jarnac.msim.getReducedJacobian(System.Int32)">
            <summary>
            Get the current reduced jacobian matrix. This call will return the reduced matrix, that is dependent species have been removed
            </summary>
        </member>
        <member name="M:Jarnac.msim.getFullJacobian(System.Int32)">
            <summary>
            Get the current full jacobian matrix.
            </summary>
        </member>
        <member name="M:Jarnac.msim.evalModel(System.Double,System.Double,System.Double[],System.Double[])">
            <summary>
            Get the current state of the model, arg1 = time, arg2 = variable array, arg3 = parameter array
            </summary>
        </member>
        <member name="M:Jarnac.msim.getuCC(System.Int32,System.String,System.String)">
            <summary>
            Returns the unscaled control coefficient
            </summary>
        </member>
        <member name="M:Jarnac.msim.getCC(System.Int32,System.String,System.String)">
            <summary>
            Returns the scaled control coefficient
            </summary>
        </member>
        <member name="M:Jarnac.msim.getuEE(System.Int32,System.String,System.String)">
            <summary>
            Returns the unscaled elasticity coefficient
            </summary>
        </member>
        <member name="M:Jarnac.msim.getEE(System.Int32,System.String,System.String)">
            <summary>
            Returns the scaled elasticity coefficient
            </summary>
        </member>
        <member name="M:Jarnac.msim.gillespie(System.Int32)">
            <summary>
            Carry out a simulation using the Gillespie method
            </summary>
        </member>
        <member name="M:Jarnac.msim.setValue(System.Int32,System.String,System.Double)">
            <summary>
            Set the value of the named symbol, eg setValue (id, \"ATP\", 1.2\")
            </summary>
        </member>
        <member name="M:Jarnac.msim.getValue(System.Int32,System.String)">
            <summary>
            Get the value of the named symbol, eg x = getValue (id, \"ATP\")
            </summary>
        </member>
        <member name="M:Jarnac.msim.getReactionRates(System.Int32)">
            <summary>
            Get the reaction rates as a vector
            </summary>
        </member>
        <member name="M:Jarnac.msim.getReactionRate(System.Int32,System.Int32)">
            <summary>
            Get a particular reaction rate (id, ithReaction)
            </summary>
        </member>
        <member name="M:Jarnac.msim.getRatesOfChange(System.Int32)">
            <summary>
            Get the rates of change as a vector
            </summary>
        </member>
        <member name="M:Jarnac.msim.getFloatingSpeciesNames(System.Int32)">
            <summary>
            Get the list of floating species names
            </summary>
        </member>
        <member name="M:Jarnac.msim.getFloatingSpeciesValues(System.Int32)">
            <summary>
            Get an array of floating species values
            </summary>
        </member>
        <member name="M:Jarnac.msim.getReactionNames(System.Int32)">
            <summary>
            Get the list of reaction names
            </summary>
        </member>
        <member name="M:Jarnac.msim.getBoundarySpeciesValues">
            <summary>
            Get the list of boundary species values
            </summary>
        </member>
        <member name="M:Jarnac.msim.getBoundarySpeciesNames">
            <summary>
            Get the list of boundary species names
            </summary>
        </member>
        <member name="M:Jarnac.msim.getNumLocalParameters(System.Int32)">
            <summary>
            Get the number of local parameters in the model
            </summary>
        </member>
        <member name="M:Jarnac.msim.getAllLocalParameterValues(System.Int32)">
            <summary>
            Get the list of local parameter values in the model
            </summary>
        </member>
        <member name="M:Jarnac.msim.getAllLocalParameterNames(System.Int32)">
            <summary>
            Get the list of parameters in the model
            </summary>
        </member>
        <member name="M:Jarnac.msim.getNumFloatingSpecies(System.Int32)">
            <summary>
            Get the number of floating species
            </summary>
        </member>
        <member name="M:Jarnac.msim.getNumBoundarySpecies(System.Int32)">
            <summary>
            Get the number of boundary species
            </summary>
        </member>
        <member name="M:Jarnac.msim.getFloatingSpeciesName(System.Int32,System.Int32)">
            <summary>
            Get the ith floating species name
            </summary>
        </member>
        <member name="M:Jarnac.msim.getBoundarySpeciesName(System.Int32,System.Int32)">
            <summary>
            Get the ith boundary species name
            </summary>
        </member>
        <member name="M:Jarnac.msim.getODEList(System.Int32)">
            <summary>
            Returns the model as a list of ODE equation strings
            </summary>
        </member>
        <member name="M:Jarnac.msim.getRateLawList(System.Int32)">
            <summary>
            Returns the models' list of rate laws
            </summary>
        </member>
        <member name="M:Jarnac.msim.getConservationLawArray(System.Int32)">
            <summary>
            Returns the conservation law array
            </summary>
        </member>
        <member name="M:Jarnac.msim.getStoichiometryMatrix">
            <summary>
            Returns the stoichiometry matrix
            </summary>
        </member>
        <member name="M:Jarnac.msim.getNrMatrix(System.Int32)">
            <summary>
            Returns the reduced stoichiometry matrix
            </summary>
        </member>
        <member name="M:Jarnac.msim.getLinkMatrix(System.Int32)">
            <summary>
            Returns the link matrix
            </summary>
        </member>
        <member name="M:Jarnac.msim.getUnScaledElasticityMatrix(System.Int32)">
            <summary>
            Returns the matrix of unscaled elasticities
            </summary>
        </member>
        <member name="M:Jarnac.msim.getNumReactions(System.Int32)">
            <summary>
            Returns the number of reaction in the current model
            </summary>
        </member>
        <member name="M:Jarnac.msim.getCapabilities(System.Int32)">
            <summary>
            Returns the simulators' capabilities
            </summary>
        </member>
        <member name="M:Jarnac.msim.getIntegrationMethodList(System.Int32)">
            <summary>
            Returns the list simulator names
            </summary>
        </member>
        <member name="M:Jarnac.msim.setIntegrationMethod(System.Int32,System.String)">
            <summary>
            Sets the integration method
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapObject">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapObject.cs</filepath>
            		<creation>2005/06/08</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapObject.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Base class for the data representation of an object to be sent to the client via SOAP.
             </summary>
             <remarks>
             This contains functions common to all SOAP-transmitted objects, such as 
             maintaining their 'dirty' state.
             </remarks>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapObject.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapObject.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Soap object constructor with status given
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapObject.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapObject.Status">
            <summary>
            Status of the object
            Possible Status values:
              Delete, Instert, Invalid, NoChanges, ReadOnly, Update
            These determine whether changes are written back to the
            database when UpdateDatabase is called
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDesignedBy.#ctor">
            <summary>
            Default constructor, create a catalyze relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDesignedBy.#ctor(System.Guid,System.Guid,System.Guid)">
            <summary>
            Constructor, create a new catalyze relation with all fields initialized.
            </summary>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDesignedBy.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDesignedBy.Id">
            <summary>
            Get set the  ID
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDesignedBy.ModelMetadataId">
            <summary>
            Get/set the ModelMetadataId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDesignedBy.AuthorId">
            <summary>
            
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSbase.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSbase.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSbase.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSbase.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSbase.MetaId">
            <summary>
            metaId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSbase.SboTerm">
            <summary>
            sboTerm
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSbase.Notes">
            <summary>
            notes
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSbase.Annotation">
            <summary>
            annotation
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelMetadata.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelMetadata.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelMetadata.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModelMetadata.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapAuthor.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapAuthor.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapAuthor.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapAuthor.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.ReturnType">
            <summary>
            The return type for handling client-side error messages.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.Unknown">
            <summary>
            unknown type.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.Success">
            <summary>
            Successful return.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.Failure">
            <summary>
            Unsuccessful return.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.LoginRequired">
            <summary>
            Requires login.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.Exception">
            <summary>
            Exception thrown.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.PathwayException">
            <summary>
            Pathway Exception thrown.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ReturnType.DBWrapperException">
            <summary>
            Database exception thrown.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.ReturnValue">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/ReturnValue.cs</filepath>
            		<creation>2005/06/16</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/ReturnValue.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Packages additional information to help the client application
             present error messages to the user.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.ReturnValue.#ctor(PathwaysLib.SoapObjects.ReturnType)">
            <summary>
            ReturnValue constructor
            </summary>
            <param name="type">
            The return type.
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.ReturnValue.#ctor(PathwaysLib.SoapObjects.ReturnType,System.String)">
            <summary>
            ReturnValue constructor.
            </summary>
            <param name="type">
            The return type.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.ReturnValue.Exception(System.Exception)">
            <summary>
            Create a return value based on an exception.
            </summary>
            <param name="e">
            The source exception.
            </param>
            <returns>
            ReturnValue to be sent to the user.
            </returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.ReturnValue.Type">
            <summary>
            Get/set the return type.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.ReturnValue.Message">
            <summary>
            Get/set the returned message.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.ReturnValue.Success">
            <summary>
            Return a success message.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.ReturnValue.LoginRequired">
            <summary>
            Return a LoginRequired message.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapBasicMolecule">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapBasicMolecule.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapBasicMolecule.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a basic molecule.
             </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapMolecularEntity">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapMolecularEntity.cs</filepath>
            		<creation>2005/06/17</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
                     <contrubutor>
                         <name>Divya Babuji</name>
                         <initials>DB</initials>
                         <email>divya.babuji@case.edu</email>
                     </contrubutor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapMolecularEntity.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntity.#ctor">
            <summary>
            Default constructor, create a molecular entity with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntity.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new molecular entity.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="molecular_entity_notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntity.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntity.ToString">
            <summary>
            Returns the name of the molecular entity.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntity.ID">
            <summary>
            Molecular entity database ID.
            This is virtual so derived classes can 
            set thier own row's copy of the ID as well
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntity.Name">
            <summary>
            Name of molecular entity
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntity.Type">
            <summary>
            Type of molecular entity for inheritance
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntity.MolecularEntityNotes">
            <summary>
            Type of molecular entity
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapBasicMolecule.#ctor">
            <summary>
            Default constructor, create a basic molecule with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapBasicMolecule.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="molecular_entity_notes">may be null</param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapBasicMolecule.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapBasicMolecule.ToString">
            <summary>
            Returns the id of the basic molecule.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapBasicMolecule.ID">
            <summary>
            Basic molecule database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapBasicMolecule.IsCommon">
            <summary>
            Set to true if this is a common molecule, default is false
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapBasicMolecule.Type">
            <summary>
            Type of the basic molecule as a molecular entity. The type field of a basic molecule is always "basic_molecule". 
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapCatalyze">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapCatalyze.cs</filepath>
            		<creation>2005/07/07</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapCatalyze.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many typed names for a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCatalyze.#ctor">
            <summary>
            Default constructor, create a catalyze relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCatalyze.#ctor(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Constructor, create a new catalyze relation with all fields initialized.
            </summary>
            <param name="gene_product_id"></param>
            <param name="process_id"></param>
            <param name="orgGroupId"></param>
            <param name="ec_number"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCatalyze.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCatalyze.GeneProductID">
            <summary>
            Get set the gene product ID
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCatalyze.ProcessID">
            <summary>
            Get/set the process ID
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCatalyze.ECNumber">
            <summary>
            Get/set the ec number
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCatalyze.OrganismGroupID">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapChromosome">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapChromosome.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapChromosome.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a chromosome.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapChromosome.#ctor">
            <summary>
            Default constructor, create a chromosome with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapChromosome.#ctor(System.String,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>
            Create a new chromosome.
            </summary>
            <param name="name"></param>
            <param name="length"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapChromosome.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Constructor, sets the object status to the given parameter
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapChromosome.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapChromosome.ToString">
            <summary>
            Returns the name of the chromosome.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.ID">
            <summary>
            Chromosome database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.Name">
            <summary>
            Name of chromosome
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.Length">
            <summary>
            Length of chromosome
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.CentromereLocation">
            <summary>
            Location of the centromere
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.OrganismGroupId">
            <summary>
            Organism Group Id
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapChromosome.ChromosomeNotes">
            <summary>
            Notes on the chromosome
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapCommonMolecule">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapCommonMolecule.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapCommonMolecule.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a common molecule.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCommonMolecule.#ctor">
            <summary>
            Default constructor, create a common molecule with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCommonMolecule.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Create a new common molecule.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCommonMolecule.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCommonMolecule.ToString">
            <summary>
            Returns the name of the common molecule.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCommonMolecule.ID">
            <summary>
            Common molecule database ID.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartment.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartment.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Guid,System.Int32,System.Single,System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartment.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.CompartmentTypeId">
            <summary>
            compartmentTypeId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.SpatialDimensions">
            <summary>
            spatialDimensions
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.Size">
            <summary>
            size
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.UnitsId">
            <summary>
            unitsId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.Outside">
            <summary>
            outside
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.CompartmentClassId">
            <summary>
            compartmentClassId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartment.Constant">
            <summary>
            constant
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartmentType.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartmentType.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapCompartmentType.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartmentType.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartmentType.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartmentType.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapCompartmentType.Name">
            <summary>
            name 
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapConstraint.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapConstraint.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapConstraint.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapConstraint.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapConstraint.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapConstraint.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapConstraint.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDataSource.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDataSource.#ctor(System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapDataSource.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDataSource.ID">
            <summary>
            datasource ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDataSource.Name">
            <summary>
            Name of datasource
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapDataSource.Url">
            <summary>
            Url of datasource
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapECNumber">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapECNumber.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: ali $</cvs_author>
            			<cvs_date>$Date: 2009/04/30 16:18:00 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapECNumber.cs,v 1.2 2009/04/30 16:18:00 ali Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.2 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a ec number.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumber.#ctor">
            <summary>
            Default constructor, create a ec number with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumber.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new ec number.
            </summary>
            <param name="ec_number"></param>
            <param name="name"></param>
            <param name="nodeCode"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumber.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            SoapECNumber constructor.
            </summary>
            <param name="status">
            The status of the object.
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumber.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumber.ToString">
            <summary>
            Returns the ec number as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumber.ECNumber">
            <summary>
            ec number
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumber.Name">
            <summary>
            Name of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumber.NodeCode">
            <summary>
            Type of pathway
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapECNumberName">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapECNumberName.cs</filepath>
            		<creation>2005/07/07</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapECNumberName.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many typed names for an ec number.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumberName.#ctor">
            <summary>
            Default constructor, create an entity name with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumberName.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new name for an ec number.
            </summary>
            <param name="ec_number"></param>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapECNumberName.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumberName.ECNumber">
            <summary>
            Get set the ec number
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumberName.Name">
            <summary>
            Get/set the name
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapECNumberName.Type">
            <summary>
            Get/set the type
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEvent.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEvent.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEvent.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.ID">
            <summary>
            Reaction ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.ModelId">
            <summary>
            modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.Name">
            <summary>
            Name 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.EventTriggerId">
            <summary>
            eventTriggerId.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEvent.EventDelayId">
            <summary>
            eventDelayId.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventAssignment.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventAssignment.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventAssignment.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventAssignment.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventAssignment.EventId">
            <summary>
            eventId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventAssignment.Variable">
            <summary>
            variable
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventAssignment.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventDelay.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventDelay.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventDelay.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventDelay.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventDelay.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventTrigger.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventTrigger.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapEventTrigger.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventTrigger.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapEventTrigger.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapExternalDatabase">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/ExternalDatabase.cs</filepath>
            		<creation>2005/06/06</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapExternalDatabase.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a biological pathway.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDatabase.#ctor">
            <summary>
            Default constructor, create an external database object with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDatabase.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new external database object.
            </summary>
            <param name="nname"></param>
            <param name="nfullname"></param>
            <param name="nurl"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDatabase.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Create a new external database object
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDatabase.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDatabase.ToString">
            <summary>
            Returns the name of the external database.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDatabase.ID">
            <summary>
            ID of the external database.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDatabase.Name">
            <summary>
            Name of external database
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDatabase.Fullname">
            <summary>
            Fullname of the external database
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDatabase.URL">
            <summary>
            URL of the external database
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapExternalDbLink">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapExternalDbLink.cs</filepath>
            		<creation>2005/07/07</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapExternalDbLink.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many typed names for a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbLink.#ctor">
            <summary>
            Default constructor, create a catalyze relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbLink.#ctor(System.Guid,System.Int32,System.String)">
            <summary>
            Constructor, create a new external database link with all fields initialized.
            </summary>
            <param name="local_id"></param>
            <param name="external_database_id"></param>
            <param name="id_in_external_database"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbLink.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbLink.LocalID">
            <summary>
            ID of the object (process, molecular entity, etc...)
             in our database
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbLink.ExternalDatabaseID">
            <summary>
            Id of the external database
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbLink.IdInExternalDatabase">
            <summary>
            The id of the object (process, molecular entity, etc...)
             in an external database
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapExternalDbUrl">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapExternalDbUrl.cs</filepath>
            		<creation>2006/06/08</creation>
            		<author>
            			<name>Greg Strnad</name>
            			<initials>gjs</initials>
            			<email>gjs4@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon S. Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapExternalDbUrl.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a SOAP ExternalDbUrl object.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbUrl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbUrl.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Constructor, create a new external database URL with all fields initialized.
            </summary>
            <param name="external_database_id"></param>
            <param name="type"></param>
            <param name="url"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapExternalDbUrl.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbUrl.ID">
            <summary>
            ID of the external database
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbUrl.Type">
            <summary>
            Type of link item
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapExternalDbUrl.URL">
            <summary>
            The URL (template)
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapFunctionDefinition.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapFunctionDefinition.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapFunctionDefinition.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapFunctionDefinition.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapFunctionDefinition.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapFunctionDefinition.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapFunctionDefinition.Name">
            <summary>
            name 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapFunctionDefinition.Lambda">
            <summary>
            lambda 
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapGene">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapGene.cs</filepath>
            		<creation>2005/06/23</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapGene.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGene.#ctor">
            <summary>
            Default constructor, create a pathway with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGene.#ctor(System.String,System.String,System.Guid,System.Guid,System.String,System.Int64,System.Guid,System.String,System.Int64,System.String)">
            <summary>
            Creates a new Gene.
            
            The notes fields may be null.  
            Specify ChromosomeID (gene is in a specific organism) or 
            OrganismGroupID (gene is common to a group of organisms), but not both.
            </summary>
            <param name="name"></param>
            <param name="molecular_entity_notes">May be null</param>
            <param name="gene_group_id">If there is a homologous gene(s), use the GeneGroupId of that gene, otherwise leave this empty (Guid.Empty) to have a new gene group id be generated for this gene</param>
            <param name="chromosome_id">Make this non-empty (not Guid.Empty) if this gene is present in a specific organism instead of in an Organism Group.  If this is entered, OrganismGroupId should be set to Guid.Empty!</param>
            <param name="cytogenic_address"></param>
            <param name="genetic_address"></param>
            <param name="organism_group_id">Make this non-empty (not Guid.Empty) if this gene is present in a general organism group instead of in a specific organism.  If this is entered, ChromosomeId should be set to Guid.Empty!</param>
            <param name="gene_notes">May be null</param>
            <param name="relative_address"></param>
            <param name="rawAddress"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGene.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGene.ToString">
            <summary>
            Returns the id of the gene.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.ID">
            <summary>
            Gene database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.GeneGroupID">
            <summary>
            Gene Group ID.
            
            A Gene group is used to identify homologous genes
            between different organisms.  This should be either
            set to the same value as another gene's GeneGroupId
            if they are homologous, or left empty and a new 
            GeneGroupId will be created at insertion.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.ChromosomeID">
            <summary>
            Gene chromosome ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.CytogenicAddress">
            <summary>
            cytogenic address of gene
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.GeneticAddress">
            <summary>
            Gene's genetic address.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.OrganismGroupID">
            <summary>
            Gene database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.GeneNotes">
            <summary>
            Type of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.RelativeAddress">
            <summary>
            Type of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.Type">
            <summary>
            Get the molecular entity type, returns "genes"
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGene.RawAddress">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapGeneProduct">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/GeneProduct.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapGeneProduct.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a biological gene product.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGeneProduct.#ctor">
            <summary>
            Default constructor, create a gene product with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGeneProduct.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creation constructor
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="molecular_entity_notes">
            base class notes
            </param>
            <param name="gene_product_notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGeneProduct.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Constructor with status given
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGeneProduct.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGeneProduct.ToString">
            <summary>
            Returns the id of the gene product.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGeneProduct.ID">
            <summary>
            GeneProduct database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGeneProduct.GeneProductNotes">
            <summary>
            Notes for gene product
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapGOTerm">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapGOTerm.cs</filepath>
            		<creation>2005/02/</creation>
            		<author>
            			<name>Marc Reynolds</name>
            			<initials>mrr</initials>
            			<email>marc.reynolds@case.edu</email>
            		</author>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapGOTerm.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a Gene Ontology Term
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapGOTerm.#ctor">
            <summary>
            Default constructor in which nothing is initialized
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGOTerm.ID">
            <summary>
            The 7-digit id with leading zeros
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGOTerm.Name">
            <summary>
            The name of the Gene Ontology Term
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGOTerm.TotalDescendants">
            <summary>
            The total number of descendants in this term's subtree
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGOTerm.MaximumSubtreeHeight">
            <summary>
            The maximum height of this term's subtree
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapGOTerm.TermLevel">
            <summary>
            Level of the the term in GO
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapInitialAssignment.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapInitialAssignment.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapInitialAssignment.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapInitialAssignment.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapInitialAssignment.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapInitialAssignment.Symbol">
            <summary>
            symbol
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapInitialAssignment.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapKineticLaw.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapKineticLaw.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapKineticLaw.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapKineticLaw.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapKineticLaw.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapModelsPathways.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapModelsPathways.#ctor(System.Guid,System.Guid,System.Int32,System.Guid)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapModelsPathways.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapModelsPathways.PathwayId">
            <summary>
             pathwayId.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapModelsPathways.QualifierId">
            <summary>
             qualifierId.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapModelsPathways.OrganismGroupId">
            <summary>
             organismGroupId.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities.#ctor(System.Guid,System.Guid,System.Int32)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities.ReactionId">
             <summary>
            reaction
             </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapReactionsProcessEntities.ProcessId">
            <summary>
             processId.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSbaseGO.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSbaseGO.#ctor(System.Guid,System.String,System.Int16)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSbaseGO.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities.#ctor(System.Guid,System.Guid,System.Int32)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities.SpeciesId">
            <summary>
            species
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMapSpeciesMolecularEntities.MolecularEntityId">
            <summary>
             molecularEntityId.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModel.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModel.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModel.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.ID">
            <summary>
            Model ID.
            </summary>
            
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.SbmlId">
            <summary>
            sbmlId of Model
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.Name">
            <summary>
            Name of Model
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.SbmlLevel">
            <summary>
            SbmlLevel of datasource
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.SbmlVersion">
            <summary>
            SbmlVersion of datasource
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.DataSourceId">
            <summary>
            dataSourceId of datasource
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.SbmlFile">
            <summary>
            sbmlFile
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModel.SbmlFileName">
            <summary>
            sbmlFileName
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelOrganism.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelOrganism.#ctor(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapModelOrganism.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapModelOrganism.OrganismGroupId">
            <summary>
             organismGroupId.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapMolecularEntityName">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapMolecularEntityName.cs</filepath>
            		<creation>2005/07/07</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapMolecularEntityName.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents one of possibly many typed names for a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntityName.#ctor">
            <summary>
            Default constructor, create an entity name with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntityName.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Create a new entity name.
            </summary>
            <param name="entityId"></param>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapMolecularEntityName.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntityName.MolecularEntityId">
            <summary>
            Get/set the molecular entity id
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntityName.Name">
            <summary>
            Get/set a molecular entity name
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapMolecularEntityName.Type">
            <summary>
            Get/set the type
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.ObjectStatus">
            <summary>
            The database status of the object.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.NoChanges">
            <summary>
            Unchanged.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.Insert">
            <summary>
            Inserted item.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.Update">
            <summary>
            Updated item.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.Delete">
            <summary>
            Deleted item.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.ReadOnly">
            <summary>
            Readonly item.
            </summary>
        </member>
        <member name="F:PathwaysLib.SoapObjects.ObjectStatus.Invalid">
            <summary>
            Invalid item.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapOrganism">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapOrganism.cs</filepath>
            		<creation>2005/06/17</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapOrganism.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents an organism.
             </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapOrganismGroup">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapOrganismGroup.cs</filepath>
            		<creation>2005/07/01</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapOrganismGroup.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents an organism group.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.#ctor">
            <summary>
            Default constructor, create a organism group with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.#ctor(System.String,System.Guid,System.String)">
            <summary>
            Create a new organism group.
            </summary>
            <param name="scientific_name"></param>
            <param name="parent_id"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.#ctor(System.String,System.String,System.Guid,System.String)">
            <summary>
            Like the above, but also includes the common name
            </summary>
            <param name="scientific_name"></param>
            <param name="common_name"></param>
            <param name="parent_id"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Constructor with status given
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganismGroup.ToString">
            <summary>
            Returns the name of the organism group.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.ID">
            <summary>
            OrganismGroup database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.Name">
            <summary>
            Formats the name depending on upon whether scientific name, common name, or both are available
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.ScientificName">
            <summary>
            Scientific Name of organism group
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.CommonName">
            <summary>
            Get/Set the common name for the organism group
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.ParentID">
            <summary>
            OrganismGroup parent ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganismGroup.Notes">
            <summary>
            Notes for the Organism Group
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganism.#ctor">
            <summary>
            Default constructor, create a organism with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganism.#ctor(System.String,System.String,System.String,System.Guid,System.String,System.Int32)">
            <summary>
             Create a new organism with all fields initiallized.
            </summary>
            <param name="common_name"></param>
            <param name="scientific_name"></param>
            <param name="taxonomy_id"></param>
            <param name="parent"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganism.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapOrganism.ToString">
            <summary>
            Returns the name of the organism.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganism.TaxonomyID">
            <summary>
            Taxonomy ID of organism
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapOrganism.CM_Unit_Length">
            <summary>
            CM_Unit_Length of organism
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapParameter.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapParameter.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.String,System.String,System.Double,System.Guid,System.Boolean)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapParameter.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.ReactionId">
            <summary>
            reactionId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.Value">
            <summary>
            value
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.UnitsId">
            <summary>
            unitsId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapParameter.Constant">
            <summary>
            constant
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapPathway">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/Pathway.cs</filepath>
            		<creation>2005/06/06</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
                     <contributor>
                     <name>Divya</name>
                     <initials>DB</initials>
                     <email>dvya.babuji@case.edu</email>
                     </contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapPathway.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a biological pathway.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathway.#ctor">
            <summary>
            Default constructor, create a pathway with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathway.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create a new pathway.
            </summary>
            <param name="name">
            Name of the pathway
            </param>
            <param name="type"></param>
            <param name="pathwayStatus"></param>
            <param name="pathwayNotes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathway.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Constructor with status given
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathway.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathway.ToString">
            <summary>
            Returns the name of the pathway.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathway.ID">
            <summary>
            Pathway database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathway.Name">
            <summary>
            Name of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathway.Type">
            <summary>
            Type of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathway.PathwayStatus">
            <summary>
            Status of pathway
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathway.PathwayNotes">
            <summary>
            Notes about pathway
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapPathwayGroup">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapPathwayGroup.cs</filepath>
            		<creation>2005/06/17</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapPathwayGroup.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathwayGroup.#ctor">
            <summary>
            Default constructor, create a molecular entity with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathwayGroup.#ctor(System.String,System.String)">
            <summary>
            Create a new molecular entity.
            </summary>
            <param name="name">
            The name of the entity.
            </param>
            <param name="notes">
            The entity's notes.
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathwayGroup.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapPathwayGroup.ToString">
            <summary>
            Returns the name of the molecular entity.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathwayGroup.Id">
            <summary>
            Molecular entity database ID.
            This is virtual so derived classes can 
            set thier own row's copy of the ID as well
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathwayGroup.Name">
            <summary>
            Name of molecular entity
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapPathwayGroup.Notes">
            <summary>
            Get/set the entity's notes.
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapProcess">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapProcess.cs</filepath>
            		<creation>2005/06/17</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapProcess.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a biological process.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcess.#ctor">
            <summary>
            Default constructor, create a process with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcess.#ctor(System.String,PathwaysLib.Utilities.Tribool,System.String,System.String,System.Guid)">
            <summary>
            Create a new process.
            </summary>
            <param name="name"></param>
            <param name="reversible"></param>
            <param name="location"></param>
            <param name="notes"></param>
            <param name="generic_process_id"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcess.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcess.ToString">
            <summary>
            Returns the name of the process.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.ID">
            <summary>
            Process database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.Name">
            <summary>
            Name of process
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.Reversible">
            <summary>
            Whether process is reversible or not
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.Location">
            <summary>
            Location of process
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.ProcessNotes">
            <summary>
            Notes on process
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcess.GenericProcessID">
            <summary>
            Type of process
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapProcessEntity">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapProcessEntity.cs</filepath>
            		<creation>2005/06/17</creation>
            		<author>
            			<name>Brandon S. Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Michael F. Starke</name>
            				<initials>mfs</initials>
            				<email>michael.starke@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapProcessEntity.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a molecular entity.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcessEntity.#ctor">
            <summary>
            Default constructor, create a molecular entity with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcessEntity.#ctor(System.Guid,System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructor, creates a new process entity object with all fields initiallized
            </summary>
            <param name="process_id"></param>
            <param name="entity_id"></param>
            <param name="role"></param>
            <param name="quantity"></param>
            <param name="notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProcessEntity.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcessEntity.ProcessID">
            <summary>
            Process database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcessEntity.EntityID">
            <summary>
            Molecular entity database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcessEntity.Role">
            <summary>
            Role of molecular entity in process
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcessEntity.Quantity">
            <summary>
            Quantity of molecular entity in a given process
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProcessEntity.ProcessEntityNotes">
            <summary>
            Notes for the process_entities relation
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapProtein">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapProtein.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brandon Evans</name>
            				<initials>bse</initials>
            				<email>brandon.evans@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapProtein.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a protein.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProtein.#ctor">
            <summary>
            Default constructor, create a protein with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProtein.#ctor(System.String,System.String,System.String)">
            <summary>
            Creation constructor
            </summary>
            <param name="name"></param>
            <param name="molecular_entity_notes"></param>
            <param name="gene_product_notes"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProtein.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Contructor
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProtein.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapProtein.ToString">
            <summary>
            Returns the name of the protein.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProtein.ID">
            <summary>
            protein database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapProtein.Type">
            <summary>
            Type for the base class
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReaction.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReaction.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Boolean,System.Boolean,System.Guid)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReaction.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.ID">
            <summary>
            Reaction ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.ModelId">
            <summary>
            modelId.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.Name">
            <summary>
            Name 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.Reversible">
            <summary>
            reversible of Reaction
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.Fast">
            <summary>
            fast of Reaction
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReaction.KineticLawId">
            <summary>
            kineticLawId 
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpecies.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpecies.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.Int16,System.Double,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpecies.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.ReactionId">
            <summary>
            reactionId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.SpeciesId">
            <summary>
            speciesId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.RoleId">
            <summary>
            roleId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.Stoichiometry">
            <summary>
            stoichiometry 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.StoichiometryMathId">
            <summary>
            stoichiometryMathId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.SbmlId">
            <summary>
            sbmlId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpecies.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpeciesRole.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpeciesRole.#ctor(System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapReactionSpeciesRole.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpeciesRole.ID">
            <summary>
             ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapReactionSpeciesRole.Role">
            <summary>
            role
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapRNA">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Data/SoapRNA.cs</filepath>
            		<creation>2005/06/30</creation>
            		<author>
            			<name>Brandon Evans</name>
            			<initials>bse</initials>
            			<email>brandon.evans@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            			</contributor>
            			<contributor>
            				<name>Suleyman Fatih Akgul</name>
            				<initials>sfa</initials>
            				<email>fatih@case.edu</email>
            			</contributor>
            			<contributor>
            				<name>Gokhan Yavas</name>
            				<initials>gy</initials>
            				<email>gokhan.yavas@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapRNA.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a RNA.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRNA.#ctor">
            <summary>
            Default constructor, create a RNA with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRNA.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create a new RNA
            </summary>
            <param name="name"></param>
            <param name="molecular_entity_notes"></param>
            <param name="gene_product_notes"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRNA.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            Constructor with status given
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRNA.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRNA.ToString">
            <summary>
            Returns the id of the RNA.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRNA.ID">
            <summary>
            RNA database ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRNA.Type">
            <summary>
            The type for molecular entity
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRNA.RNAType">
            <summary>
            Type of RNA
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRule.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRule.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Int16)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRule.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRule.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRule.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRule.Variable">
            <summary>
            variable
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRule.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRule.RuleTypeId">
            <summary>
            ruleTypeId
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRuleType.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRuleType.#ctor(System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapRuleType.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRuleType.ID">
            <summary>
             ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapRuleType.Type">
            <summary>
            type
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpecies.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpecies.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Guid,System.Guid,System.Double,System.Double,System.Guid,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpecies.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.SpeciesTypeId">
            <summary>
            speciesTypeId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.CompartmentId">
            <summary>
            compartmentId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.InitialAmount">
            <summary>
            initialAmount
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.InitialConcentration">
            <summary>
            initialConcentration
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.SubstanceUnitsId">
            <summary>
            substanceUnitsId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.HasOnlySubstanceUnits">
            <summary>
            hasOnlySubstanceUnits
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.BoundaryCondition">
            <summary>
            boundaryCondition
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.Charge">
            <summary>
            charge
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpecies.Constant">
            <summary>
            constant
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpeciesType.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpeciesType.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapSpeciesType.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpeciesType.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpeciesType.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpeciesType.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapSpeciesType.Name">
            <summary>
            name 
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapStoichiometryMath.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapStoichiometryMath.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapStoichiometryMath.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapStoichiometryMath.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapStoichiometryMath.Math">
            <summary>
            math
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnit.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnit.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.Int32,System.Int32,System.Double)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnit.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnit.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnit.Kind">
            <summary>
            kind
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnit.Exponent">
            <summary>
            exponent 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnit.Scale">
            <summary>
            scale 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnit.Multiplier">
            <summary>
            multiplier
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitComposition.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitComposition.#ctor(System.Guid,System.Guid)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitComposition.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitComposition.UnitDefinitionId">
            <summary>
            unitDefinitionId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitComposition.UnitId">
            <summary>
            unitId
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitDefinition.#ctor">
            <summary>
            Default constructor, create a DataSource relation with nothing initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitDefinition.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Constructor, create a new DataSource relation with all fields initialized.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapUnitDefinition.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitDefinition.ID">
            <summary>
            Compartment ID.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitDefinition.ModelId">
            <summary>
            modelId
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitDefinition.SbmlId">
            <summary>
            sbmlId 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitDefinition.Name">
            <summary>
            name 
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapUnitDefinition.IsBaseUnit">
            <summary>
            isBaseUnit 
            </summary>
        </member>
        <member name="T:PathwaysLib.SoapObjects.SoapViewState">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/SoapObjects/SoapViewState.cs</filepath>
            		<creation>2005/07/18</creation>
            		<author>
            			<name>Michael F. Starke</name>
            			<initials>mfs</initials>
            			<email>michael.starke@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:53 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/SoapObjects/SoapViewState.cs,v 1.1 2008/05/16 21:15:53 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Represents a biological pathway.
             </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapViewState.#ctor">
            <summary>
            SoapViewState constructor.
            </summary>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapViewState.#ctor(System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            SoapViewState Constructor.
            </summary>
            <param name="openSection">
            The section of the browser that is open.
            </param>
            <param name="openNode1ID">
            The id of the top level open node.
            </param>
            <param name="openNode1Type">
            The type of the top level open node.
            </param>
            <param name="openNode2ID">
            The id of the second level open node.
            </param>
            <param name="openNode2Type">
            The type of the second level open node.
            </param>
            <param name="openNode3ID">
            The id of the third level open node.
            </param>
            <param name="openNode3Type">
            The type of the third level open node.
            </param>
            <param name="displayItemID">
            The id of the currently displayed item.
            </param>
            <param name="displayItemType">
            The type of the currently displayed item.
            </param>
            <param name="viewGraph">
            Should the graph be viewed?
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapViewState.#ctor(PathwaysLib.SoapObjects.ObjectStatus)">
            <summary>
            SoapViewState constructor.
            </summary>
            <param name="status">
            The object's database status.
            </param>
        </member>
        <member name="M:PathwaysLib.SoapObjects.SoapViewState.Finalize">
            <summary>
            SoapViewState destructor.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.ViewID">
            <summary>
            Get/set the viewid.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenSection">
            <summary>
            Get/set the open section.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode1ID">
            <summary>
            Get/set the open node 1 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode1Type">
            <summary>
            Get/set the open node 1 type
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode2ID">
            <summary>
            Get/set the open node 2 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode2Type">
            <summary>
            Get/set the open node 2 type
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode3ID">
            <summary>
            Get/set the open node 3 id.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.OpenNode3Type">
            <summary>
            Get/set the open node 3 type
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.DisplayItemID">
            <summary>
            Get/set the display item id.
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.DisplayItemType">
            <summary>
            Get/set the display item type
            </summary>
        </member>
        <member name="P:PathwaysLib.SoapObjects.SoapViewState.ViewGraph">
            <summary>
            Get/set the graph's visibility.
            </summary>
        </member>
        <member name="T:PathwaysLib.UserFeedback.ErrorDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorDescription.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="errorTypeId"></param>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorDescription.GetErrorDescriptions(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorDescription.GetErrorDescriptionsByErrorType(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="errorTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorDescription.GetErrorDescriptionsByErrorType(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorDescription.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorDescription.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorDescription.ErrorTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorDescription.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.UserFeedback.ErrorLogEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorLogEntry.#ctor(System.Int32,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="errorText"></param>
            <param name="date"></param>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorLogEntry.GetErrors(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorLogEntry.InsertError(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="errorText"></param>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorLogEntry.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorLogEntry.ErrorText">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.UserFeedback.ErrorType">
            <summary>
            
            </summary>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorType.#ctor(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorType.GetErrorTypes(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.UserFeedback.ErrorType.GetErrorTypesByModule(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="module"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorType.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorType.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.ErrorType.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.UserFeedback.Module">
            <summary>
            
            </summary>
        </member>
        <member name="M:PathwaysLib.UserFeedback.Module.#ctor(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="M:PathwaysLib.UserFeedback.Module.GetModules(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="P:PathwaysLib.UserFeedback.Module.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.Module.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.UserFeedback.Module.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.Utilities.AjaxMethodAttribute">
            <summary>
            An AjaxMethodAttribute container class.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.AjaxMethodAttribute.#ctor">
            <summary>
            A generic AjaxMethodAttribute constructor
            </summary>
        </member>
        <member name="T:PathwaysLib.Utilities.AjaxMethodInvoker">
            <summary>
            Invokes Ajax functions called from the client.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.AjaxMethodInvoker.#ctor(System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="classType">Custom classType</param>
        </member>
        <member name="F:PathwaysLib.Utilities.AjaxMethodInvoker.methodTable">
            <summary>
            Methods the invoker understands
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.AjaxMethodInvoker.Execute(System.Object,System.String,System.Web.HttpRequest)">
            <summary>
            Execute an Ajax function
            </summary>
            <param name="obj">Generic object on which to call the opcode</param>
            <param name="op">Opcode to call</param>
            <param name="request">Current HttpRequest object</param>
            <returns>Whether the execution was successful</returns>
        </member>
        <member name="P:PathwaysLib.Utilities.AjaxMethodInvoker.Methods">
            <summary>
            Gets methods understood by the AjaxMethodInvoker
            </summary>
        </member>
        <member name="T:BigInteger">
            <summary>
            Big integers!
            </summary>
        </member>
        <member name="F:BigInteger.primesBelow2000">
            <summary>
            Primes smaller than 2000 to test the generated prime number
            </summary>
        </member>
        <member name="F:BigInteger.dataLength">
            <summary>
            The number of actual characters used
            </summary>
        </member>
        <member name="M:BigInteger.#ctor">
            <summary>
            Constructor (Default value for BigInteger is 0)
            </summary>
        </member>
        <member name="M:BigInteger.#ctor(System.Int64)">
            <summary>
            Constructor (Default value provided by long)
            </summary>
            <param name="value">A default long value</param>
        </member>
        <member name="M:BigInteger.#ctor(System.UInt64)">
            <summary>
            Constructor (Default value provided by ulong)
            </summary>
            <param name="value">Default long value</param>
        </member>
        <member name="M:BigInteger.#ctor(BigInteger)">
            <summary>
            Constructor (Default value provided by BigInteger)
            </summary>
            <param name="bi">A default BigInteger</param>
        </member>
        <member name="M:BigInteger.#ctor(System.String,System.Int32)">
             <summary>
             Constructor (Default value provided by a string of digits of the
                          specified base)
            
             Example (base 10)
             -----------------
             To initialize "a" with the default value of 1234 in base 10
                  BigInteger a = new BigInteger("1234", 10)
            
             To initialize "a" with the default value of -1234
                  BigInteger a = new BigInteger("-1234", 10)
            
             Example (base 16)
             -----------------
             To initialize "a" with the default value of 0x1D4F in base 16
                  BigInteger a = new BigInteger("1D4F", 16)
            
             To initialize "a" with the default value of -0x1D4F
                  BigInteger a = new BigInteger("-1D4F", 16)
            
             Note that string values are specified in the sign\magnitude
             format.
             </summary>
             <param name="value">Initial value</param>
             <param name="radix">Radix to use</param>
        </member>
        <member name="M:BigInteger.#ctor(System.Byte[])">
             <summary>
             Constructor (Default value provided by an array of bytes)
             The lowest index of the input byte array (i.e [0]) should contain the
             most significant byte of the number, and the highest index should
             contain the least significant byte.
            
             E.g.
             To initialize "a" with the default value of 0x1D4F in base 16
                  byte[] temp = { 0x1D, 0x4F };
                  BigInteger a = new BigInteger(temp)
            
             Note that this method of initialization does not allow the
             sign to be specified.
             </summary>
             <param name="inData">A bytestream of data</param>
        </member>
        <member name="M:BigInteger.#ctor(System.Byte[],System.Int32)">
            <summary>
            Constructor (Default value provided by an array of bytes of the specified length.)
            </summary>
            <param name="inData">Bytestream of data</param>
            <param name="inLen">Length of array</param>
        </member>
        <member name="M:BigInteger.#ctor(System.UInt32[])">
            <summary>
            Constructor (Default value provided by an array of unsigned integers)
            </summary>
            <param name="inData">An array of unsigned integers</param>
        </member>
        <member name="M:BigInteger.op_Implicit(System.Int64)~BigInteger">
            <summary>
            Overloading of the typecast operator.  For BigInteger, bi = 10;
            </summary>
            <param name="value">A value to cast</param>
            <returns>A new BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.UInt64)~BigInteger">
            <summary>
            Overloading of the typecast operator.  For BigInteger, bi = 10;
            </summary>
            <param name="value">A value to cast</param>
            <returns>A new BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.Int32)~BigInteger">
            <summary>
            Overloading of the typecast operator.  For BigInteger, bi = 10;
            </summary>
            <param name="value">A value to cast</param>
            <returns>A new BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.UInt32)~BigInteger">
            <summary>
            Overloading of the typecast operator.  For BigInteger, bi = 10;
            </summary>
            <param name="value">A value to cast</param>
            <returns>A new BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Addition(BigInteger,BigInteger)">
            <summary>
            Overloading of addition operator
            </summary>
            <param name="bi1">First BigInteger to add</param>
            <param name="bi2">Second BigInteger to add</param>
            <returns>The sum of bi1 and bi2</returns>
        </member>
        <member name="M:BigInteger.op_Increment(BigInteger)">
            <summary>
            Overloading of the unary ++ operator
            </summary>
            <param name="bi1">A BigInteger to increment</param>
            <returns>An incremented BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Subtraction(BigInteger,BigInteger)">
            <summary>
            Overloading of subtraction operator
            </summary>
            <param name="bi1">First BigInteger</param>
            <param name="bi2">Second BigInteger</param>
            <returns>bi1 - bi2</returns>
        </member>
        <member name="M:BigInteger.op_Decrement(BigInteger)">
            <summary>
            Overloading of the unary -- operator
            </summary>
            <param name="bi1">A BigInteger to decrement</param>
            <returns>A decremented BigInteger</returns>
        </member>
        <member name="M:BigInteger.op_Multiply(BigInteger,BigInteger)">
            <summary>
            Overloading of multiplication operator
            </summary>
            <param name="bi1">First BigInteger</param>
            <param name="bi2">Second BigInteger</param>
            <returns>bi1 * bi2</returns>
        </member>
        <member name="M:BigInteger.op_LeftShift(BigInteger,System.Int32)">
            <summary>
            Overloading of unary left-shift operators
            </summary>
            <param name="bi1">BigInteger to shift</param>
            <param name="shiftVal">Bits to shift by</param>
            <returns>A shifted BigInteger</returns>
        </member>
        <member name="M:BigInteger.shiftLeft(System.UInt32[],System.Int32)">
            <summary>
            Least significant bits at lower part of buffer
            </summary>
            <param name="buffer">BigInteger</param>
            <param name="shiftVal">Shift value</param>
            <returns>Lower bits</returns>
        </member>
        <member name="M:BigInteger.op_RightShift(BigInteger,System.Int32)">
            <summary>
            Overloading of unary rightshift operators
            </summary>
            <param name="bi1"></param>
            <param name="shiftVal"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_OnesComplement(BigInteger)">
            <summary>
            Overloading of the NOT operator (1's complement)
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_UnaryNegation(BigInteger)">
            <summary>
            Overloading of the NEGATE operator (2's complement)
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Equality(BigInteger,BigInteger)">
            <summary>
            Overloading of equality operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 == bi2</returns>
        </member>
        <member name="M:BigInteger.op_Inequality(BigInteger,BigInteger)">
            <summary>
            Overloading of non-equality operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 != bi2</returns>
        </member>
        <member name="M:BigInteger.Equals(System.Object)">
            <summary>
            Override of Equals method
            </summary>
            <param name="o">Object to compare</param>
            <returns>this == o</returns>
        </member>
        <member name="M:BigInteger.GetHashCode">
            <summary>
            Override of GetHashCode method
            </summary>
            <returns>An integer hashcode</returns>
        </member>
        <member name="M:BigInteger.op_GreaterThan(BigInteger,BigInteger)">
            <summary>
            Overloading of greater than operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 > bi2</returns>
        </member>
        <member name="M:BigInteger.op_LessThan(BigInteger,BigInteger)">
            <summary>
            Overloading of less than operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 is less than bi2</returns>
        </member>
        <member name="M:BigInteger.op_GreaterThanOrEqual(BigInteger,BigInteger)">
            <summary>
            Overloading of greater than or equal to operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 >= bi2</returns>
        </member>
        <member name="M:BigInteger.op_LessThanOrEqual(BigInteger,BigInteger)">
            <summary>
            Overloading of less than or equal to operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 less than or equal to bi2</returns>
        </member>
        <member name="M:BigInteger.op_Division(BigInteger,BigInteger)">
            <summary>
            Overloading of division operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 / bi2</returns>
        </member>
        <member name="M:BigInteger.op_Modulus(BigInteger,BigInteger)">
            <summary>
            Overloading of modulus operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 % bi2</returns>
        </member>
        <member name="M:BigInteger.op_BitwiseAnd(BigInteger,BigInteger)">
            <summary>
            Overloading of bitwise AND operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 AND bi2</returns>
        </member>
        <member name="M:BigInteger.op_BitwiseOr(BigInteger,BigInteger)">
            <summary>
            Overloading of bitwise OR operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 | bi2</returns>
        </member>
        <member name="M:BigInteger.op_ExclusiveOr(BigInteger,BigInteger)">
            <summary>
            Overloading of bitwise XOR operator
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 ^ bi2</returns>
        </member>
        <member name="M:BigInteger.max(BigInteger)">
            <summary>
            Max of this and another BigInteger
            </summary>
            <param name="bi">A BigInteger</param>
            <returns>Max(this,bi2)</returns>
        </member>
        <member name="M:BigInteger.min(BigInteger)">
            <summary>
            Min of this and another BigInteger
            </summary>
            <param name="bi">A BigInteger</param>
            <returns>Min(this,bi2)</returns>
        </member>
        <member name="M:BigInteger.abs">
            <summary>
            Absolute value
            </summary>
            <returns>The absolute value</returns>
        </member>
        <member name="M:BigInteger.ToString">
            <summary>
            ToString override
            </summary>
            <returns>A string representation of this number in base-10</returns>
        </member>
        <member name="M:BigInteger.ToString(System.Int32)">
            <summary>
            ToString override
            </summary>
            <param name="radix">The base to use</param>
            <returns>A string representation of this number in base-radix</returns>
        </member>
        <member name="M:BigInteger.ToHexString">
            <summary>
            Convert this BigInteger into a hexadecimal string
            </summary>
            <returns>A string representation of this number in hexadecimal</returns>
        </member>
        <member name="M:BigInteger.modPow(BigInteger,BigInteger)">
            <summary>
            Modulo exponentiation
            </summary>
            <param name="exp"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.gcd(BigInteger)">
            <summary>
            Returns gcd(this, bi)
            </summary>
            <param name="bi"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genRandomBits(System.Int32,System.Random)">
            <summary>
            Populates "this" with the specified amount of random bits
            </summary>
            <param name="bits"></param>
            <param name="rand"></param>
        </member>
        <member name="M:BigInteger.bitCount">
             <summary>
             Returns the position of the most significant bit in the BigInteger.
            
             Eg.  The result is 0, if the value of BigInteger is 0...0000 0000
                  The result is 1, if the value of BigInteger is 0...0000 0001
                  The result is 2, if the value of BigInteger is 0...0000 0010
                  The result is 2, if the value of BigInteger is 0...0000 0011
             </summary>
             <returns>Position of most significant bit</returns>
        </member>
        <member name="M:BigInteger.FermatLittleTest(System.Int32)">
             <summary>
             Probabilistic prime test based on Fermat's little theorem
            
             for any a less than p (p does not divide a) if
                  a^(p-1) mod p != 1 then p is not prime.
            
             Otherwise, p is probably prime (pseudoprime to the chosen base).
            
             Returns
             -------
             True if "this" is a pseudoprime to randomly chosen
             bases.  The number of chosen bases is given by the "confidence"
             parameter.
            
             False if "this" is definitely NOT prime.
            
             Note - this method is fast but fails for Carmichael numbers except
             when the randomly chosen base is a factor of the number.
             </summary>
             <param name="confidence"></param>
             <returns></returns>
        </member>
        <member name="M:BigInteger.RabinMillerTest(System.Int32)">
             <summary>
             Probabilistic prime test based on Rabin-Miller's
            
             for any p > 0 with p - 1 = 2^s * t
            
             p is probably prime (strong pseudoprime) if for any a less than p,
             1) a^t mod p = 1 or
             2) a^((2^j)*t) mod p = p-1 for some 0 less than or equal to j less than or equal to s-1
            
             Otherwise, p is composite.
            
             Returns
             -------
             True if "this" is a strong pseudoprime to randomly chosen
             bases.  The number of chosen bases is given by the "confidence"
             parameter.
            
             False if "this" is definitely NOT prime.
             </summary>
             <param name="confidence"></param>
             <returns></returns>
        </member>
        <member name="M:BigInteger.SolovayStrassenTest(System.Int32)">
             <summary>
             Probabilistic prime test based on Solovay-Strassen (Euler Criterion)
            
             p is probably prime if for any a less than p (a is not multiple of p),
             a^((p-1)/2) mod p = J(a, p)
            
             where J is the Jacobi symbol.
            
             Otherwise, p is composite.
            
             Returns
             -------
             True if "this" is a Euler pseudoprime to randomly chosen
             bases.  The number of chosen bases is given by the "confidence"
             parameter.
            
             False if "this" is definitely NOT prime.
             </summary>
             <param name="confidence"></param>
             <returns></returns>
        </member>
        <member name="M:BigInteger.LucasStrongTest">
             <summary>
             Implementation of the Lucas Strong Pseudo Prime test.
            
             Let n be an odd number with gcd(n,D) = 1, and n - J(D, n) = 2^s * d
             with d odd and s >= 0.
            
             If Ud mod n = 0 or V2^r*d mod n = 0 for some 0 less than or equal to r less than s, then n
             is a strong Lucas pseudoprime with parameters (P, Q).  We select
             P and Q based on Selfridge.
            
             Returns True if number is a strong Lucus pseudo prime.
             Otherwise, returns False indicating that number is composite.
             </summary>
             <returns></returns>
        </member>
        <member name="M:BigInteger.isProbablePrime(System.Int32)">
             <summary>
             Determines whether a number is probably prime, using the Rabin-Miller's
             test.  Before applying the test, the number is tested for divisibility
             by primes less than 2000
            
             Returns true if number is probably prime.
             </summary>
             <param name="confidence"></param>
             <returns></returns>
        </member>
        <member name="M:BigInteger.isProbablePrime">
             <summary>
             Determines whether this BigInteger is probably prime using a
             combination of base 2 strong pseudoprime test and Lucas strong
             pseudoprime test.
            
             The sequence of the primality test is as follows,
            
             1) Trial divisions are carried out using prime numbers below 2000.
                if any of the primes divides this BigInteger, then it is not prime.
            
             2) Perform base 2 strong pseudoprime test.  If this BigInteger is a
                base 2 strong pseudoprime, proceed on to the next step.
            
             3) Perform strong Lucas pseudoprime test.
            
             Returns True if this BigInteger is both a base 2 strong pseudoprime
             and a strong Lucas pseudoprime.
            
             For a detailed discussion of this primality test, see [6].
             </summary>
             <returns></returns>
        </member>
        <member name="M:BigInteger.IntValue">
            <summary>
            Returns the lowest 4 bytes of the BigInteger as an int.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.LongValue">
            <summary>
            Returns the lowest 8 bytes of the BigInteger as a long.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.Jacobi(BigInteger,BigInteger)">
            <summary>
            Computes the Jacobi Symbol for a and b.
            Algorithm adapted from [3] and [4] with some optimizations
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genPseudoPrime(System.Int32,System.Int32,System.Random)">
            <summary>
            Generates a positive BigInteger that is probably prime.
            </summary>
            <param name="bits"></param>
            <param name="confidence"></param>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genCoPrime(System.Int32,System.Random)">
            <summary>
            Generates a random number with the specified number of bits such
            that gcd(number, this) = 1
            </summary>
            <param name="bits"></param>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.modInverse(BigInteger)">
            <summary>
            Returns the modulo inverse of this.  Throws ArithmeticException if
            the inverse does not exist.  (i.e. gcd(this, modulus) != 1)
            </summary>
            <param name="modulus"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.getBytes">
            <summary>
            Returns the value of the BigInteger as a byte array.  The lowest
            index contains the MSB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.setBit(System.UInt32)">
            <summary>
            Sets the value of the specified bit to 1
            The Least Significant Bit position is 0.
            </summary>
            <param name="bitNum"></param>
        </member>
        <member name="M:BigInteger.unsetBit(System.UInt32)">
            <summary>
            Sets the value of the specified bit to 0
            The Least Significant Bit position is 0.
            </summary>
            <param name="bitNum"></param>
        </member>
        <member name="M:BigInteger.sqrt">
             <summary>
             Returns a value that is equivalent to the integer square root
             of the BigInteger.
            
             The integer square root of "this" is defined as the largest integer n
             such that (n * n) less than or equal to this
             </summary>
             <returns></returns>
        </member>
        <member name="M:BigInteger.LucasSequence(BigInteger,BigInteger,BigInteger,BigInteger)">
             <summary>
             Returns the k_th number in the Lucas Sequence reduced modulo n.
            
             Uses index doubling to speed up the process.  For example, to calculate V(k),
             we maintain two numbers in the sequence V(n) and V(n+1).
            
             To obtain V(2n), we use the identity
                  V(2n) = (V(n) * V(n)) - (2 * Q^n)
             To obtain V(2n+1), we first write it as
                  V(2n+1) = V((n+1) + n)
             and use the identity
                  V(m+n) = V(m) * V(n) - Q * V(m-n)
             Hence,
                  V((n+1) + n) = V(n+1) * V(n) - Q^n * V((n+1) - n)
                               = V(n+1) * V(n) - Q^n * V(1)
                               = V(n+1) * V(n) - Q^n * P
            
             We use k in its binary expansion and perform index doubling for each
             bit position.  For each bit position that is set, we perform an
             index doubling followed by an index addition.  This means that for V(n),
             we need to update it to V(2n+1).  For V(n+1), we need to update it to
             V((2n+1)+1) = V(2*(n+1))
            
             This function returns
             [0] = U(k)
             [1] = V(k)
             [2] = Q^n
            
             Where U(0) = 0 % n, U(1) = 1 % n
                   V(0) = 2 % n, V(1) = P % n
             
             </summary>
             <param name="P"></param>
             <param name="Q"></param>
             <param name="k"></param>
             <param name="n"></param>
             <returns></returns>
        </member>
        <member name="T:PathwaysLib.Utilities.ComposeModelFunctions">
            <summary>
            Functions necessary for Compose Model functionality.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.ComposeModelFunctions.ComposeForTest(System.String,System.String)">
            <summary>
            This method is used to test whether two files can be composed via AutoMerge.
            </summary>
            <param name="model1">First model in string format.</param>
            <param name="model2">Second model in string format.</param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.ComposeModelFunctions.Compose(libsbmlcs.Model,libsbmlcs.Model,libsbmlcs.Model,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,PathwaysLib.Utilities.AttributeTypeEnum}},System.Collections.Generic.List{System.String})">
            <summary>
            Composes two models (model1 and model2) into modelComposed.
            </summary>
            <param name="model1">First model to feed composition method.</param>
            <param name="model2">Second model to feed composition method.</param>
            <param name="modelComposed">Two models will be composed into this model. By default send a new model contains model1. e.g. var modelComposed = new Model(model1)</param>
            <param name="DiffOfMergedElements">Stores the modifications on the merged elements.</param>
            <param name="ModifiedIds">Ids of the modified elements.</param>
            <returns>True if there is no exception, false otherwise.</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.ComposeModelFunctions.AddToModifiedIds(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Add the id to ModifiedIds session with correct prefix.
            </summary>
            <param name="idForComposedModel">Original id which will be prefixed by the method.</param>
            <param name="ModifiedIds">List of modified ids.</param>
            <returns>Prefixed id.</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.ComposeModelFunctions.FindModifiedId(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Checks the id(Sid) of the SBML element whether it is modified during composition.
            </summary>
            <param name="idToCheck">String Sid of the element.</param>
            <param name="ModifiedIds">List of modified ids.</param>
            <returns>If id found returns new id, otherwise returns idToCheck</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.EventLogger">
            <summary>
            Summary description for EventLogger.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.EventLogger.SystemEventLog(System.String)">
            <summary>
            Writes to the event log
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.EventLogger.SystemEventLog(System.String,System.String)">
            <summary>
            Writes to the event log
            </summary>
            <param name="componentName"></param>
            <param name="message"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.EventLogger.SystemEventLog(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes to the event log
            </summary>
            <param name="message"></param>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.EventLogger.SystemEventLog(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes to the event log
            </summary>
            <param name="componentName"></param>
            <param name="message"></param>
            <param name="type"></param>
        </member>
        <member name="P:PathwaysLib.Utilities.EventLogger.ComponentName">
            <summary>
            Get/set the calling component
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.EventLogger.Url">
            <summary>
            Get/set the calling URL
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.GeneAddressDecoder.DecodeGenesOfOrganism(PathwaysLib.ServerObjects.ServerOrganismGroup)">
            <summary>
            Given an organism, for each gene in the organism, decodes the address in the raw_address field
            into either cytogenetic address or genetic address field.
            Populates the relative address and chromosome id fields of each gene.
            </summary>
            <param name="organism"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.GeneAddressDecoder.DecodeGeneAddress(System.String,System.String@,System.Int64@,System.String@,System.Int64@,System.Collections.Generic.Dictionary{System.String,PathwaysLib.ServerObjects.ServerChromosome},System.Int32)">
            <summary>
            Decodes different kinds of genetic addresses and extracts chromosome number and relative address
            </summary>
            <param name="rawAddress"></param>
            <param name="chromosomeName"></param>
            <param name="relativeAddress"></param>
            <param name="cytoGenAddress"></param>
            <param name="chromosomeDict"></param>
        </member>
        <member name="T:PathwaysLib.Utilities.GraphCacheManager">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/GraphCacheManager.cs</filepath>
            		<creation>2006/02/06</creation>
            		<author>
            			<name>Brendan Elliott</name>
            			<initials>BE</initials>
            			<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>Brian Lauber</name>
            				<initials>bml</initials>
            				<email>Brian.Lauber@case.edu</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:58 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Utilities/GraphCacheManager.cs,v 1.1 2008/05/16 21:15:58 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Performs file-based caching of pathway/process layout XML documents.
             </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.#ctor">
            <summary>
            Singlon object, no public constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.Get(System.String,System.Guid)">
            <summary>
            Attempt to retrieve an item in the cache by its type and Guid identifier.
            
            Returns null if the item is not in the cache.
            </summary>
            <param name="type"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.Get(System.String)">
            <summary>
            Attempt to retrieve a single item value in the cache by its type (without Guid).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.Set(System.String,System.Guid,System.String)">
            <summary>
            Sets the value of an item in the cache, overwriting an old value, if present.
            </summary>
            <param name="type"></param>
            <param name="entity"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.Set(System.String,System.String)">
            <summary>
            Sets the value of a single value item in the cache, overwriting an old value, if present.
            </summary>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.Remove(System.String,System.Guid)">
            <summary>
            Removes an item from the cache.  Does nothing if the item is not in the cache.
            </summary>
            <param name="type"></param>
            <param name="entity"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.ClearCache(System.String)">
            <summary>
            Returns all cache items of a certain type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:PathwaysLib.Utilities.GraphCacheManager.ClearCache">
            <summary>
            Clears all cache items, regardless of type.
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.GraphCacheManager.Instance">
            <summary>
            Get the singleton instance
            </summary>
        </member>
        <member name="T:PathwaysLib.Utilities.HypergeometricDistribution">
             <sourcefile>
            		<project>PathwaysLib</project>
            		<filepath>PathwaysLib/HypergeometicDistribution.cs</filepath>
            		<creation>2005/02/23</creation>
            		<author>
            			<name>Marc R. Reynolds</name>
            			<initials>mrr</initials>
            			<email>marc.reynolds@cwru.edu</email>
            		</author>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:58 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Utilities/HypergeometricDistribution.cs,v 1.1 2008/05/16 21:15:58 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Class which computes the hypergeometric distribution from given parameters
             </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.HypergeometricDistribution.Evaluate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Computes the hypergeometric distribution from given parameters
            </summary>
            <param name="sampleSize">The sample size</param>
            <param name="sampleSuccesses">The number of successful tests in the sample</param>
            <param name="populationSize">The population size</param>
            <param name="populationSuccesses">The number of successful tests in the population</param>
            <returns>The P-value from the given parameters</returns>
            <remarks>
            This libarary currently uses Spreadsheet Gear, which seems to choke on a couple cases of computing the
            Hypergeometric Distribution, specifically when 'sample successes' equals 'population successes'
            </remarks>
        </member>
        <member name="M:PathwaysLib.Utilities.CombinationSolver.#ctor">
            <summary>
            Default constructor; not useful.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.CombinationSolver.Combination(System.Int32,System.Int32)">
            <summary>
            Quickly computes the factorial of a number.
            </summary>
            <param name="n">An integer</param>
            <returns>n!</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.FactorialSolver">
            <summary>
            Solves factorials.
            </summary>
            
        </member>
        <member name="M:PathwaysLib.Utilities.FactorialSolver.#ctor">
            <summary>
            Default constructor; not useful.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.FactorialSolver.Factorial(System.Int32)">
            <summary>
            Quickly computes the factorial of a number.
            </summary>
            <param name="n">An integer</param>
            <returns>n!</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.HyperGraph">
            <summary>
            The HyperGraph class is used to represent and store a pathway.
            In this class, we use an extended adjacency-list to store pathway data,
            use DFS to compute paths between two given molecular entities, and use
            BFS to compute neighbors of a given molecular entity.
            </summary>
            <remarks>
            This was imported from the old pathways service and likely will not be too
            useful for anything but other old functions that were migrated over to the
            current system.  Nothing has been really rewritten except the parts that would
            otherwise crash and burn.
            
            Here be dragons.
            </remarks>
        </member>
        <member name="F:PathwaysLib.Utilities.HyperGraph.NewEdge">
            <summary>
            	A variant to store an edge that includes product_id, product_name, process_id, Process_name;
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.HyperGraph.NodesList">
            <summary>
            	A variant to store an extended ajacency-list. The key field is used to store substrate_id, and the value field is used to store an edge-list according to the substrate_id. 																	   Each edge in edge-list includes a product id, it's name, a process id, and it's name, and it means the substrate can reach the product in the process.
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.HyperGraph.NodeVisited">
            <summary>
            	A variant to store nodes' state information, and the node can be a substrate or product. The key field is Entity_id(substrate_id or product_id), and the value field can be true or false:True for "visited", False for "unvisited"
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.HyperGraph.ProcessVisited">
            <summary>
            	A variant to store processes' state information. The key field is process_id, and the value field can be true or false:True for "visited", False for "unvisited"
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.HyperGraph.objConn">
            <summary>
            	Database connection
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.Maintain(System.Collections.ArrayList)">
            <summary>
            	The function is used to initilize state information for each node and process.
            </summary>
            <param name="MyRow">The record includes the following information: substrate_id,substrate_name,product_id,product_name,process_id,process_name</param>
            <remarks>
            	We need initilize each substrate and product "unvisited" and each process "unvisited"
            </remarks>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.VisitNode(System.String,System.Boolean)">
            <summary>
            	Set state information for a given node with a given state(true, false)	
            </summary>
            <param name="Node_Id">The id of a given node: substrate or product</param>
            <param name="Visited">True or False</param>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.IsNodeVisited(System.String)">
            <summary>
            check whether the node is visited or not
            </summary>
            <param name="Node_Id">he id of a given node: substrate or product</param>
            <returns>True("visited") or False("univisted")</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.VisitProcess(System.String,System.Boolean)">
            <summary>
            	Set state information for a given process with a given state.
            </summary>
            <param name="Process_Id">The id of a given process</param>
            <param name="Visited">True("visited") or False("univisted"</param>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.IsProcessVisited(System.String)">
            <summary>
            check whether the process is visited or not
            </summary>
            <param name="Process_Id">The id of a given process</param>
            <returns>True("visited") or False("univisted")</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.GetEdgeList(System.String)">
            <summary>
            	Given the id of an substrate id, get the edgelist for it from the extended adjancency-list.
            </summary>
            <param name="Node_id">The id of a substrate</param>
            <returns>An arraylist that includes an edge list, and each egde includes a product_id, product name, process_id and process name</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.AddNode(System.String)">
            <summary>
            	Add a new substrate id to the NodesList
            </summary>
            <param name="Substrate_ID">The record includes the following information: substrate_id,substrate_name,product_id,product_name,process_id,process_name</param>
            <returns>An empty edge list of this substrate.</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.AddReversibleEdge(System.Collections.ArrayList)">
            <summary>
            	If the edge is reversible, we exchange subtrates and products and do it like procedure AddEdge do.
            </summary>
            <param name="MyRow">The record includes the following information: substrate_id,substrate_name,product_id,product_name,process_id,process_name</param>			
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.AddEdge(System.Collections.ArrayList)">
            <summary>
            	Add an edge to an edgelist
            </summary>
            <param name="MyRow">The record includes the following information: substrate_id,substrate_name,product_id,product_name,process_id,process_name</param>
            <remarks>
            	If substrate_id is not in the extended adjacency list, we add it and new a edgelist for it; otherwise, we get the edgelist form the extended adjacency list.
            	catch{}finally, construct a new edge from the parameter MyRow and add it into the edgelist.
            </remarks>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.GenerateHyperGraph(System.String,System.Boolean,System.Array)">
            <summary>
            	In this procedure, we execute the pre-defined sql and get all (substrate, product) pair for each process in a given pathway. 
            	For each (substrate, product) pair in a process, we get the edge list of the substrate, and contruct a new edge and try to add it the edge list. If the process is reversible, we need exchange the substrate and the product, construct another edge and add it into the edge list of the product.
            	At the same time, we initialize all substrates, products and processes' state information.
            </summary>
            <param name="strSQL">A sql statement</param>
            <param name="bReversible">This variable represents whether all processes are reversible or not</param>
            <param name="Common_Entities_List">Common entities</param>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.#ctor(System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            	Construct a sql statement by using a given pathway ID and a given organism name and call the GenerateHyperGraph function.
            </summary>
            <param name="Organism_Name">The name of an organism</param>
            <param name="Organism_Group">The organism group</param>
            <param name="Pathway_ID">The ID of a pathway.</param>
            <param name="bReversible">This variable represents whether all processes are reversible or not</param>
            <param name="Common_Entities_List">A list of common entities</param>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.Get_Entity_Name(System.String)">
            <summary>
            	Find a name for a given molecular entity id
            </summary>
            <param name="Entity_ID">The ID of a given entity</param>
            <returns>An string</returns>
            <remarks>An string to store the entity name</remarks>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.ComputePaths(System.String,System.String,System.String)">
            <summary>
            	Compute paths between two molecular_entities_Wanhong. We have a document to talk about the algorithm. We use DFS to compute paths, and make sure that in a path, a process can't occur two times.
            </summary>
            <param name="Molecular_Entity_ID_A">The source node</param>
            <param name="Entity_Name_A">Source node name</param>
            <param name="Molecular_Entity_ID_B">The destination node</param>
            <returns>An arraylist including all paths between two nodes</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperGraph.Expand_An_Entity(System.String,System.String,System.Int32)">
            <summary>
            	The function is to used to expand an entity and get its neighbors in a given step.
            </summary>
            <param name="Molecular_Entity_ID_A">The id of an entity that will be expanded</param>
            <param name="Entity_Name">The name of the entity</param>
            <param name="step">The pre-defined maximum steps</param>
            <returns>An arraylist including all expended edges.</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.HyperlinkBuilder">
            <sourcefile>
            	<project>PathwaysLib</project>
            	<filepath>PathwaysLib/HyperlinkBuilder.cs</filepath>
            	<creation>2006/06/23</creation>
            	<author>
            		<name>Greg Strnad</name>
            		<initials>GJS</initials>
            		<email>gjs4@case.edu</email>
            	</author>
            </sourcefile>
            <summary>
            Generates hyperlinks to processes, pathways, queries, etc. without having to query the
            database for viewIDs.  This adds an additional dependency (DetailForwarding.aspx), but
            this optimization alone speeds up page loading times significantly.  The tradeoff is that
            URLs constructed with this class will be a bit longer than usual (at least 40-some bytes).
            However, the time saved by not repeatedly querying the database should more than make up
            for this slight increase in page size approximately 99.999999999999999999% of the time.  :p
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.#ctor">
            <summary>
            Default constructor; not really used
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructProcessHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerProcess)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a process
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="proc">The process to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructSpeciesHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerSpecies)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a Species
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="proc">The Species to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructProcessHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerProcess,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a process, using a specific title
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="proc">The process to link to</param>
            <param name="label">The text to display</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructProcessHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerGenericProcess)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a (generic) process
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="proc">The (generic) process to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructProcessHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a process
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="id">The ID of the process to link to</param>
            <param name="name">The text to display</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructPathwayHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ConnectedPathwayAndCommonProcesses)">
            <summary>
            Construct a redirecting hyperlink to the detail page for connecting pathways
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="path">The pathway to connect from</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructPathwayHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerPathway)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a pathway
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="path">The pathway to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructPathwayHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a pathway
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="id">The ID of the pathway to link to</param>
            <param name="name">The text to display</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructOrganismGroupHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerOrganismGroup)">
            <summary>
            Construct a redirecting hyperlink to the detail page for an organism group
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="path">The pathway to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructOrganismHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerOrganism)">
            <summary>
            Construct a redirecting hyperlink to the detail page for an organism
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="path">The pathway to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructOrganismGroupHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a pathway
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="id">The ID of the pathway to link to</param>
            <param name="name">The text to display</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructMoleculeHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerMolecularEntity)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a molecular entity
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="mol">The molecular entity to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructMoleculeHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a molecular entity
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="id">The ID of the molecular entity to link to</param>
            <param name="name">The text to display</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructGeneHyperlink(PathwaysLib.Utilities.LinkHelper,PathwaysLib.ServerObjects.ServerGene)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a gene
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="gene">The gene to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructGeneHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String)">
            <summary>
            Construct a redirecting hyperlink to the detail page for a gene
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="gene">The gene to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructRedirectHyperlink(PathwaysLib.Utilities.LinkHelper,System.String,System.String,System.String)">
            <summary>
            Construct a generic redirecting hyperlink.
            </summary>
            <param name="LH">A LinkHelper from which to pull query string parameters</param>
            <param name="id">The link id</param>
            <param name="name">The text to display</param>
            <param name="type">The link type</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructExternalDatabaseHyperlink(PathwaysLib.ServerObjects.ServerExternalDatabase)">
            <summary>
            Construct an external database hyperlink.
            </summary>
            <param name="extDb">The external database to link to</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructExternalDbLinkHyperlink(PathwaysLib.ServerObjects.ServerExternalDbLink)">
            <summary>
            Construct an external database link hyperlink.
            </summary>
            <param name="extDb">The external database link to link to (heh)</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.HyperlinkBuilder.constructBrowserSectionHyperlink(System.String)">
            <summary>
            Construct a browser section hyperlink.
            </summary>
            <param name="id">The link id</param>
            <returns>A hyperlink string</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.LinkHelper">
            <summary>
            Summary description for LinkHelper.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.#ctor(System.Web.HttpRequest)">
            <summary>
            LinkHelper constructor.
            </summary>
            <param name="req">
            Current HttpRequest object.
            </param>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.#ctor(System.Guid)">
            <summary>
            LinkHelper constructor.
            </summary>
            <param name="viewStateID">
            The id of the view state to load.
            </param>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.Finalize">
            <summary>
            Destructor.  Closes dangling db connections (BE: is this correct behavior?? I assume added to try to fix a connection leak... Anyway, ASP.NET does connection pooling, so it probably doesn't matter).
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.PrepareQueryString(System.String,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String)">
            <summary>
            Prepare a query string from the current view state.
            </summary>
            <param name="openSection">
            The section of the browser that is open.
            </param>
            <param name="organism">
            The filtering organism in use.
            </param>
            <param name="openNode1ID">
            The id of the top level open node.
            </param>
            <param name="openNode1Type">
            The type of the top level open node.
            </param>
            <param name="openNode2ID">
            The id of the second level open node.
            </param>
            <param name="openNode2Type">
            The type of the second level open node.
            </param>
            <param name="openNode3ID">
            The id of the third level open node.
            </param>
            <param name="openNode3Type">
            The type of the third level open node.
            </param>
            <param name="displayItemID">
            The id of the currently displayed item.
            </param>
            <param name="displayItemType">
            The type of the currently displayed item.
            </param>
            <returns>
            A query string linking to the requested combination.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.PrepareQueryString(System.String,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            Prepare a query string fromt he current view state.
            </summary>
            <param name="openSection">
            The section of the browser that is open.
            </param>
            <param name="organism">
            The filtering organism in use.
            </param>
            <param name="openNode1ID">
            The id of the top level open node.
            </param>
            <param name="openNode1Type">
            The type of the top level open node.
            </param>
            <param name="openNode2ID">
            The id of the second level open node.
            </param>
            <param name="openNode2Type">
            The type of the second level open node.
            </param>
            <param name="openNode3ID">
            The id of the third level open node.
            </param>
            <param name="openNode3Type">
            The type of the third level open node.
            </param>
            <param name="displayItemID">
            The id of the currently displayed item.
            </param>
            <param name="displayItemType">
            The type of the currently displayed item.
            </param>
            <param name="viewGraph">
            Should the graph be viewed?
            </param>
            <returns>
            A query string linking to the requested combination.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.PrepareQueryString2(System.String,System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            the alternate method for the query string
            </summary>
            <param name="openSection"></param>
            <param name="organism"></param>
            <param name="OpenNode"></param>
            <param name="OpenNodeType"></param>
            <param name="displayItemID"></param>
            <param name="displayItemType"></param>
            <param name="viewGraph"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.QueryString">
            <summary>
            The current query string.
            </summary>
            <returns>
            The current query string.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterSection(System.String)">
            <summary>
            Change to the requested section.
            </summary>
            <param name="newSection">
            The section to change.
            </param>
            <returns>
            Query string with section altered.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterOpenPath(System.Guid,System.String,System.Guid,System.String,System.Guid,System.String)">
            <summary>
            Change the opened browser path.
            </summary>
            <param name="id1">
            Id of the open level 1 node.
            </param>
            <param name="type1">
            Type of the open level 1 node.
            </param>
            <param name="id2">
            Id of the open level 2 node.
            </param>
            <param name="type2">
            Type of the open level 2 node.
            </param>
            <param name="id3">
            Id of the open level 3 node.
            </param>
            <param name="type3">
            Type of the open level 3 node.
            </param>
            <returns>
            Query string with path altered.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterDisplayItem(System.Guid,System.String)">
            <summary>
            Change the displayed item.
            </summary>
            <param name="id">
            Id of the new display item.
            </param>
            <param name="type">
            Type of the new display item.
            </param>
            <returns>
            Query string with display item altered.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterDisplayItem(System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            Change the displayed item.
            </summary>
            <param name="id">
            Id of the new display item.
            </param>
            <param name="type">
            Type of the new display item.
            </param>
            <param name="viewGraph">
            Is the graph visible?
            </param>
            <returns>
            Query string with display item altered.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterOpenPathAndDisplayItem2(System.Collections.Hashtable,System.Collections.Hashtable,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            RJ: store more than level 3. got to 3rd base now lets start scoring
            </summary>
            <param name="OpenNode">
            All the open nodes at any level
            </param>    
            <param name="OpenNodeType">
            Corresponding Types
            </param>   
            <param name="id">
            displayitem/clicked item
            </param>
            <param name="type">
            clicked itemtype
            </param>
            <param name="viewGraph">
            RJ:this would be one of those things I do not wanna get into so I leave it as it was
            </param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterOpenPathAndDisplayItem(System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.String,PathwaysLib.Utilities.Tribool)">
            <summary>
            Alters the open path and the display item.
            </summary>
            <param name="id1">
            Id of the open level 1 node.
            </param>
            <param name="type1">
            Type of the open level 1 node.
            </param>
            <param name="id2">
            Id of the open level 2 node.
            </param>
            <param name="type2">
            Type of the open level 2 node.
            </param>
            <param name="id3">
            Id of the open level 3 node.
            </param>
            <param name="type3">
            Type of the open level 3 node.
            </param>
            <param name="id">
            Id of the new display item.
            </param>
            <param name="type">
            Tyope of the new display item.
            </param>
            <param name="viewGraph">
            Is the graph visible?
            </param>
            <returns>
            Query string with path and display item changed.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterSectionNullifyPathNullifyDisplayItem(System.String)">
            <summary>
            Change section and null the path.
            </summary>
            <param name="section">
            The new section.
            </param>
            <returns>
            The query string with path nulled.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterDisplayItemNullifyQueryParams(System.Guid,System.String)">
            <summary>
            Change display item and null the query parameters.
            </summary>
            <param name="id">The item to change</param>
            <param name="type">The item type</param>
            <returns>A query string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.AlterOrganism(System.String)">
            <summary>
            Change the selected organism.
            </summary>
            <param name="organism">
            The new organism.
            </param>
            <returns>
            The query string with organism changed.
            </returns>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.SetParameter(System.Object,System.Object)">
            <summary>
            Manually set the value of a parameter in the query string.
            </summary>
            <param name="param">
            The parameter to set.
            </param>
            <param name="val">
            The value to give the parameter.
            </param>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.GetParameter(System.String)">
            <summary>
            Acquire set the value of a parameter in the query string.
            </summary>
            <param name="param">
            The parameter to get.
            </param>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.RemoveParameter(System.String)">
            <summary>
            Completely remove a parameter from the query string.
            </summary>
            <param name="param">
            The parameter to nuke.
            </param>
            <remarks>
            Nuking the viewstate parameter does not necessarily guarantee it won't show up later.
            </remarks>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.RemoveParameters">
            <summary>
            Remove all parameters from the parameter list
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.SetAllowedParameters(System.Object[])">
            <summary>
            Set the parameters that will be allowed into the query string on future generations.
            Be sure to use ClearAllowedParameters() to remove the filter when finished!
            </summary>
            <param name="a">
            An array of strings representing parameters that should be allowed into the query string.
            </param>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.SetStandardParameters">
            <summary>
            Set the allowed parameters to be "standard" ones that are defined by a private variable.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.ClearAllowedParameters">
            <summary>
            Clears the allowed parameters filter so anything can once again go through.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.LinkHelper.ReconstructParameters(System.Collections.Hashtable)">
            <summary>
            Fills a hashtable with allowed query string parameters.
            </summary>
            <param name="args">A hashtable with entries for the string parameters</param>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.ParameterName">
            <summary>
            Get the parameter name.
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.Section">
            <summary>
            Get the Section.
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.Organism">
            <summary>
            Get/set the organism.
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode1ID">
            <summary>
            Get the open node 1 id
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode1Type">
            <summary>
            Get the open node 1 type
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode2ID">
            <summary>
            Get the open node 2 id
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode2Type">
            <summary>
            Get the open node 2 type
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode3ID">
            <summary>
            Get the open node 3 id
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode3Type">
            <summary>
            Get the open node 3 type
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.DisplayItemID">
            <summary>
            Get the display item id
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.DisplayItemType">
            <summary>
            Get the display item type
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.ViewGraph">
            <summary>
            Get the graph's visibility.
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNode">
            <summary>
            Get the Open Nodes
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.OpenNodeType">
            <summary>
            Get the Open Node Types
            </summary>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.RedirectParams">
            <summary>
            Get a string that is used for page redirects; this includes the viewID.
            </summary>
            <remarks>
            Note that the string will begin with "&amp;".
            </remarks>
        </member>
        <member name="P:PathwaysLib.Utilities.LinkHelper.PathwaysWebBaseUrl">
            <summary>
            PathwaysWeb.Utilities.UtilityFunctions.PathwaysWebBaseUrl
            </summary>
            
        </member>
        <member name="T:PathwaysLib.Utilities.OrganismMeta">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/OrganismMeta.cs</filepath>
            		<creation>2006/02/22</creation>
            		<author>
            			<name>Brian Lauber</name>
            			<initials>bml</initials>
            			<email>bml8@case.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name></name>
            				<initials></initials>
            				<email></email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:58 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Utilities/OrganismMeta.cs,v 1.1 2008/05/16 21:15:58 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             These functions unify the management of ServerOrganism and ServerOrganismGroup
             </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.OrganismMeta.AllOrganismEntities">
            <summary>
            Return all organisms and organism groups as IOrganismEntity Objects from the system.
            </summary>
            <returns>
            Array of SoapOrganism objects ready to be sent via SOAP.
            </returns>
        </member>
        <member name="T:PathwaysLib.Utilities.PaginationHelper">
            <summary>
            Provides useful utility functions for the search pagination system.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.#ctor">
            <summary>
            Default constructor; doesn't do anything useful.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.AddLinebreakHints(System.String)">
            <summary>
            Adds linebreak hints to the string following certain punctuation marks.
            </summary>
            <param name="s">A string to add hints to</param>
            <returns>A linebreak-hinted string</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.RemoveDuplicateProcesses(System.Collections.ArrayList@)">
            <summary>
            Removes duplicate processes from from a list.
            </summary>
            <param name="list">An ArrayList of processes to process (heh)</param>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.RemoveDuplicateProcessEntities(System.Collections.ArrayList@)">
            <summary>
            Removes duplicate process entites from from a list.
            </summary>
            <param name="list">An ArrayList of process entities to process</param>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.ClearUpperNodes(System.Collections.Hashtable@)">
            <summary>
            Clears out display item nodes above the current level.
            </summary>
            <param name="args">A hashtable containing the nodes to clear</param>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.LoadStandardArgs(PathwaysLib.Utilities.LinkHelper,System.Collections.Hashtable@)">
            <summary>
            Fills a hashtable with standard arguments used by all root-level pagination menus.
            </summary>
            <param name="LH">A LinkHelper object that represents the current viewstate</param>
            <param name="args">A hashtable to fill with values</param>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.string2SearchMethod(System.String)">
            <summary>
            Converts a string into a SearchMethod enum.
            </summary>
            <param name="str">The string to convert</param>
            <returns> SearchMethod object whose value is equal to str</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.PaginationHelper.ArgumentList(System.Collections.Hashtable)">
            <summary>
            Converts an argument hashtable into a string to be sent via JavaScript.
            </summary>
            <returns>A JavaScript-ready string of additional arguments</returns>
        </member>
        <member name="T:PathwaysLib.Utilities.QueryLogger">
            <summary>
            Logs DBWrapper queries, their calling functions, and the time they take.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.QueryLogger.#ctor">
            <summary>
            Default constructor; not really useful
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.QueryLogger.OpenLog">
            <summary>
            Opens a log for writing.
            </summary>
            <returns>Whether the open was successful</returns>
        </member>
        <member name="M:PathwaysLib.Utilities.QueryLogger.CloseLog">
            <summary>
            Closes an open log.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.QueryLogger.StartTimer">
            <summary>
            Begin the log timer.
            </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.QueryLogger.UpdateLog(System.String,System.String)">
            <summary>
            Stop the timer and update the logfile.
            </summary>
            <param name="function">The calling function</param>
            <param name="sql">The SQL statement executed</param>
        </member>
        <member name="P:PathwaysLib.Utilities.QueryLogger.CurrentURL">
            <summary>
            Calling URL
            </summary>
        </member>
        <member name="T:PathwaysLib.Utilities.Tribool">
            <summary>
            Represents a boolean type in the database that may also be null.
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.Tribool.False">
            <summary>
            The boolean value false.
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.Tribool.True">
            <summary>
            The boolean value true.
            </summary>
        </member>
        <member name="F:PathwaysLib.Utilities.Tribool.Null">
            <summary>
            The value DBNull.
            </summary>
        </member>
        <member name="T:PathwaysLib.Utilities.Util">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>PathwaysLib/Utilities/Util.cs</filepath>
            		<creation>2006/08/09</creation>
            		<author>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: sarp $</cvs_author>
            			<cvs_date>$Date: 2010/11/15 20:40:57 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Utilities/Util.cs,v 1.6 2010/11/15 20:40:57 sarp Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.6 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Static class containing assorted utility functions.  
             </summary>
        </member>
        <member name="M:PathwaysLib.Utilities.Util.ConvertToSBOLink(System.String)">
            <summary>
            Converts an SBO number into a full SBO link.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.Util.ConvertToSBO(System.String)">
            <summary>
            Converts an SBO number into SBO format
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:PathwaysLib.Utilities.Util.GuidListFromString(System.String)">
            <summary>
            Convert a string-encoded list of GUIDs deliminated by semi-colon (;) 
            into an array of type Guid.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:PathwaysLib.Utilities.XmlUtil">
             <sourcefile>
            		<project>Pathways</project>
            		<filepath>GraphLayoutLib/GraphBuilding/XmlUtil.cs</filepath>
            		<creation>2005/10/28</creation>
            		<author>
            				<name>Brendan Elliott</name>
            				<initials>BE</initials>
            				<email>bxe7@cwru.edu</email>
            		</author>
            		<contributors>
            			<contributor>
            				<name>none</name>
            				<initials>none</initials>
            				<email>none</email>
            			</contributor>
            		</contributors>
            		<cvs>
            			<cvs_author>$Author: mustafa $</cvs_author>
            			<cvs_date>$Date: 2008/05/16 21:15:58 $</cvs_date>
            			<cvs_header>$Header: /var/lib/cvs/PathCase_SystemsBiology/PathwaysLib/Utilities/XmlUtil.cs,v 1.1 2008/05/16 21:15:58 mustafa Exp $</cvs_header>
            			<cvs_branch>$Name:  $</cvs_branch>
            			<cvs_revision>$Revision: 1.1 $</cvs_revision>
            		</cvs>
            </sourcefile>
             <summary>
             Contains a set of static convience functions for Xml document building using DOM.
             </summary>
        </member>
        <member name="T:PathwaysLib.WebControls.CollapsiblePanelButton">
            <summary>
            A button to trigger collapsing panels; DEPRECATED **
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.CollapsiblePanelButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.CollapsiblePanelButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">The HTML writer to write out to.</param>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.Collapsed">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.CollapseType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.ExpandImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.CollapsImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.TargetID">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.ShowToggle">
            <summary>
            
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanelButton.TitleControls">
            <summary>
            
            </summary>
        </member>
        <member name="T:PathwaysLib.WebControls.CollapsiblePanel">
            <summary>
            A panel that can expand and collapse when its title is clicked.  Supports Ajax loading.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.CollapsiblePanel.#ctor">
            <summary>
            Default constructor; sets the initial CSS class.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.CollapsiblePanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">The HTML writer to write out to.</param>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Title">
            <summary>
            The title string to display.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Collapsed">
            <summary>
            Whether the panel is currently collapsed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Collapsible">
            <summary>
            Whether the panel can be collapsed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.ToggleOnly">
            <summary>
            Whether the panel can be collapsed only by clicking the toggle button.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.AutoLoad">
            <summary>
            Whether this panel should automatically load after the page has loaded.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.ForcedAutoLoad">
            <summary>
            Whether this panel should automatically load immediately after its control is built.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.CollapseType">
            <summary>
            The CSS display type to use when re-expanding the panel.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.ExpandImage">
            <summary>
            The image to use when the panel can be expanded.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.CollapseImage">
            <summary>
            The image to use when the panel can be collapsed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Arguments">
            <summary>
            A hashtable of additional arguments to pass when invoked.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.ShowToggle">
            <summary>
            Whether or not to show the expand/collapse button.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Controls">
            <summary>
            Controls this panel will render.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.Buttons">
            <summary>
            Controls this panel will render as "buttons" in the upper-right of the panel.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.CollapsiblePanel.ControlName">
            <summary>
            The name of the control to call via JavaScript when collapsing/expanding.
            </summary>
        </member>
        <member name="T:PathwaysLib.WebControls.ContentBrowserItem">
            <summary>
            A control representing an item on the content browser, such as a pathway or process,
            that can contain its own subcontrols to display additional information.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentBrowserItem.#ctor">
            <summary>
            Default constructor; not all that useful
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentBrowserItem.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">The HTML writer to write out to.</param>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.Title">
            <summary>
            The item name to display.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.Selected">
            <summary>
            Whether the item is currently selected.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.Collapsed">
            <summary>
            Whether the item is collapsed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.AutoLoad">
            <summary>
            Whether this panel should automatically load after the page has loaded.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.ForcedAutoLoad">
            <summary>
            Whether this panel should automatically load immediately after its control is built.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.ShowToggle">
            <summary>
            Whether or not to show the expand/collapse button.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.CollapseType">
            <summary>
            The CSS display type to use when re-expanding the panel.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.ExpandImage">
            <summary>
            The image to use when the panel can be expanded.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.CollapseImage">
            <summary>
            The image to use when the panel can be collapsed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.NoItemImage">
            <summary>
            The image to use when the control toggle should not be displayed.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.Arguments">
            <summary>
            A hashtable of additional arguments to pass when clicked.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.Controls">
            <summary>
            Controls this panel will render.
            </summary>
        </member>
        <member name="P:PathwaysLib.WebControls.ContentBrowserItem.ControlName">
            <summary>
            The name of the control to call via JavaScript.
            </summary>
        </member>
        <member name="T:PathwaysLib.WebControls.ContentPanel">
            <summary>
            A generic content panel from which other Ajax-aware controls derive from.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentPanel.#ctor">
            <summary>
            Default constructor... not really useful.
            </summary>
        </member>
        <member name="F:PathwaysLib.WebControls.ContentPanel._loadStyle">
            <summary>
            What class to use when generating loading messages.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentPanel.Build(System.Collections.Hashtable)">
            <summary>
            Constructs all the stuff that will be placed in the content panel.
            </summary>
            <param name="args">A hashtable of arguments to process</param>
            <returns>A hashtable of additional data</returns>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentPanel.BuildControl(System.Collections.Hashtable)">
            <summary>
            Wraps Build to allow for uniform error trapping.
            </summary>
            <param name="args">A hashtable of arguments to process</param>
            <returns>A hashtable of additional data</returns>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentPanel.NotLoadedBody(System.String)">
            <summary>
            Determines what to display when there is nothing yet loaded.
            </summary>
            <param name="text">The string to display</param>
            <returns>A string of XHTML (that should be turned into a control)</returns>
        </member>
        <member name="M:PathwaysLib.WebControls.ContentPanel.NotLoadedTitle(System.String)">
            <summary>
            Determines what title to display when there is nothing yet loaded.
            </summary>
            <param name="text">The string to display</param>
            <returns>A string of XHTML</returns>
        </member>
        <member name="T:PathwaysLib.WebControls.ControlBuilder">
            <summary>
            Builds simple controls for things like Literals and the like.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ControlBuilder.#ctor">
            <summary>
            Default constructor... not used.
            </summary>
        </member>
        <member name="M:PathwaysLib.WebControls.ControlBuilder.BuildLiteral(System.String)">
            <summary>
            Turns a string of text into a literal control.
            </summary>
            <param name="text">The HTML for the control.</param>
            <returns>A literal control.</returns>
        </member>
    </members>
</doc>
